{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\src\\\\core\\\\Protected\\\\Notifications\\\\UpdateNotifications.tsx\",\n    _s = $RefreshSig$();\n\nimport NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport Button from \"components/UI/Forms/Buttons\";\nimport { GeneralCard } from \"components/UI/GeneralCard\";\nimport { useFormik } from \"formik\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { getNotificationDetailsAction } from \"store/modules/notifications/getNotifications\";\nimport { postNotificationsAction } from \"store/modules/notifications/postNotifications\";\nimport { updateNotificationsAction } from \"store/modules/notifications/updateNotifications\";\nimport formatDate from \"utils/utilsFunction/date-converter\";\nimport { createNotificationInitialValues, createNotificationValidationSchema } from \"./scheme\";\n\nconst GeneralInfo = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation(\"home\");\n  const [initialValues, setInitialValues] = React.useState(createNotificationInitialValues);\n  React.useEffect(() => {\n    if (props.schemeDetails) {\n      var _props$schemeDetails;\n\n      props.getNotificationDetailsAction((_props$schemeDetails = props.schemeDetails) === null || _props$schemeDetails === void 0 ? void 0 : _props$schemeDetails.slug);\n    }\n  }, [props.schemeDetails]);\n  React.useEffect(() => {\n    if (props.notificationDetails && props.notificationDetails instanceof Array && props.notificationDetails[0]) {\n      setInitialValues(props.notificationDetails[0]);\n    }\n  }, [props.notificationDetails]);\n  const {\n    values,\n    errors,\n    touched,\n    setFieldTouched,\n    setFieldValue,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = useFormik({\n    enableReinitialize: true,\n    initialValues: initialValues,\n    validationSchema: createNotificationValidationSchema,\n    onSubmit: async (values, _ref) => {\n      var _values$system_date_f;\n\n      let {\n        resetForm\n      } = _ref;\n      let response;\n      const requestData = { ...values,\n        system_date_format: values === null || values === void 0 ? void 0 : (_values$system_date_f = values.system_date_format) === null || _values$system_date_f === void 0 ? void 0 : _values$system_date_f.value\n      };\n\n      if (props.notificationDetails && props.notificationDetails.length > 0) {\n        var _props$notificationDe;\n\n        response = await props.updateNotificationsAction((_props$notificationDe = props.notificationDetails[0]) === null || _props$notificationDe === void 0 ? void 0 : _props$notificationDe.id, requestData);\n      } else {\n        response = await props.postNotificationsAction(requestData);\n      }\n\n      console.log(response, \"responsss\");\n\n      if (response.status === 201 || response.status === 200) {\n        var _props$schemeDetails2;\n\n        props.getNotificationDetailsAction((_props$schemeDetails2 = props.schemeDetails) === null || _props$schemeDetails2 === void 0 ? void 0 : _props$schemeDetails2.slug);\n        toast.success(\"Notification Updated Successfully\");\n      } else {\n        const errorList = response.data && response.data.error;\n\n        if (errorList instanceof Array) {\n          errorList.forEach(item => {\n            toast.error(item);\n          });\n        }\n      }\n    }\n  });\n  console.log(props.notificationDetails, \"initialValuesinitialValues\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container py-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GeneralCard, {\n    title: t(\"home:updateNotifications\"),\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit();\n    },\n    className: \"verticalForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, t(\"home:initialDate\"), \":\"), props.schemeDetails && props.schemeDetails.system_date_format === \"nep\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NepaliDatePicker, {\n    value: values.initial_date,\n    name: \"initial_date\",\n    onChange: e => {\n      setFieldValue(\"initial_date\", e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EnglishDatePicker, {\n    name: \"initial_date\",\n    value: values.initial_date,\n    handleChange: e => {\n      setFieldValue(\"initial_date\", formatDate(e));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"initial_date\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, t(\"home:inp\"), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"income_notification_period\",\n    value: values.income_notification_period,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"income_notification_period\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, t(\"home:enp\"), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"expenditure_notification_period\",\n    value: values.expenditure_notification_period,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"expenditure_notification_period\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, t(\"home:trnp\"), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"test_result_notification_period\",\n    value: values.test_result_notification_period,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"test_result_notification_period\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, t(\"home:srnp\"), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"supply_record_notification_period\",\n    value: values.supply_record_notification_period,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"supply_record_notification_period\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, t(\"home:mnb\"), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"maintenance_notify_before\",\n    value: values.maintenance_notify_before,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"maintenance_notify_before\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, t(\"home:mna\"), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"maintenance_notify_after\",\n    value: values.maintenance_notify_after,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"maintenance_notify_after\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 text-right mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn  mr-3\",\n    text: t(\"home:save\"),\n    type: \"submit\",\n    disabled: props.loading,\n    loading: props.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\n_s(GeneralInfo, \"z/Vj99uXU7ui2LUm4ImGZx73Rfk=\", false, function () {\n  return [useTranslation, useFormik];\n});\n\n_c = GeneralInfo;\n\nconst mapStateToProps = state => ({\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\n  notificationDetails: state.notifications.getNotifications.data,\n  loading: state.notifications.updateNotifications.isFetching\n});\n\nconst mapDispatchToProps = {\n  updateNotificationsAction: updateNotificationsAction,\n  getNotificationDetailsAction: getNotificationDetailsAction,\n  postNotificationsAction: postNotificationsAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(GeneralInfo);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GeneralInfo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/core/Protected/Notifications/UpdateNotifications.tsx"],"names":["NepaliDatePicker","EnglishDatePicker","FormikValidationError","toast","Button","GeneralCard","useFormik","React","useTranslation","connect","getNotificationDetailsAction","postNotificationsAction","updateNotificationsAction","formatDate","createNotificationInitialValues","createNotificationValidationSchema","GeneralInfo","props","t","initialValues","setInitialValues","useState","useEffect","schemeDetails","slug","notificationDetails","Array","values","errors","touched","setFieldTouched","setFieldValue","handleChange","handleBlur","handleSubmit","enableReinitialize","validationSchema","onSubmit","resetForm","response","requestData","system_date_format","value","length","id","console","log","status","success","errorList","data","error","forEach","item","e","preventDefault","initial_date","income_notification_period","expenditure_notification_period","test_result_notification_period","supply_record_notification_period","maintenance_notify_before","maintenance_notify_after","loading","mapStateToProps","state","waterSchemeData","waterSchemeDetailsData","notifications","getNotifications","updateNotifications","isFetching","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getNotificationDetailsAction } from \"store/modules/notifications/getNotifications\";\r\nimport { postNotificationsAction } from \"store/modules/notifications/postNotifications\";\r\nimport { updateNotificationsAction } from \"store/modules/notifications/updateNotifications\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport formatDate from \"utils/utilsFunction/date-converter\";\r\nimport { createNotificationInitialValues, createNotificationValidationSchema } from \"./scheme\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst GeneralInfo = (props: Props) => {\r\n  const { t } = useTranslation(\"home\");\r\n\r\n  const [initialValues, setInitialValues] = React.useState<any>(createNotificationInitialValues);\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeDetails) {\r\n      props.getNotificationDetailsAction(props.schemeDetails?.slug);\r\n    }\r\n  }, [props.schemeDetails]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      props.notificationDetails &&\r\n      props.notificationDetails instanceof Array &&\r\n      props.notificationDetails[0]\r\n    ) {\r\n      setInitialValues(props.notificationDetails[0]);\r\n    }\r\n  }, [props.notificationDetails]);\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialValues,\r\n    validationSchema: createNotificationValidationSchema,\r\n    onSubmit: async (values: any, { resetForm }) => {\r\n      let response;\r\n      const requestData = {\r\n        ...values,\r\n        system_date_format: values?.system_date_format?.value,\r\n      };\r\n      if (props.notificationDetails && props.notificationDetails.length > 0) {\r\n        response = await props.updateNotificationsAction(\r\n          props.notificationDetails[0]?.id,\r\n          requestData\r\n        );\r\n      } else {\r\n        response = await props.postNotificationsAction(requestData);\r\n      }\r\n\r\n      console.log(response, \"responsss\");\r\n\r\n      if (response.status === 201 || response.status === 200) {\r\n        props.getNotificationDetailsAction(props.schemeDetails?.slug);\r\n        toast.success(\"Notification Updated Successfully\");\r\n      } else {\r\n        const errorList = response.data && response.data.error;\r\n        if (errorList instanceof Array) {\r\n          errorList.forEach((item) => {\r\n            toast.error(item);\r\n          });\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n  console.log(props.notificationDetails, \"initialValuesinitialValues\");\r\n\r\n  return (\r\n    <div className=\"container py-3 \">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12\">\r\n          <GeneralCard title={t(\"home:updateNotifications\")} className=\"text-left\">\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handleSubmit();\r\n              }}\r\n              className=\"verticalForm\"\r\n            >\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-group \">\r\n                    <label htmlFor=\"\" className=\"mr-1 \">\r\n                      {t(\"home:initialDate\")}:\r\n                    </label>\r\n\r\n                    {props.schemeDetails && props.schemeDetails.system_date_format === \"nep\" ? (\r\n                      <>\r\n                        <NepaliDatePicker\r\n                          value={values.initial_date}\r\n                          name=\"initial_date\"\r\n                          onChange={(e) => {\r\n                            setFieldValue(\"initial_date\", e);\r\n                          }}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <EnglishDatePicker\r\n                          name=\"initial_date\"\r\n                          value={values.initial_date}\r\n                          handleChange={(e) => {\r\n                            setFieldValue(\"initial_date\", formatDate(e));\r\n                          }}\r\n                        />\r\n                      </>\r\n                    )}\r\n                    <FormikValidationError name=\"initial_date\" errors={errors} touched={touched} />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-group \">\r\n                    <label htmlFor=\"\" className=\"mr-1 \">\r\n                      {t(\"home:inp\")}:\r\n                    </label>\r\n\r\n                    <input\r\n                      className=\"form-control\"\r\n                      name=\"income_notification_period\"\r\n                      value={values.income_notification_period}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <FormikValidationError\r\n                      name=\"income_notification_period\"\r\n                      errors={errors}\r\n                      touched={touched}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-group \">\r\n                    <label htmlFor=\"\" className=\"mr-1 \">\r\n                      {t(\"home:enp\")}:\r\n                    </label>\r\n\r\n                    <input\r\n                      className=\"form-control\"\r\n                      name=\"expenditure_notification_period\"\r\n                      value={values.expenditure_notification_period}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <FormikValidationError\r\n                      name=\"expenditure_notification_period\"\r\n                      errors={errors}\r\n                      touched={touched}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-group \">\r\n                    <label htmlFor=\"\" className=\"mr-1 \">\r\n                      {t(\"home:trnp\")}:\r\n                    </label>\r\n\r\n                    <input\r\n                      className=\"form-control\"\r\n                      name=\"test_result_notification_period\"\r\n                      value={values.test_result_notification_period}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <FormikValidationError\r\n                      name=\"test_result_notification_period\"\r\n                      errors={errors}\r\n                      touched={touched}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-group \">\r\n                    <label htmlFor=\"\" className=\"mr-1 \">\r\n                      {t(\"home:srnp\")}:\r\n                    </label>\r\n\r\n                    <input\r\n                      className=\"form-control\"\r\n                      name=\"supply_record_notification_period\"\r\n                      value={values.supply_record_notification_period}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <FormikValidationError\r\n                      name=\"supply_record_notification_period\"\r\n                      errors={errors}\r\n                      touched={touched}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-group \">\r\n                    <label htmlFor=\"\" className=\"mr-1 \">\r\n                      {t(\"home:mnb\")}:\r\n                    </label>\r\n\r\n                    <input\r\n                      className=\"form-control\"\r\n                      name=\"maintenance_notify_before\"\r\n                      value={values.maintenance_notify_before}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <FormikValidationError\r\n                      name=\"maintenance_notify_before\"\r\n                      errors={errors}\r\n                      touched={touched}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-group \">\r\n                    <label htmlFor=\"\" className=\"mr-1 \">\r\n                      {t(\"home:mna\")}:\r\n                    </label>\r\n\r\n                    <input\r\n                      className=\"form-control\"\r\n                      name=\"maintenance_notify_after\"\r\n                      value={values.maintenance_notify_after}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <FormikValidationError\r\n                      name=\"maintenance_notify_after\"\r\n                      errors={errors}\r\n                      touched={touched}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 text-right mt-5\">\r\n                  <Button\r\n                    className=\"btn custom-btn  mr-3\"\r\n                    text={t(\"home:save\")}\r\n                    type=\"submit\"\r\n                    disabled={props.loading}\r\n                    loading={props.loading}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </GeneralCard>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  notificationDetails: state.notifications.getNotifications.data,\r\n  loading: state.notifications.updateNotifications.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateNotificationsAction: updateNotificationsAction,\r\n  getNotificationDetailsAction: getNotificationDetailsAction,\r\n  postNotificationsAction: postNotificationsAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(GeneralInfo);\r\n"]},"metadata":{},"sourceType":"module"}