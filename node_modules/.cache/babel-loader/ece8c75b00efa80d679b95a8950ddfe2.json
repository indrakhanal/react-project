{"ast":null,"code":"import Axios from \"axios\";\nimport TokenService from \"../jwt-token/jwt-token\";\nconst basicAuth = {\n  username: \"clientid\",\n  password: \"secret\"\n};\n\nconst getGrantType = () => ({\n  key: \"grant_type\",\n  value: \"password\"\n}); // Cancel a request using a cancel token.\n\n\nconst cancelToken = Axios.CancelToken;\nconst source = cancelToken.source();\nexport default function initApiRequest(apiDetails, requestData, requestMethod, params, cancelSource) {\n  var _TokenService$getAcce, _TokenService$getAcce2;\n\n  // API URL\n  let url = process.env.REACT_APP_API_ENDPOINT;\n  const access_token = (_TokenService$getAcce = TokenService.getAccessToken()) === null || _TokenService$getAcce === void 0 ? void 0 : (_TokenService$getAcce2 = _TokenService$getAcce.tokens) === null || _TokenService$getAcce2 === void 0 ? void 0 : _TokenService$getAcce2.access;\n  const headers = getRequestHeaders(apiDetails, access_token);\n  const transformedRequestData = transformRequestData(apiDetails, requestData);\n\n  if (transformedRequestData instanceof FormData) {\n    debugger;\n    console.log(transformedRequestData, 'transdatattt');\n  }\n\n  let axiosReqParams = {\n    url: apiDetails.controllerName,\n    method: requestMethod,\n    baseURL: url,\n    responseType: 'json',\n    timeout: 60 * 3 * 1000,\n    cancelToken: cancelSource ? cancelSource.token : source.token,\n    headers: headers,\n    ...transformedRequestData\n  };\n\n  if (params) {\n    axiosReqParams = { ...axiosReqParams,\n      params: params\n    };\n  }\n\n  return Axios.request(axiosReqParams).then(response => response).catch(error => {\n    const errorResponse = manageErrorResponse(error);\n    throw errorResponse;\n  });\n}\n;\n\nconst getRequestHeaders = (apiDetails, access_token) => {\n  var _TokenService$getAcce3, _TokenService$getAcce4;\n\n  let headers = {\n    \"Content-Type\": \"application/json\"\n  };\n\n  if (access_token) {\n    headers = { ...headers,\n      \"Authorization\": \"Bearer \" + access_token\n    };\n  }\n\n  switch (apiDetails.requestBodyType) {\n    case \"QUERY-STRING\":\n      headers = { ...headers,\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      };\n      break;\n\n    case \"FORM-DATA\":\n      headers = { ...headers,\n        \"Content-Type\": \"multipart/form-data\"\n      };\n      break;\n\n    case \"NO-AUTH\":\n      if (!((_TokenService$getAcce3 = TokenService.getAccessToken()) !== null && _TokenService$getAcce3 !== void 0 && (_TokenService$getAcce4 = _TokenService$getAcce3.tokens) !== null && _TokenService$getAcce4 !== void 0 && _TokenService$getAcce4.access)) {\n        delete headers[\"Authorization\"];\n      }\n\n      break;\n\n    default:\n      headers = { ...headers\n      };\n  }\n\n  return headers;\n};\n\nconst transformRequestData = (apiDetails, requestData) => {\n  let transformedRequestData = {\n    data: requestData\n  };\n\n  switch (apiDetails.requestBodyType) {\n    case \"AUTH\":\n      // const grant_type = getGrantType();\n      // transformedRequestData.auth = basicAuth;\n      transformedRequestData.data = requestData; // transformedRequestData.data.append(grant_type.key, grant_type.value);\n\n      break;\n\n    case \"FORM-DATA\":\n      transformedRequestData.data = getFormData(requestData);\n      break;\n\n    case \"QUERY-STRING\":\n      transformedRequestData.data = getQueryString(requestData);\n      break;\n\n    default:\n      transformedRequestData.data = requestData;\n      break;\n  }\n\n  return transformedRequestData;\n};\n\nfunction getQueryString(data) {\n  return new URLSearchParams(data);\n}\n\nfunction getFormData(requestData) {\n  let formData = new FormData();\n  console.log(requestData, 'transdatattt');\n\n  for (let data in requestData) {\n    if (requestData[data] instanceof Array) {\n      requestData[data].forEach((dataEl, index) => {\n        if (dataEl instanceof Object) {\n          Object.keys(dataEl).forEach(elKey => formData.append(`${data}[${index}].${elKey}`, dataEl[elKey]));\n        }\n      });\n    } else if (requestData[data] instanceof File) {\n      formData.append(data, requestData[data]);\n    } else if (requestData[data] instanceof Object) {\n      Object.entries(requestData[data]).forEach(_ref => {\n        let [key, value] = _ref;\n        return formData.append(`${data}.${key}`, value);\n      });\n    } else {\n      console.log(data, \"data insodez\");\n      formData.append(data, requestData[data]);\n    }\n  }\n\n  return formData;\n}\n\nconst manageErrorResponse = error => {\n  const {\n    message,\n    config,\n    code,\n    request,\n    response,\n    isAxiosError\n  } = error;\n  let errorResponse = {\n    message: message,\n    // Something happened in setting up the request that triggered an Error\n    data: null,\n    status: code || 400,\n    noconnection: false,\n    config: config,\n    // Request Params Configs\n    isAxiosError: isAxiosError //If Axios Error\n\n  };\n\n  if (response) {\n    errorResponse.data = response.data; // The server responded with a status code and data\n  } else if (request) {\n    errorResponse.message = \"Server could not be reached.\"; // No response was received\n\n    errorResponse.noconnection = true;\n  }\n\n  return errorResponse;\n};","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/services/api-request/api-request.ts"],"names":["Axios","TokenService","basicAuth","username","password","getGrantType","key","value","cancelToken","CancelToken","source","initApiRequest","apiDetails","requestData","requestMethod","params","cancelSource","url","process","env","REACT_APP_API_ENDPOINT","access_token","getAccessToken","tokens","access","headers","getRequestHeaders","transformedRequestData","transformRequestData","FormData","console","log","axiosReqParams","controllerName","method","baseURL","responseType","timeout","token","request","then","response","catch","error","errorResponse","manageErrorResponse","requestBodyType","data","getFormData","getQueryString","URLSearchParams","formData","Array","forEach","dataEl","index","Object","keys","elKey","append","File","entries","message","config","code","isAxiosError","status","noconnection"],"mappings":"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","sourcesContent":["import Axios, {\r\n    AxiosResponse,\r\n    AxiosError,\r\n    AxiosRequestConfig,\r\n    CancelTokenSource,\r\n    CancelTokenStatic,\r\n    Method,\r\n    AxiosBasicCredentials,\r\n} from \"axios\";\r\nimport { apiDetailType } from \"store/actionNames\";\r\n\r\nimport TokenService from \"../jwt-token/jwt-token\";\r\n\r\ninterface RequestParam {\r\n    [key: string]: any\r\n}\r\n\r\nconst basicAuth: AxiosBasicCredentials = {\r\n    username: \"clientid\",\r\n    password: \"secret\",\r\n};\r\n\r\nconst getGrantType = () => ({ key: \"grant_type\", value: \"password\" });\r\n\r\n// Cancel a request using a cancel token.\r\nconst cancelToken: CancelTokenStatic = Axios.CancelToken;\r\nconst source: CancelTokenSource = cancelToken.source();\r\n\r\nexport default function initApiRequest(apiDetails: apiDetailType, requestData: any, requestMethod: Method, params?: RequestParam, cancelSource?: CancelTokenSource) {\r\n    // API URL\r\n    let url = process.env.REACT_APP_API_ENDPOINT as string;\r\n    const access_token: string = TokenService.getAccessToken()?.tokens?.access;\r\n\r\n    const headers = getRequestHeaders(apiDetails, access_token);\r\n    const transformedRequestData = transformRequestData(apiDetails, requestData);\r\n\r\n    if (transformedRequestData instanceof FormData) {\r\n        debugger;\r\n        console.log(transformedRequestData, 'transdatattt')\r\n    }\r\n\r\n    let axiosReqParams: AxiosRequestConfig = {\r\n        url: apiDetails.controllerName,\r\n        method: requestMethod,\r\n        baseURL: url,\r\n        responseType: 'json',\r\n        timeout: 60 * 3 * 1000,\r\n        cancelToken: cancelSource ? cancelSource.token : source.token,\r\n        headers: headers,\r\n        ...transformedRequestData,\r\n    };\r\n\r\n    if (params) {\r\n        axiosReqParams = {\r\n            ...axiosReqParams,\r\n            params: params,\r\n        }\r\n    }\r\n\r\n    return Axios.request(axiosReqParams)\r\n        .then((response: AxiosResponse) => response)\r\n        .catch((error: AxiosError) => {\r\n            const errorResponse = manageErrorResponse(error);\r\n            throw errorResponse;\r\n        });\r\n};\r\n\r\nconst getRequestHeaders = (apiDetails: apiDetailType, access_token: string) => {\r\n\r\n    let headers: { [key: string]: string } = { \"Content-Type\": \"application/json\" };\r\n\r\n    if (access_token) {\r\n        headers = { ...headers, \"Authorization\": \"Bearer \" + access_token }\r\n    }\r\n\r\n    switch (apiDetails.requestBodyType) {\r\n        case \"QUERY-STRING\":\r\n            headers = {\r\n                ...headers,\r\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            };\r\n            break;\r\n        case \"FORM-DATA\":\r\n            headers = {\r\n                ...headers,\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            };\r\n            break;\r\n        case \"NO-AUTH\":\r\n            if (!TokenService.getAccessToken()?.tokens?.access) {\r\n                delete headers[\"Authorization\"];\r\n            }\r\n            break;\r\n        default:\r\n            headers = { ...headers };\r\n    }\r\n    return headers;\r\n};\r\n\r\ninterface TransformedRequestData {\r\n    auth?: AxiosBasicCredentials,\r\n    data: any\r\n}\r\nconst transformRequestData = (apiDetails: apiDetailType, requestData: any) => {\r\n    let transformedRequestData: TransformedRequestData = { data: requestData };\r\n\r\n    switch (apiDetails.requestBodyType) {\r\n        case \"AUTH\":\r\n            // const grant_type = getGrantType();\r\n            // transformedRequestData.auth = basicAuth;\r\n            transformedRequestData.data = requestData;\r\n            // transformedRequestData.data.append(grant_type.key, grant_type.value);\r\n            break;\r\n        case \"FORM-DATA\":\r\n            transformedRequestData.data = getFormData(requestData);\r\n            break;\r\n        case \"QUERY-STRING\":\r\n            transformedRequestData.data = getQueryString(requestData);\r\n            break;\r\n        default:\r\n            transformedRequestData.data = requestData;\r\n            break;\r\n    }\r\n\r\n    return transformedRequestData;\r\n};\r\n\r\nfunction getQueryString(data: { [key: string]: string }) {\r\n    return new URLSearchParams(data);\r\n}\r\n\r\nfunction getFormData(requestData: { [key: string]: any }) {\r\n    let formData = new FormData();\r\n    console.log(requestData, 'transdatattt')\r\n\r\n    for (let data in requestData) {\r\n        if (requestData[data] instanceof Array) {\r\n            requestData[data].forEach((dataEl: any, index: number) => {\r\n                if (dataEl instanceof Object) {\r\n                    Object.keys(dataEl).forEach((elKey) => formData.append(`${data}[${index}].${elKey}`, dataEl[elKey]))\r\n                }\r\n            });\r\n        }\r\n        else if (requestData[data] instanceof File) {\r\n            formData.append(data, requestData[data]);\r\n        }\r\n        else if (requestData[data] instanceof Object) {\r\n            Object.entries(requestData[data]).forEach(([key, value]: [string, any]) => formData.append(`${data}.${key}`, value))\r\n        }\r\n        else {\r\n            console.log(data, \"data insodez\")\r\n            formData.append(data, requestData[data]);\r\n        }\r\n    }\r\n\r\n    return formData;\r\n}\r\n\r\nconst manageErrorResponse = (error: AxiosError) => {\r\n    const { message, config, code, request, response, isAxiosError } = error;\r\n\r\n    let errorResponse = {\r\n        message: message, // Something happened in setting up the request that triggered an Error\r\n        data: null,\r\n        status: code || 400,\r\n        noconnection: false,\r\n        config: config, // Request Params Configs\r\n        isAxiosError: isAxiosError //If Axios Error\r\n    };\r\n\r\n    if (response) {\r\n        errorResponse.data = response.data; // The server responded with a status code and data\r\n    } else if (request) {\r\n        errorResponse.message = \"Server could not be reached.\"; // No response was received\r\n        errorResponse.noconnection = true;\r\n    }\r\n\r\n    return errorResponse;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}