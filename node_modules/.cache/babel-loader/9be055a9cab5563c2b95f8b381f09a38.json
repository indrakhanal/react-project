{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\src\\\\core\\\\Protected\\\\Finance\\\\CashBook\\\\Expenditure\\\\ExpenseForm.tsx\",\n    _s = $RefreshSig$();\n\nimport NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport Button from \"components/UI/Forms/Buttons\";\nimport { useFormik } from \"formik\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { getExpenditureAction } from \"store/modules/expenditure/getExpenditure\";\nimport { getExpenditureCategoryAction } from \"store/modules/expenditure/getExpenditureCategory\";\nimport { getPreviousExpenditureTotalAction } from \"store/modules/expenditure/getPreviousExpenditureTotal\";\nimport { postExpenseAction } from \"store/modules/expenditure/postExpense\";\nimport { updateExpenditureAction } from \"store/modules/expenditure/updateExpense\";\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\nimport formatDate, { getDefaultDate } from \"utils/utilsFunction/date-converter\";\nimport * as Yup from \"yup\";\nconst validationScheme = Yup.object({\n  category: Yup.mixed().required(\"This field is required\"),\n  date: Yup.string().required(\"This field is required\"),\n  title: Yup.string().required(\"This field is required\"),\n  income_amount: Yup.string().required(\"This field is required\"),\n  remarks: Yup.string().required(\"This field is required\")\n});\nconst initialFormData = {\n  category: null,\n  date: \"\",\n  title: \"\",\n  income_amount: 0,\n  labour_cost: 0,\n  consumables_cost: 0,\n  replacement_cost: 0,\n  remarks: \"\",\n  is_cost_seggregated: false\n};\n\nconst ExpenseForm = props => {\n  _s();\n\n  var _props$scheme3, _values$category2, _values$category3, _values$category4, _values$category5;\n\n  const {\n    t\n  } = useTranslation();\n  const [initialData, setInitialData] = React.useState(initialFormData);\n  const [categoryOption, setCategoryOptions] = React.useState();\n  React.useEffect(() => {\n    if (props.schemeSlug) {\n      getIncomeCategoryAction(props.schemeSlug);\n    }\n  }, [props.schemeSlug]);\n  React.useEffect(() => {\n    if (props.expenseCategories) {\n      var _props$expenseCategor;\n\n      const options = (_props$expenseCategor = props.expenseCategories) === null || _props$expenseCategor === void 0 ? void 0 : _props$expenseCategor.map(item => ({\n        label: item.name,\n        value: item.id,\n        e_name: item.e_name\n      }));\n      setCategoryOptions(options);\n    }\n  }, [props.expenseCategories]);\n  React.useEffect(() => {\n    if (props.activeDate) {\n      setInitialData({ ...initialData,\n        date: props.activeDate\n      });\n    }\n  }, [props.activeDate]);\n  React.useEffect(() => {\n    if (props.editData) {\n      var _props$editData, _props$editData$categ, _props$editData2, _props$editData2$cate;\n\n      setInitialData({ ...props.editData,\n        category: {\n          label: (_props$editData = props.editData) === null || _props$editData === void 0 ? void 0 : (_props$editData$categ = _props$editData.category) === null || _props$editData$categ === void 0 ? void 0 : _props$editData$categ.name,\n          value: (_props$editData2 = props.editData) === null || _props$editData2 === void 0 ? void 0 : (_props$editData2$cate = _props$editData2.category) === null || _props$editData2$cate === void 0 ? void 0 : _props$editData2$cate.id\n        }\n      });\n    }\n  }, [props.editData]);\n  const {\n    values,\n    errors,\n    setFieldTouched,\n    setFieldValue,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = useFormik({\n    enableReinitialize: true,\n    initialValues: initialData,\n    validationSchema: validationScheme,\n    onSubmit: async (submitValue, _ref) => {\n      var _submitValue$category, _values$category;\n\n      let {\n        resetForm\n      } = _ref;\n      let requestData = { ...submitValue,\n        category: submitValue === null || submitValue === void 0 ? void 0 : (_submitValue$category = submitValue.category) === null || _submitValue$category === void 0 ? void 0 : _submitValue$category.value\n      };\n\n      if ((values === null || values === void 0 ? void 0 : (_values$category = values.category) === null || _values$category === void 0 ? void 0 : _values$category.e_name) === \"Maintenance\" && values !== null && values !== void 0 && values.is_cost_seggregated) {\n        requestData.income_amount = Number(values === null || values === void 0 ? void 0 : values.consumables_cost) + Number(values === null || values === void 0 ? void 0 : values.labour_cost) + Number(values === null || values === void 0 ? void 0 : values.replacement_cost);\n      }\n\n      delete requestData.is_cost_seggregated;\n      let res;\n\n      if (props.editData) {\n        res = await props.updateExpenditureAction(props.language, props.editData.id, requestData);\n      } else {\n        res = await props.postExpenseAction(props.language, requestData);\n      }\n\n      if (res.status === 201 || res.status === 200) {\n        var _props$activeDate, _getDefaultDate, _props$scheme, _props$activeDate2, _getDefaultDate2, _props$scheme2;\n\n        if (res.status === 201) {\n          resetForm();\n          toast.success(t(\"home:postSuccess\"));\n        } else {\n          setInitialData(initialFormData);\n          toast.success(t(\"home:updateSuccess\"));\n        }\n\n        props.toggle(false);\n        props.setEditData(null);\n        props.getExpenditureAction(props.language, props.schemeSlug);\n        props.getExpenditureCategoryAction(props.schemeSlug);\n        props.getPreviousExpenditureTotalAction(props.language, props.schemeSlug, ((_props$activeDate = props.activeDate) === null || _props$activeDate === void 0 ? void 0 : _props$activeDate.split(\"-\")[0]) || ((_getDefaultDate = getDefaultDate((_props$scheme = props.scheme) === null || _props$scheme === void 0 ? void 0 : _props$scheme.system_date_format)) === null || _getDefaultDate === void 0 ? void 0 : _getDefaultDate.split(\"-\")[0]), ((_props$activeDate2 = props.activeDate) === null || _props$activeDate2 === void 0 ? void 0 : _props$activeDate2.split(\"-\")[1]) || ((_getDefaultDate2 = getDefaultDate((_props$scheme2 = props.scheme) === null || _props$scheme2 === void 0 ? void 0 : _props$scheme2.system_date_format)) === null || _getDefaultDate2 === void 0 ? void 0 : _getDefaultDate2.split(\"-\")[1]));\n      } else {\n        var _Object$values;\n\n        const errors = (_Object$values = Object.values(res.data)) === null || _Object$values === void 0 ? void 0 : _Object$values.map(item => {\n          toast.error(item[0]);\n        });\n      }\n    }\n  });\n  console.log(values, \"<<<<<\");\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, t(\"finance:category\"), \" :\"), /*#__PURE__*/React.createElement(StyledSelect, {\n    name: \"category\",\n    value: values.category,\n    options: categoryOption,\n    onChange: _ref2 => {\n      let {\n        name,\n        value\n      } = _ref2;\n      setFieldValue(name, value);\n    },\n    onBlur: () => {\n      setFieldTouched(\"category\", true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"category\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, t(\"finance:date\"), \" :\"), ((_props$scheme3 = props.scheme) === null || _props$scheme3 === void 0 ? void 0 : _props$scheme3.system_date_format) === \"nep\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NepaliDatePicker, {\n    value: values.date,\n    name: \"date\",\n    onChange: e => {\n      setFieldValue(\"date\", e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EnglishDatePicker, {\n    name: \"date\",\n    value: values.date,\n    handleChange: e => {\n      setFieldValue(\"date\", formatDate(e));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"date\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }, t(\"finance:title\"), \" :\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"title\",\n    value: values.title,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"title\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  })))), !(values !== null && values !== void 0 && values.is_cost_seggregated) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, t(\"finance:amount\"), \" :\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"income_amount\",\n    value: values.income_amount,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"income_amount\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  })))), (values === null || values === void 0 ? void 0 : (_values$category2 = values.category) === null || _values$category2 === void 0 ? void 0 : _values$category2.e_name) === \"Maintenance\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    id: \"flexCheckChecked\",\n    name: \"is_cost_seggregated\",\n    checked: values.is_cost_seggregated,\n    onChange: e => {\n      setFieldValue(\"is_cost_seggregated\", e.target.checked);\n      setFieldValue(\"income_amount\", 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"flexCheckChecked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, t(\"finance:icCostSegregated\"))), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"is_cost_seggregated\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }))), (values === null || values === void 0 ? void 0 : (_values$category3 = values.category) === null || _values$category3 === void 0 ? void 0 : _values$category3.e_name) === \"Maintenance\" && (values === null || values === void 0 ? void 0 : values.is_cost_seggregated) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }, t(\"home:labour\"), \" \", t(\"home:cost\"), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"labour_cost\",\n    value: values.labour_cost,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"labour_cost\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  })))), (values === null || values === void 0 ? void 0 : (_values$category4 = values.category) === null || _values$category4 === void 0 ? void 0 : _values$category4.e_name) === \"Maintenance\" && (values === null || values === void 0 ? void 0 : values.is_cost_seggregated) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }\n  }, t(\"home:consumable\"), \" \", t(\"home:cost\"), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"consumables_cost\",\n    value: values.consumables_cost,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"consumables_cost\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }\n  })))), (values === null || values === void 0 ? void 0 : (_values$category5 = values.category) === null || _values$category5 === void 0 ? void 0 : _values$category5.e_name) === \"Maintenance\" && (values === null || values === void 0 ? void 0 : values.is_cost_seggregated) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, t(\"home:replacement\"), \" \", t(\"home:cost\"), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"replacement_cost\",\n    value: values.replacement_cost,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"replacement_cost\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }\n  }, t(\"finance:remarks\"), \" :\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"remarks\",\n    value: values.remarks,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"remarks\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn \",\n    text: t(\"home:save\"),\n    type: \"submit\",\n    disabled: props.postLoading || props.updateLoading,\n    loading: props.postLoading || props.updateLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(ExpenseForm, \"BfuiR4ddmh1hEfDAnhGOZKckCLg=\", false, function () {\n  return [useTranslation, useFormik];\n});\n\n_c = ExpenseForm;\n\nconst mapStateToProps = state => {\n  var _state$waterSchemeDat;\n\n  return {\n    language: state.i18nextData.languageType,\n    schemeSlug: (_state$waterSchemeDat = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat === void 0 ? void 0 : _state$waterSchemeDat.slug,\n    scheme: state.waterSchemeData.waterSchemeDetailsData.data,\n    expenseCategories: state.expenditureData.getExpenditureCategory.data,\n    postLoading: state.expenditureData.postExpense.isFetching,\n    updateLoading: state.expenditureData.updateExpense.isFetching\n  };\n};\n\nconst mapDispatchToProps = {\n  getExpenditureAction,\n  updateExpenditureAction,\n  postExpenseAction,\n  getExpenditureCategoryAction,\n  getPreviousExpenditureTotalAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(ExpenseForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ExpenseForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/core/Protected/Finance/CashBook/Expenditure/ExpenseForm.tsx"],"names":["NepaliDatePicker","EnglishDatePicker","FormikValidationError","StyledSelect","toast","Button","useFormik","React","useTranslation","connect","getExpenditureAction","getExpenditureCategoryAction","getPreviousExpenditureTotalAction","postExpenseAction","updateExpenditureAction","getIncomeCategoryAction","formatDate","getDefaultDate","Yup","validationScheme","object","category","mixed","required","date","string","title","income_amount","remarks","initialFormData","labour_cost","consumables_cost","replacement_cost","is_cost_seggregated","ExpenseForm","props","t","initialData","setInitialData","useState","categoryOption","setCategoryOptions","useEffect","schemeSlug","expenseCategories","options","map","item","label","name","value","id","e_name","activeDate","editData","values","errors","setFieldTouched","setFieldValue","touched","handleChange","handleBlur","handleSubmit","enableReinitialize","initialValues","validationSchema","onSubmit","submitValue","resetForm","requestData","Number","res","language","status","success","toggle","setEditData","split","scheme","system_date_format","Object","data","error","console","log","e","preventDefault","target","checked","postLoading","updateLoading","mapStateToProps","state","i18nextData","languageType","waterSchemeData","waterSchemeDetailsData","slug","expenditureData","getExpenditureCategory","postExpense","isFetching","updateExpense","mapDispatchToProps","connector"],"mappings":";;;AAAA,OAAOA,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,iBAAP,MAA8B,sDAA9B;AACA,OAAOC,qBAAP,MAAkC,8DAAlC;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,KAAP,MAAkB,8CAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,OAAT,QAAwC,aAAxC;AACA,SAASC,oBAAT,QAAqC,0CAArC;AACA,SAASC,4BAAT,QAA6C,kDAA7C;AACA,SAASC,iCAAT,QAAkD,uDAAlD;AACA,SAASC,iBAAT,QAAkC,uCAAlC;AACA,SAASC,uBAAT,QAAwC,yCAAxC;AACA,SAASC,uBAAT,QAAwC,wCAAxC;AAEA,OAAOC,UAAP,IAAqBC,cAArB,QAA2C,oCAA3C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,CAAW;AAClCC,EAAAA,QAAQ,EAAEH,GAAG,CAACI,KAAJ,GAAYC,QAAZ,CAAqB,wBAArB,CADwB;AAElCC,EAAAA,IAAI,EAAEN,GAAG,CAACO,MAAJ,GAAaF,QAAb,CAAsB,wBAAtB,CAF4B;AAGlCG,EAAAA,KAAK,EAAER,GAAG,CAACO,MAAJ,GAAaF,QAAb,CAAsB,wBAAtB,CAH2B;AAIlCI,EAAAA,aAAa,EAAET,GAAG,CAACO,MAAJ,GAAaF,QAAb,CAAsB,wBAAtB,CAJmB;AAKlCK,EAAAA,OAAO,EAAEV,GAAG,CAACO,MAAJ,GAAaF,QAAb,CAAsB,wBAAtB;AALyB,CAAX,CAAzB;AAeA,MAAMM,eAAe,GAAG;AACtBR,EAAAA,QAAQ,EAAE,IADY;AAEtBG,EAAAA,IAAI,EAAE,EAFgB;AAGtBE,EAAAA,KAAK,EAAE,EAHe;AAItBC,EAAAA,aAAa,EAAE,CAJO;AAKtBG,EAAAA,WAAW,EAAE,CALS;AAMtBC,EAAAA,gBAAgB,EAAE,CANI;AAOtBC,EAAAA,gBAAgB,EAAE,CAPI;AAQtBJ,EAAAA,OAAO,EAAE,EARa;AAStBK,EAAAA,mBAAmB,EAAE;AATC,CAAxB;;AAYA,MAAMC,WAAW,GAAIC,KAAD,IAAkB;AAAA;;AAAA;;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAQ5B,cAAc,EAA5B;AAEA,QAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgC/B,KAAK,CAACgC,QAAN,CAAeV,eAAf,CAAtC;AACA,QAAM,CAACW,cAAD,EAAiBC,kBAAjB,IAAuClC,KAAK,CAACgC,QAAN,EAA7C;AAEAhC,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAIP,KAAK,CAACQ,UAAV,EAAsB;AACpB5B,MAAAA,uBAAuB,CAACoB,KAAK,CAACQ,UAAP,CAAvB;AACD;AACF,GAJD,EAIG,CAACR,KAAK,CAACQ,UAAP,CAJH;AAMApC,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAIP,KAAK,CAACS,iBAAV,EAA6B;AAAA;;AAC3B,YAAMC,OAAO,4BAAGV,KAAK,CAACS,iBAAT,0DAAG,sBAAyBE,GAAzB,CAA8BC,IAAD,KAAgB;AAC3DC,QAAAA,KAAK,EAAED,IAAI,CAACE,IAD+C;AAE3DC,QAAAA,KAAK,EAAEH,IAAI,CAACI,EAF+C;AAG3DC,QAAAA,MAAM,EAAEL,IAAI,CAACK;AAH8C,OAAhB,CAA7B,CAAhB;AAKAX,MAAAA,kBAAkB,CAACI,OAAD,CAAlB;AACD;AACF,GATD,EASG,CAACV,KAAK,CAACS,iBAAP,CATH;AAWArC,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAIP,KAAK,CAACkB,UAAV,EAAsB;AACpBf,MAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEbb,QAAAA,IAAI,EAAEW,KAAK,CAACkB;AAFC,OAAD,CAAd;AAID;AACF,GAPD,EAOG,CAAClB,KAAK,CAACkB,UAAP,CAPH;AASA9C,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAIP,KAAK,CAACmB,QAAV,EAAoB;AAAA;;AAClBhB,MAAAA,cAAc,CAAC,EACb,GAAGH,KAAK,CAACmB,QADI;AAEbjC,QAAAA,QAAQ,EAAE;AAAE2B,UAAAA,KAAK,qBAAEb,KAAK,CAACmB,QAAR,6EAAE,gBAAgBjC,QAAlB,0DAAE,sBAA0B4B,IAAnC;AAAyCC,UAAAA,KAAK,sBAAEf,KAAK,CAACmB,QAAR,8EAAE,iBAAgBjC,QAAlB,0DAAE,sBAA0B8B;AAA1E;AAFG,OAAD,CAAd;AAID;AACF,GAPD,EAOG,CAAChB,KAAK,CAACmB,QAAP,CAPH;AASA,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,YANI;AAOJC,IAAAA,UAPI;AAQJC,IAAAA;AARI,MASFxD,SAAS,CAAC;AACZyD,IAAAA,kBAAkB,EAAE,IADR;AAEZC,IAAAA,aAAa,EAAE3B,WAFH;AAGZ4B,IAAAA,gBAAgB,EAAE9C,gBAHN;AAIZ+C,IAAAA,QAAQ,EAAE,OAAOC,WAAP,WAAsC;AAAA;;AAAA,UAAlB;AAAEC,QAAAA;AAAF,OAAkB;AAC9C,UAAIC,WAAgB,GAAG,EAAE,GAAGF,WAAL;AAAkB9C,QAAAA,QAAQ,EAAE8C,WAAF,aAAEA,WAAF,gDAAEA,WAAW,CAAE9C,QAAf,0DAAE,sBAAuB6B;AAAnD,OAAvB;;AACA,UAAI,CAAAK,MAAM,SAAN,IAAAA,MAAM,WAAN,gCAAAA,MAAM,CAAElC,QAAR,sEAAkB+B,MAAlB,MAA6B,aAA7B,IAA8CG,MAA9C,aAA8CA,MAA9C,eAA8CA,MAAM,CAAEtB,mBAA1D,EAA+E;AAC7EoC,QAAAA,WAAW,CAAC1C,aAAZ,GACE2C,MAAM,CAACf,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAExB,gBAAT,CAAN,GACAuC,MAAM,CAACf,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEzB,WAAT,CADN,GAEAwC,MAAM,CAACf,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEvB,gBAAT,CAHR;AAID;;AAED,aAAOqC,WAAW,CAACpC,mBAAnB;AAEA,UAAIsC,GAAJ;;AACA,UAAIpC,KAAK,CAACmB,QAAV,EAAoB;AAClBiB,QAAAA,GAAG,GAAG,MAAMpC,KAAK,CAACrB,uBAAN,CAA8BqB,KAAK,CAACqC,QAApC,EAA8CrC,KAAK,CAACmB,QAAN,CAAeH,EAA7D,EAAiEkB,WAAjE,CAAZ;AACD,OAFD,MAEO;AACLE,QAAAA,GAAG,GAAG,MAAMpC,KAAK,CAACtB,iBAAN,CAAwBsB,KAAK,CAACqC,QAA9B,EAAwCH,WAAxC,CAAZ;AACD;;AAED,UAAIE,GAAG,CAACE,MAAJ,KAAe,GAAf,IAAsBF,GAAG,CAACE,MAAJ,KAAe,GAAzC,EAA8C;AAAA;;AAC5C,YAAIF,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtBL,UAAAA,SAAS;AACThE,UAAAA,KAAK,CAACsE,OAAN,CAActC,CAAC,CAAC,kBAAD,CAAf;AACD,SAHD,MAGO;AACLE,UAAAA,cAAc,CAACT,eAAD,CAAd;AACAzB,UAAAA,KAAK,CAACsE,OAAN,CAActC,CAAC,CAAC,oBAAD,CAAf;AACD;;AACDD,QAAAA,KAAK,CAACwC,MAAN,CAAa,KAAb;AACAxC,QAAAA,KAAK,CAACyC,WAAN,CAAkB,IAAlB;AACAzC,QAAAA,KAAK,CAACzB,oBAAN,CAA2ByB,KAAK,CAACqC,QAAjC,EAA2CrC,KAAK,CAACQ,UAAjD;AAEAR,QAAAA,KAAK,CAACxB,4BAAN,CAAmCwB,KAAK,CAACQ,UAAzC;AACAR,QAAAA,KAAK,CAACvB,iCAAN,CACEuB,KAAK,CAACqC,QADR,EAEErC,KAAK,CAACQ,UAFR,EAGE,sBAAAR,KAAK,CAACkB,UAAN,wEAAkBwB,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,0BACE5D,cAAc,kBAACkB,KAAK,CAAC2C,MAAP,kDAAC,cAAcC,kBAAf,CADhB,oDACE,gBAAkDF,KAAlD,CAAwD,GAAxD,EAA6D,CAA7D,CADF,CAHF,EAKE,uBAAA1C,KAAK,CAACkB,UAAN,0EAAkBwB,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,2BACE5D,cAAc,mBAACkB,KAAK,CAAC2C,MAAP,mDAAC,eAAcC,kBAAf,CADhB,qDACE,iBAAkDF,KAAlD,CAAwD,GAAxD,EAA6D,CAA7D,CADF,CALF;AAQD,OArBD,MAqBO;AAAA;;AACL,cAAMrB,MAAM,qBAAGwB,MAAM,CAACzB,MAAP,CAAcgB,GAAG,CAACU,IAAlB,CAAH,mDAAG,eAAyBnC,GAAzB,CAA8BC,IAAD,IAAe;AACzD3C,UAAAA,KAAK,CAAC8E,KAAN,CAAYnC,IAAI,CAAC,CAAD,CAAhB;AACD,SAFc,CAAf;AAGD;AACF;AAhDW,GAAD,CATb;AA4DAoC,EAAAA,OAAO,CAACC,GAAR,CAAY7B,MAAZ,EAAoB,OAApB;AAEA,sBACE;AACE,IAAA,QAAQ,EAAG8B,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACC,cAAF;AACAxB,MAAAA,YAAY,CAACuB,CAAD,CAAZ;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,EAAf;AAAkB,IAAA,SAAS,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjD,CAAC,CAAC,kBAAD,CADJ,OADF,eAKE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAEmB,MAAM,CAAClC,QAFhB;AAGE,IAAA,OAAO,EAAEmB,cAHX;AAIE,IAAA,QAAQ,EAAE,SAAqB;AAAA,UAApB;AAAES,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAoB;AAC7BQ,MAAAA,aAAa,CAACT,IAAD,EAAOC,KAAP,CAAb;AACD,KANH;AAOE,IAAA,MAAM,EAAE,MAAM;AACZO,MAAAA,eAAe,CAAC,UAAD,EAAa,IAAb,CAAf;AACD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAiBE,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,MAAM,EAAED,MAA/C;AAAuD,IAAA,OAAO,EAAEG,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,CADF,CADF,eAwBE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,EAAf;AAAkB,IAAA,SAAS,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,CAAC,CAAC,cAAD,CADJ,OADF,EAKG,mBAAAD,KAAK,CAAC2C,MAAN,kEAAcC,kBAAd,MAAqC,KAArC,gBACC,uDACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAExB,MAAM,CAAC/B,IADhB;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAG6D,CAAD,IAAO;AACf3B,MAAAA,aAAa,CAAC,MAAD,EAAS2B,CAAT,CAAb;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,gBAWC,uDACE,oBAAC,iBAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAE9B,MAAM,CAAC/B,IAFhB;AAGE,IAAA,YAAY,EAAG6D,CAAD,IAAO;AACnB3B,MAAAA,aAAa,CAAC,MAAD,EAAS1C,UAAU,CAACqE,CAAD,CAAnB,CAAb;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBJ,eA0BE,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,MAAM,EAAE7B,MAA3C;AAAmD,IAAA,OAAO,EAAEG,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CADF,CADF,CAxBF,eAwDE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,EAAf;AAAkB,IAAA,SAAS,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,CAAC,CAAC,eAAD,CADJ,OADF,eAKE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEmB,MAAM,CAAC7B,KAHhB;AAIE,IAAA,QAAQ,EAAEkC,YAJZ;AAKE,IAAA,MAAM,EAAEC,UALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAYE,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAC,OAA5B;AAAoC,IAAA,MAAM,EAAEL,MAA5C;AAAoD,IAAA,OAAO,EAAEG,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF,CADF,CAxDF,EA2EG,EAACJ,MAAD,aAACA,MAAD,eAACA,MAAM,CAAEtB,mBAAT,kBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,EAAf;AAAkB,IAAA,SAAS,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,CAAC,CAAC,gBAAD,CADJ,OADF,eAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,IAAI,EAAC,eAHP;AAIE,IAAA,KAAK,EAAEmB,MAAM,CAAC5B,aAJhB;AAKE,IAAA,QAAQ,EAAEiC,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAaE,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAC,eAA5B;AAA4C,IAAA,MAAM,EAAEL,MAApD;AAA4D,IAAA,OAAO,EAAEG,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CADF,CA5EJ,EAgGG,CAAAJ,MAAM,SAAN,IAAAA,MAAM,WAAN,iCAAAA,MAAM,CAAElC,QAAR,wEAAkB+B,MAAlB,MAA6B,aAA7B,iBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,EAAE,EAAC,kBAHL;AAIE,IAAA,IAAI,EAAC,qBAJP;AAKE,IAAA,OAAO,EAAEG,MAAM,CAACtB,mBALlB;AAME,IAAA,QAAQ,EAAGoD,CAAD,IAAO;AACf3B,MAAAA,aAAa,CAAC,qBAAD,EAAwB2B,CAAC,CAACE,MAAF,CAASC,OAAjC,CAAb;AACA9B,MAAAA,aAAa,CAAC,eAAD,EAAkB,CAAlB,CAAb;AACD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAYE;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,OAAO,EAAC,kBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,CAAC,CAAC,0BAAD,CADJ,CAZF,CADF,eAkBE,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAC,qBAA5B;AAAkD,IAAA,MAAM,EAAEoB,MAA1D;AAAkE,IAAA,OAAO,EAAEG,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF,CAjGJ,EAyHG,CAAAJ,MAAM,SAAN,IAAAA,MAAM,WAAN,iCAAAA,MAAM,CAAElC,QAAR,wEAAkB+B,MAAlB,MAA6B,aAA7B,KAA8CG,MAA9C,aAA8CA,MAA9C,uBAA8CA,MAAM,CAAEtB,mBAAtD,kBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,EAAf;AAAkB,IAAA,SAAS,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,CAAC,CAAC,aAAD,CADJ,OACsBA,CAAC,CAAC,WAAD,CADvB,MADF,eAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,IAAI,EAAC,aAHP;AAIE,IAAA,KAAK,EAAEmB,MAAM,CAACzB,WAJhB;AAKE,IAAA,QAAQ,EAAE8B,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAaE,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAC,aAA5B;AAA0C,IAAA,MAAM,EAAEL,MAAlD;AAA0D,IAAA,OAAO,EAAEG,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CADF,CA1HJ,EA8IG,CAAAJ,MAAM,SAAN,IAAAA,MAAM,WAAN,iCAAAA,MAAM,CAAElC,QAAR,wEAAkB+B,MAAlB,MAA6B,aAA7B,KAA8CG,MAA9C,aAA8CA,MAA9C,uBAA8CA,MAAM,CAAEtB,mBAAtD,kBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,EAAf;AAAkB,IAAA,SAAS,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,CAAC,CAAC,iBAAD,CADJ,OAC0BA,CAAC,CAAC,WAAD,CAD3B,MADF,eAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,IAAI,EAAC,kBAHP;AAIE,IAAA,KAAK,EAAEmB,MAAM,CAACxB,gBAJhB;AAKE,IAAA,QAAQ,EAAE6B,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAaE,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAC,kBAA5B;AAA+C,IAAA,MAAM,EAAEL,MAAvD;AAA+D,IAAA,OAAO,EAAEG,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CADF,CA/IJ,EAoKG,CAAAJ,MAAM,SAAN,IAAAA,MAAM,WAAN,iCAAAA,MAAM,CAAElC,QAAR,wEAAkB+B,MAAlB,MAA6B,aAA7B,KAA8CG,MAA9C,aAA8CA,MAA9C,uBAA8CA,MAAM,CAAEtB,mBAAtD,kBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,EAAf;AAAkB,IAAA,SAAS,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,CAAC,CAAC,kBAAD,CADJ,OAC2BA,CAAC,CAAC,WAAD,CAD5B,MADF,eAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,IAAI,EAAC,kBAHP;AAIE,IAAA,KAAK,EAAEmB,MAAM,CAACvB,gBAJhB;AAKE,IAAA,QAAQ,EAAE4B,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAaE,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAC,kBAA5B;AAA+C,IAAA,MAAM,EAAEL,MAAvD;AAA+D,IAAA,OAAO,EAAEG,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CADF,CArKJ,eAyLE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,EAAf;AAAkB,IAAA,SAAS,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,CAAC,CAAC,iBAAD,CADJ,OADF,eAKE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,KAAK,EAAEmB,MAAM,CAAC3B,OAJhB;AAKE,IAAA,QAAQ,EAAEgC,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAaE,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAsC,IAAA,MAAM,EAAEL,MAA9C;AAAsD,IAAA,OAAO,EAAEG,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CADF,CAzLF,eA6ME;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,IAAI,EAAEvB,CAAC,CAAC,WAAD,CAFT;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,QAAQ,EAAED,KAAK,CAACsD,WAAN,IAAqBtD,KAAK,CAACuD,aAJvC;AAKE,IAAA,OAAO,EAAEvD,KAAK,CAACsD,WAAN,IAAqBtD,KAAK,CAACuD,aALtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA7MF,CANF,CADF;AAgOD,CAvUD;;GAAMxD,W;UACU1B,c,EAiDVF,S;;;KAlDA4B,W;;AAyUN,MAAMyD,eAAe,GAAIC,KAAD;AAAA;;AAAA,SAAuB;AAC7CpB,IAAAA,QAAQ,EAAEoB,KAAK,CAACC,WAAN,CAAkBC,YADiB;AAE7CnD,IAAAA,UAAU,2BAAEiD,KAAK,CAACG,eAAN,CAAsBC,sBAAtB,CAA6Cf,IAA/C,0DAAE,sBAAmDgB,IAFlB;AAG7CnB,IAAAA,MAAM,EAAEc,KAAK,CAACG,eAAN,CAAsBC,sBAAtB,CAA6Cf,IAHR;AAI7CrC,IAAAA,iBAAiB,EAAEgD,KAAK,CAACM,eAAN,CAAsBC,sBAAtB,CAA6ClB,IAJnB;AAK7CQ,IAAAA,WAAW,EAAEG,KAAK,CAACM,eAAN,CAAsBE,WAAtB,CAAkCC,UALF;AAM7CX,IAAAA,aAAa,EAAEE,KAAK,CAACM,eAAN,CAAsBI,aAAtB,CAAoCD;AANN,GAAvB;AAAA,CAAxB;;AASA,MAAME,kBAAkB,GAAG;AACzB7F,EAAAA,oBADyB;AAEzBI,EAAAA,uBAFyB;AAGzBD,EAAAA,iBAHyB;AAIzBF,EAAAA,4BAJyB;AAKzBC,EAAAA;AALyB,CAA3B;AAQA,MAAM4F,SAAS,GAAG/F,OAAO,CAACkF,eAAD,EAAkBY,kBAAlB,CAAzB;AAIA,qBAAeC,SAAS,CAACtE,WAAD,CAAxB","sourcesContent":["import NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getExpenditureAction } from \"store/modules/expenditure/getExpenditure\";\r\nimport { getExpenditureCategoryAction } from \"store/modules/expenditure/getExpenditureCategory\";\r\nimport { getPreviousExpenditureTotalAction } from \"store/modules/expenditure/getPreviousExpenditureTotal\";\r\nimport { postExpenseAction } from \"store/modules/expenditure/postExpense\";\r\nimport { updateExpenditureAction } from \"store/modules/expenditure/updateExpense\";\r\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport formatDate, { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst validationScheme = Yup.object({\r\n  category: Yup.mixed().required(\"This field is required\"),\r\n  date: Yup.string().required(\"This field is required\"),\r\n  title: Yup.string().required(\"This field is required\"),\r\n  income_amount: Yup.string().required(\"This field is required\"),\r\n  remarks: Yup.string().required(\"This field is required\"),\r\n});\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  toggle: any;\r\n  setEditData: any;\r\n  activeDate?: string;\r\n}\r\n\r\nconst initialFormData = {\r\n  category: null as any,\r\n  date: \"\",\r\n  title: \"\",\r\n  income_amount: 0,\r\n  labour_cost: 0,\r\n  consumables_cost: 0,\r\n  replacement_cost: 0,\r\n  remarks: \"\",\r\n  is_cost_seggregated: false,\r\n};\r\n\r\nconst ExpenseForm = (props: Props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [initialData, setInitialData] = React.useState(initialFormData);\r\n  const [categoryOption, setCategoryOptions] = React.useState<OptionType[]>();\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      getIncomeCategoryAction(props.schemeSlug);\r\n    }\r\n  }, [props.schemeSlug]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.expenseCategories) {\r\n      const options = props.expenseCategories?.map((item: any) => ({\r\n        label: item.name,\r\n        value: item.id,\r\n        e_name: item.e_name,\r\n      }));\r\n      setCategoryOptions(options);\r\n    }\r\n  }, [props.expenseCategories]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.activeDate) {\r\n      setInitialData({\r\n        ...initialData,\r\n        date: props.activeDate,\r\n      });\r\n    }\r\n  }, [props.activeDate]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      setInitialData({\r\n        ...props.editData,\r\n        category: { label: props.editData?.category?.name, value: props.editData?.category?.id },\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    touched,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationScheme,\r\n    onSubmit: async (submitValue, { resetForm }) => {\r\n      let requestData: any = { ...submitValue, category: submitValue?.category?.value };\r\n      if (values?.category?.e_name === \"Maintenance\" && values?.is_cost_seggregated) {\r\n        requestData.income_amount =\r\n          Number(values?.consumables_cost) +\r\n          Number(values?.labour_cost) +\r\n          Number(values?.replacement_cost);\r\n      }\r\n\r\n      delete requestData.is_cost_seggregated;\r\n\r\n      let res;\r\n      if (props.editData) {\r\n        res = await props.updateExpenditureAction(props.language, props.editData.id, requestData);\r\n      } else {\r\n        res = await props.postExpenseAction(props.language, requestData);\r\n      }\r\n\r\n      if (res.status === 201 || res.status === 200) {\r\n        if (res.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          setInitialData(initialFormData);\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n        props.toggle(false);\r\n        props.setEditData(null);\r\n        props.getExpenditureAction(props.language, props.schemeSlug);\r\n\r\n        props.getExpenditureCategoryAction(props.schemeSlug);\r\n        props.getPreviousExpenditureTotalAction(\r\n          props.language,\r\n          props.schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(props.scheme?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(props.scheme?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n      } else {\r\n        const errors = Object.values(res.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  console.log(values, \"<<<<<\");\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row align-items-end\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"form-group \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\" className=\"mr-1\">\r\n                {t(\"finance:category\")} :\r\n              </label>\r\n\r\n              <StyledSelect\r\n                name=\"category\"\r\n                value={values.category}\r\n                options={categoryOption}\r\n                onChange={({ name, value }) => {\r\n                  setFieldValue(name, value);\r\n                }}\r\n                onBlur={() => {\r\n                  setFieldTouched(\"category\", true);\r\n                }}\r\n              />\r\n\r\n              <FormikValidationError name=\"category\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"form-group \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\" className=\"mr-1\">\r\n                {t(\"finance:date\")} :\r\n              </label>\r\n\r\n              {props.scheme?.system_date_format === \"nep\" ? (\r\n                <>\r\n                  <NepaliDatePicker\r\n                    value={values.date}\r\n                    name=\"date\"\r\n                    onChange={(e) => {\r\n                      setFieldValue(\"date\", e);\r\n                    }}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <EnglishDatePicker\r\n                    name=\"date\"\r\n                    value={values.date}\r\n                    handleChange={(e) => {\r\n                      setFieldValue(\"date\", formatDate(e));\r\n                    }}\r\n                  />\r\n                </>\r\n              )}\r\n              <FormikValidationError name=\"date\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"form-group \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\" className=\"mr-1\">\r\n                {t(\"finance:title\")} :\r\n              </label>\r\n\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              <FormikValidationError name=\"title\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {!values?.is_cost_seggregated && (\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group \">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"finance:amount\")} :\r\n                </label>\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  name=\"income_amount\"\r\n                  value={values.income_amount}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"income_amount\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {values?.category?.e_name === \"Maintenance\" && (\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"form-group \">\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"flexCheckChecked\"\r\n                  name=\"is_cost_seggregated\"\r\n                  checked={values.is_cost_seggregated}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"is_cost_seggregated\", e.target.checked);\r\n                    setFieldValue(\"income_amount\", 0);\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">\r\n                  {t(\"finance:icCostSegregated\")}\r\n                </label>\r\n              </div>\r\n\r\n              <FormikValidationError name=\"is_cost_seggregated\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {values?.category?.e_name === \"Maintenance\" && values?.is_cost_seggregated && (\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group \">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:labour\")} {t(\"home:cost\")}:\r\n                </label>\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  name=\"labour_cost\"\r\n                  value={values.labour_cost}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"labour_cost\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {values?.category?.e_name === \"Maintenance\" && values?.is_cost_seggregated && (\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group \">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:consumable\")} {t(\"home:cost\")}:\r\n                </label>\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  name=\"consumables_cost\"\r\n                  value={values.consumables_cost}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"consumables_cost\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {values?.category?.e_name === \"Maintenance\" && values?.is_cost_seggregated && (\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group \">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:replacement\")} {t(\"home:cost\")}:\r\n                </label>\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  name=\"replacement_cost\"\r\n                  value={values.replacement_cost}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"replacement_cost\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"col-md-12\">\r\n          <div className=\"form-group \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\" className=\"mr-1\">\r\n                {t(\"finance:remarks\")} :\r\n              </label>\r\n\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"remarks\"\r\n                value={values.remarks}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              <FormikValidationError name=\"remarks\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn \"\r\n            text={t(\"home:save\")}\r\n            type=\"submit\"\r\n            disabled={props.postLoading || props.updateLoading}\r\n            loading={props.postLoading || props.updateLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  expenseCategories: state.expenditureData.getExpenditureCategory.data,\r\n  postLoading: state.expenditureData.postExpense.isFetching,\r\n  updateLoading: state.expenditureData.updateExpense.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getExpenditureAction,\r\n  updateExpenditureAction,\r\n  postExpenseAction,\r\n  getExpenditureCategoryAction,\r\n  getPreviousExpenditureTotalAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(ExpenseForm);\r\n"]},"metadata":{},"sourceType":"module"}