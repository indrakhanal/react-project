{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLocation } from \"react-router-dom\";\nimport TokenService from \"./../jwt-token/jwt-token\";\n\n/**\r\n * Provides utilities whether the user is authenticated or not and the current path\r\n */\nfunction useAuthentication() {\n  _s();\n\n  const location = useLocation();\n\n  const isAuthenticated = () => {\n    var _TokenService$getAcce, _TokenService$getAcce2, _TokenService$getAcce3, _TokenService$getAcce4, _TokenService$getAcce5;\n\n    return ((_TokenService$getAcce = TokenService.getAccessToken()) === null || _TokenService$getAcce === void 0 ? void 0 : (_TokenService$getAcce2 = _TokenService$getAcce.tokens) === null || _TokenService$getAcce2 === void 0 ? void 0 : (_TokenService$getAcce3 = _TokenService$getAcce2.access) === null || _TokenService$getAcce3 === void 0 ? void 0 : (_TokenService$getAcce4 = _TokenService$getAcce3.toString()) === null || _TokenService$getAcce4 === void 0 ? void 0 : (_TokenService$getAcce5 = _TokenService$getAcce4.split(\".\")) === null || _TokenService$getAcce5 === void 0 ? void 0 : _TokenService$getAcce5.length) === 3;\n  };\n\n  return {\n    currentPath: location.pathname,\n    isAuthenticated: isAuthenticated\n  };\n}\n\n_s(useAuthentication, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\nexport default useAuthentication;","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/services/authentication/AuthenticationService.tsx"],"names":["useLocation","TokenService","useAuthentication","location","isAuthenticated","getAccessToken","tokens","access","toString","split","length","currentPath","pathname"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,YAAP,MAAyB,0BAAzB;;AAQA;AACA;AACA;AACA,SAASC,iBAAT,GAAmD;AAAA;;AACjD,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;;AACA,QAAMI,eAAe,GAAG;AAAA;;AAAA,WACtB,0BAAAH,YAAY,CAACI,cAAb,4GAA+BC,MAA/B,4GAAuCC,MAAvC,4GAA+CC,QAA/C,8GAA2DC,KAA3D,CAAiE,GAAjE,mFAAuEC,MAAvE,MAAkF,CAD5D;AAAA,GAAxB;;AAGA,SAAO;AACLC,IAAAA,WAAW,EAAER,QAAQ,CAACS,QADjB;AAELR,IAAAA,eAAe,EAAEA;AAFZ,GAAP;AAID;;GATQF,iB;UACUF,W;;;AAUnB,eAAeE,iBAAf","sourcesContent":["import { useLocation } from \"react-router-dom\";\r\n\r\nimport TokenService from \"./../jwt-token/jwt-token\";\r\ninterface AuthorizationService {\r\n  /** Current route path */\r\n  currentPath: string;\r\n  /** Function that returns true if authenticated otherwise not */\r\n  isAuthenticated: () => boolean;\r\n}\r\n\r\n/**\r\n * Provides utilities whether the user is authenticated or not and the current path\r\n */\r\nfunction useAuthentication(): AuthorizationService {\r\n  const location = useLocation();\r\n  const isAuthenticated = () =>\r\n    TokenService.getAccessToken()?.tokens?.access?.toString()?.split(\".\")?.length === 3; \r\n\r\n  return {\r\n    currentPath: location.pathname,\r\n    isAuthenticated: isAuthenticated,\r\n  };\r\n}\r\n\r\nexport default useAuthentication;\r\n"]},"metadata":{},"sourceType":"module"}