{"ast":null,"code":"import _slicedToArray from\"C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import Axios from'axios';import initDispatchTypes from'./default-action-type';import initApiRequest from'../../services/api-request/api-request';import{FailToast,SuccessToast}from'../../components/React/ToastNotifier/ToastNotifier';import{requestTimeoutLanguage,noConnectionLanguage}from'../../i18n/i18n';/**\r\n * Request details for XMLHTTP request\r\n */var timeoutLanguageCount=0;var noServerConnectionLanguageCount=0;var noConnectionLanguageCount=0;var axiosCancelSource=Axios.CancelToken.source();/**\r\n * Manages API call and updates reducer with success or failure\r\n * @param apiDetails redux action and api config\r\n * @param dispatch redux dispatch function\r\n * @param apiRequestDetails request details for XMLHTTP request\r\n */export default function initDefaultAction(_x,_x2){return _initDefaultAction.apply(this,arguments);}function _initDefaultAction(){_initDefaultAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(apiDetails,dispatch){var apiRequestDetails,requestData,requestMethod,params,cancelSource,_apiRequestDetails$di,disableSuccessToast,disableFailureToast,pathVariables,_apiRequestDetails$di2,disableToast,dispatchTypes,sanitizedApiDetails,responseData,_responseData$data,_responseData$data2,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:apiRequestDetails=_args.length>2&&_args[2]!==undefined?_args[2]:{};requestData=apiRequestDetails.requestData,requestMethod=apiRequestDetails.requestMethod,params=apiRequestDetails.params,cancelSource=apiRequestDetails.cancelSource,_apiRequestDetails$di=apiRequestDetails.disableSuccessToast,disableSuccessToast=_apiRequestDetails$di===void 0?false:_apiRequestDetails$di,disableFailureToast=apiRequestDetails.disableFailureToast,pathVariables=apiRequestDetails.pathVariables,_apiRequestDetails$di2=apiRequestDetails.disableToast,disableToast=_apiRequestDetails$di2===void 0?false:_apiRequestDetails$di2;// Init Dispatch Types\ndispatchTypes=initDispatchTypes(apiDetails.actionName);// Progress Dispatch\ndispatch({type:dispatchTypes.progressDispatch,payload:null});// Check for path variables in controllername\nsanitizedApiDetails=sanitizeController(apiDetails,pathVariables);_context.prev=5;_context.next=8;return initApiRequest(sanitizedApiDetails,requestData,requestMethod||sanitizedApiDetails.requestMethod||\"GET\",params,cancelSource||axiosCancelSource);case 8:responseData=_context.sent;console.log(responseData.data,\"responseData\");// Success Dispatch\ndispatch({type:dispatchTypes.successDispatch,payload:responseData.data});if(disableSuccessToast||disableToast){// No work done\n}else{if(requestMethod!==\"GET\"){SuccessToast((_responseData$data=responseData.data)===null||_responseData$data===void 0?void 0:_responseData$data.message);}}_context.next=21;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](5);responseData=_context.t0;// Failure Dispatch\ndispatch({type:dispatchTypes.failureDispatch,payload:responseData.data});if(disableFailureToast||disableToast){// No work done\n}else{((_responseData$data2=responseData.data)===null||_responseData$data2===void 0?void 0:_responseData$data2.message)&&FailToast(responseData.data.message);}// Axios Timeout\nif(responseData.config.code==='ECONNABORTED'){if(!timeoutLanguageCount){timeoutLanguageCount++;FailToast(requestTimeoutLanguage());}}// No Connection\nif(responseData.noconnection){// No Server Connection\nif(responseData.message==='Server could not be reached'){if(!noServerConnectionLanguageCount){noServerConnectionLanguageCount++;FailToast(noConnectionLanguage());}}// No Connection\nelse if(responseData.config.code!=='ECONNABORTED'){if(!noConnectionLanguageCount){noConnectionLanguageCount++;FailToast(noConnectionLanguage());}}}case 21:return _context.abrupt(\"return\",responseData);case 22:case\"end\":return _context.stop();}}},_callee,null,[[5,14]]);}));return _initDefaultAction.apply(this,arguments);};function sanitizeController(apiDetail,pathVariables){return pathVariables&&Object.keys(pathVariables).length?_objectSpread(_objectSpread({},apiDetail),{},{controllerName:Object.entries(pathVariables).reduce(function(acc,_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];return acc=acc.replace(\"{\".concat(key,\"}\"),value===null||value===void 0?void 0:value.toString());},apiDetail.controllerName)}):apiDetail;}","map":null,"metadata":{},"sourceType":"module"}