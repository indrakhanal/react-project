{"ast":null,"code":"var _jsxFileName = \"E:\\\\Smart Tech Solution\\\\React JS\\\\react-project\\\\src\\\\core\\\\Protected\\\\Finance\\\\TarrifRates\\\\FixedRates\\\\Form.tsx\",\n    _s = $RefreshSig$();\n\nimport NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport Button from \"components/UI/Forms/Buttons\";\nimport { useFormik } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getWaterTarrifsAction } from \"store/modules/waterTarrifs/getWaterTarrifs\";\nimport { postFixedRateWaterTariffAction } from \"store/modules/waterTarrifs/postFixedRateWaterTariff\";\nimport { updateFixedRateWaterTariffAction } from \"store/modules/waterTarrifs/updateFixedBasedWaterTariff\";\nimport formatDate from \"utils/utilsFunction/date-converter\";\nimport * as Yup from \"yup\";\nimport { useTranslation } from \"react-i18next\";\nimport { getUsIncomeEstimateThisYearAction } from \"store/modules/waterTarrifs/getIncomeEstimateThisYear\";\nimport TooltipLabel from \"components/UI/TooltipLabel\";\nconst validationSchema = Yup.object({\n  rate_for_institution: Yup.string().required(\"This field is required\"),\n  rate_for_household: Yup.string().required(\"This field is required\"),\n  rate_for_public: Yup.string().required(\"This field is required\"),\n  rate_for_commercial: Yup.string().required(\"This field is required\"),\n  apply_date: Yup.string().required(\"This field is required\"),\n  estimated_paying_connection_household: Yup.string().required(\"This field is required\"),\n  estimated_paying_connection_institution: Yup.string().required(\"This field is required\"),\n  estimated_paying_connection_public: Yup.string().required(\"This field is required\"),\n  estimated_paying_connection_commercial: Yup.string().required(\"This field is required\")\n});\n\nconst UseBasedForm = props => {\n  _s();\n\n  var _props$scheme;\n\n  const {\n    t\n  } = useTranslation();\n  const [initialData, setInitialData] = React.useState({\n    terif_type: \"Fixed\",\n    rate_for_institution: \"\",\n    rate_for_household: \"\",\n    rate_for_public: \"\",\n    rate_for_commercial: \"\",\n    apply_date: \"\",\n    estimated_paying_connection_household: \"\",\n    estimated_paying_connection_institution: \"\",\n    estimated_paying_connection_public: \"\",\n    estimated_paying_connection_commercial: \"\"\n  });\n  React.useEffect(() => {\n    if (props.scheme) {\n      setInitialData({\n        terif_type: \"Fixed\",\n        rate_for_institution: \"\",\n        rate_for_household: \"\",\n        rate_for_public: \"\",\n        rate_for_commercial: \"\",\n        apply_date: \"\",\n        estimated_paying_connection_household: \"\",\n        estimated_paying_connection_institution: \"\",\n        estimated_paying_connection_public: \"\",\n        estimated_paying_connection_commercial: \"\"\n      });\n    }\n  }, [props.scheme]);\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    setFieldValue,\n    handleSubmit\n  } = useFormik({\n    enableReinitialize: true,\n    initialValues: initialData,\n    validationSchema: validationSchema,\n    onSubmit: async (values, _ref) => {\n      let {\n        resetForm\n      } = _ref;\n      let response;\n\n      if (props.editData) {\n        response = await props.updateFixedRateWaterTariffAction(props.language, props.editData.id, values);\n      } else {\n        response = await props.postFixedRateWaterTariffAction(props.language, values);\n      }\n\n      if (response.status === 201 || response.status === 200) {\n        props.getUsIncomeEstimateThisYearAction(props.schemeSlug);\n\n        if (response.status === 201) {\n          resetForm();\n          toast.success(t(\"home:postSuccess\"));\n        } else {\n          setInitialData({\n            terif_type: \"Fixed\",\n            rate_for_institution: \"\",\n            rate_for_household: \"\",\n            rate_for_public: \"\",\n            rate_for_commercial: \"\",\n            apply_date: \"\",\n            estimated_paying_connection_household: \"\",\n            estimated_paying_connection_institution: \"\",\n            estimated_paying_connection_public: \"\",\n            estimated_paying_connection_commercial: \"\"\n          }); // props.getOtherExpensesAction(props.language);\n\n          toast.success(t(\"home:updateSuccess\"));\n        }\n\n        props.getWaterTarrifsAction(props.language, props.schemeSlug, \"fixed\");\n      } else {\n        const errorList = response.data && response.data.error;\n\n        if (errorList instanceof Array) {\n          errorList.forEach(item => {\n            toast.error(item);\n          });\n        }\n\n        console.log(response, \"errrr\");\n      }\n    }\n  });\n  React.useEffect(() => {\n    if (props.editData) {\n      setInitialData({ ...props.editData\n      });\n    }\n  }, [props.editData]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 label pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, t(\"finance:applyDate\"), /*#__PURE__*/React.createElement(TooltipLabel, {\n    id: \"apd\",\n    text: `The date from which this record  should be applied to the system.`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  })), ((_props$scheme = props.scheme) === null || _props$scheme === void 0 ? void 0 : _props$scheme.system_date_format) === \"nep\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NepaliDatePicker, {\n    value: values.apply_date,\n    name: \"apply_date\",\n    onChange: e => {\n      setFieldValue(\"apply_date\", e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EnglishDatePicker, {\n    name: \"apply_date\",\n    value: values.apply_date,\n    handleChange: e => {\n      setFieldValue(\"apply_date\", formatDate(e));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"apply_date\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 label pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, t(\"finance:roh\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"rate_for_household\",\n    value: values.rate_for_household,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"rate_for_household\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 label pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, t(\"finance:roi\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"rate_for_institution\",\n    value: values.rate_for_institution,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"rate_for_institution\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 label pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, t(\"finance:rop\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"rate_for_public\",\n    value: values.rate_for_public,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"rate_for_public\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 label pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, t(\"finance:roc\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"rate_for_commercial\",\n    value: values.rate_for_commercial,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"rate_for_commercial\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 label pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, t(\"finance:epch\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"estimated_paying_connection_household\",\n    value: values.estimated_paying_connection_household,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"estimated_paying_connection_household\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 label pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, t(\"finance:epci\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"estimated_paying_connection_institution\",\n    value: values.estimated_paying_connection_institution,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"estimated_paying_connection_institution\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 label pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, t(\"finance:epcp\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"estimated_paying_connection_public\",\n    value: values.estimated_paying_connection_public,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"estimated_paying_connection_public\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 label pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, t(\"finance:epcc\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"estimated_paying_connection_commercial\",\n    value: values.estimated_paying_connection_commercial,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"estimated_paying_connection_commercial\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 mt-2 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn\",\n    text: t(\"home:save\"),\n    type: \"submit\",\n    disabled: props.postLoading || props.updateLoading,\n    loading: props.postLoading || props.updateLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(UseBasedForm, \"mtq4mVr3RQemI/rNy6RCNWfEv3s=\", false, function () {\n  return [useTranslation, useFormik];\n});\n\n_c = UseBasedForm;\n\nconst mapStateToProps = state => {\n  var _state$waterSchemeDat;\n\n  return {\n    language: state.i18nextData.languageType,\n    scheme: state.waterSchemeData.waterSchemeDetailsData.data,\n    schemeSlug: (_state$waterSchemeDat = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat === void 0 ? void 0 : _state$waterSchemeDat.slug,\n    postLoading: state.waterTarrifsData.postFixedRateWaterTariff.isFetching,\n    updateLoading: state.waterTarrifsData.updateUseBasedWaterTariff.isFetching\n  };\n};\n\nconst mapDispatchToProps = {\n  postFixedRateWaterTariffAction: postFixedRateWaterTariffAction,\n  getWaterTarrifsAction: getWaterTarrifsAction,\n  updateFixedRateWaterTariffAction: updateFixedRateWaterTariffAction,\n  getUsIncomeEstimateThisYearAction: getUsIncomeEstimateThisYearAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(UseBasedForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UseBasedForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/core/Protected/Finance/TarrifRates/FixedRates/Form.tsx"],"names":["NepaliDatePicker","EnglishDatePicker","FormikValidationError","toast","Button","useFormik","React","connect","getWaterTarrifsAction","postFixedRateWaterTariffAction","updateFixedRateWaterTariffAction","formatDate","Yup","useTranslation","getUsIncomeEstimateThisYearAction","TooltipLabel","validationSchema","object","rate_for_institution","string","required","rate_for_household","rate_for_public","rate_for_commercial","apply_date","estimated_paying_connection_household","estimated_paying_connection_institution","estimated_paying_connection_public","estimated_paying_connection_commercial","UseBasedForm","props","t","initialData","setInitialData","useState","terif_type","useEffect","scheme","values","errors","touched","handleChange","handleBlur","setFieldValue","handleSubmit","enableReinitialize","initialValues","onSubmit","resetForm","response","editData","language","id","status","schemeSlug","success","errorList","data","error","Array","forEach","item","console","log","e","preventDefault","system_date_format","postLoading","updateLoading","mapStateToProps","state","i18nextData","languageType","waterSchemeData","waterSchemeDetailsData","slug","waterTarrifsData","postFixedRateWaterTariff","isFetching","updateUseBasedWaterTariff","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getWaterTarrifsAction } from \"store/modules/waterTarrifs/getWaterTarrifs\";\r\nimport { postFixedRateWaterTariffAction } from \"store/modules/waterTarrifs/postFixedRateWaterTariff\";\r\nimport { updateFixedRateWaterTariffAction } from \"store/modules/waterTarrifs/updateFixedBasedWaterTariff\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport formatDate from \"utils/utilsFunction/date-converter\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getUsIncomeEstimateThisYearAction } from \"store/modules/waterTarrifs/getIncomeEstimateThisYear\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData;\r\n  setEditData;\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n  rate_for_institution: Yup.string().required(\"This field is required\"),\r\n  rate_for_household: Yup.string().required(\"This field is required\"),\r\n  rate_for_public: Yup.string().required(\"This field is required\"),\r\n  rate_for_commercial: Yup.string().required(\"This field is required\"),\r\n  apply_date: Yup.string().required(\"This field is required\"),\r\n  estimated_paying_connection_household: Yup.string().required(\"This field is required\"),\r\n  estimated_paying_connection_institution: Yup.string().required(\"This field is required\"),\r\n  estimated_paying_connection_public: Yup.string().required(\"This field is required\"),\r\n  estimated_paying_connection_commercial: Yup.string().required(\"This field is required\"),\r\n});\r\n\r\nconst UseBasedForm = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [initialData, setInitialData] = React.useState({\r\n    terif_type: \"Fixed\",\r\n    rate_for_institution: \"\",\r\n    rate_for_household: \"\",\r\n    rate_for_public: \"\",\r\n    rate_for_commercial: \"\",\r\n    apply_date: \"\",\r\n    estimated_paying_connection_household: \"\",\r\n    estimated_paying_connection_institution: \"\",\r\n    estimated_paying_connection_public: \"\",\r\n    estimated_paying_connection_commercial: \"\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.scheme) {\r\n      setInitialData({\r\n        terif_type: \"Fixed\",\r\n        rate_for_institution: \"\",\r\n        rate_for_household: \"\",\r\n        rate_for_public: \"\",\r\n        rate_for_commercial: \"\",\r\n        apply_date: \"\",\r\n        estimated_paying_connection_household: \"\",\r\n        estimated_paying_connection_institution: \"\",\r\n        estimated_paying_connection_public: \"\",\r\n        estimated_paying_connection_commercial: \"\",\r\n      });\r\n    }\r\n  }, [props.scheme]);\r\n\r\n  const { values, errors, touched, handleChange, handleBlur, setFieldValue, handleSubmit } =\r\n    useFormik({\r\n      enableReinitialize: true,\r\n      initialValues: initialData,\r\n      validationSchema: validationSchema,\r\n      onSubmit: async (values, { resetForm }) => {\r\n        let response;\r\n\r\n        if (props.editData) {\r\n          response = await props.updateFixedRateWaterTariffAction(\r\n            props.language,\r\n            props.editData.id,\r\n            values\r\n          );\r\n        } else {\r\n          response = await props.postFixedRateWaterTariffAction(props.language, values);\r\n        }\r\n\r\n        if (response.status === 201 || response.status === 200) {\r\n          props.getUsIncomeEstimateThisYearAction(props.schemeSlug);\r\n\r\n          if (response.status === 201) {\r\n            resetForm();\r\n            toast.success(t(\"home:postSuccess\"));\r\n          } else {\r\n            setInitialData({\r\n              terif_type: \"Fixed\",\r\n              rate_for_institution: \"\",\r\n              rate_for_household: \"\",\r\n              rate_for_public: \"\",\r\n              rate_for_commercial: \"\",\r\n              apply_date: \"\",\r\n              estimated_paying_connection_household: \"\",\r\n              estimated_paying_connection_institution: \"\",\r\n              estimated_paying_connection_public: \"\",\r\n              estimated_paying_connection_commercial: \"\",\r\n            });\r\n            // props.getOtherExpensesAction(props.language);\r\n            toast.success(t(\"home:updateSuccess\"));\r\n          }\r\n          props.getWaterTarrifsAction(props.language, props.schemeSlug, \"fixed\");\r\n        } else {\r\n          const errorList = response.data && response.data.error;\r\n          if (errorList instanceof Array) {\r\n            errorList.forEach((item) => {\r\n              toast.error(item);\r\n            });\r\n          }\r\n          console.log(response, \"errrr\");\r\n        }\r\n      },\r\n    });\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      setInitialData({\r\n        ...props.editData,\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit();\r\n      }}\r\n    >\r\n      <div className=\"row align-items-end\">\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group mt-2\">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:applyDate\")}\r\n              <TooltipLabel id={\"apd\"} text={`The date from which this record  should be applied to the system.`} />\r\n            </label>\r\n\r\n            {props.scheme?.system_date_format === \"nep\" ? (\r\n              <>\r\n                <NepaliDatePicker\r\n                  value={values.apply_date}\r\n                  name=\"apply_date\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"apply_date\", e);\r\n                  }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <EnglishDatePicker\r\n                  name=\"apply_date\"\r\n                  value={values.apply_date}\r\n                  handleChange={(e) => {\r\n                    setFieldValue(\"apply_date\", formatDate(e));\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n            <FormikValidationError name=\"apply_date\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:roh\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"rate_for_household\"\r\n              value={values.rate_for_household}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"rate_for_household\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:roi\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"rate_for_institution\"\r\n              value={values.rate_for_institution}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"rate_for_institution\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:rop\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"rate_for_public\"\r\n              value={values.rate_for_public}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"rate_for_public\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:roc\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"rate_for_commercial\"\r\n              value={values.rate_for_commercial}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"rate_for_commercial\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:epch\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"estimated_paying_connection_household\"\r\n              value={values.estimated_paying_connection_household}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError\r\n              name=\"estimated_paying_connection_household\"\r\n              errors={errors}\r\n              touched={touched}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:epci\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"estimated_paying_connection_institution\"\r\n              value={values.estimated_paying_connection_institution}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError\r\n              name=\"estimated_paying_connection_institution\"\r\n              errors={errors}\r\n              touched={touched}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:epcp\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"estimated_paying_connection_public\"\r\n              value={values.estimated_paying_connection_public}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError\r\n              name=\"estimated_paying_connection_public\"\r\n              errors={errors}\r\n              touched={touched}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:epcc\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"estimated_paying_connection_commercial\"\r\n              value={values.estimated_paying_connection_commercial}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError\r\n              name=\"estimated_paying_connection_commercial\"\r\n              errors={errors}\r\n              touched={touched}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12 mt-2 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn\"\r\n            text={t(\"home:save\")}\r\n            type=\"submit\"\r\n            disabled={props.postLoading || props.updateLoading}\r\n            loading={props.postLoading || props.updateLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  postLoading: state.waterTarrifsData.postFixedRateWaterTariff.isFetching,\r\n  updateLoading: state.waterTarrifsData.updateUseBasedWaterTariff.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postFixedRateWaterTariffAction: postFixedRateWaterTariffAction,\r\n  getWaterTarrifsAction: getWaterTarrifsAction,\r\n  updateFixedRateWaterTariffAction: updateFixedRateWaterTariffAction,\r\n  getUsIncomeEstimateThisYearAction: getUsIncomeEstimateThisYearAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(UseBasedForm);\r\n"]},"metadata":{},"sourceType":"module"}