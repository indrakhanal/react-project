{"ast":null,"code":"import { apiList } from \"../../actionNames\";\nimport initDefaultAction from \"../../helper/default-action\";\nimport initDefaultReducer from \"../../helper/default-reducer\";\nimport initialState from \"../../helper/default-state\";\nconst apiDetails = Object.freeze(apiList.waterTarrif.getWaterTarrifs);\nexport default function getWaterTarrifsReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const stateCopy = Object.assign({}, state);\n  const actionName = apiDetails.actionName;\n  return initDefaultReducer(actionName, action, stateCopy);\n}\nexport const getWaterTarrifsAction = (lang, water_scheme_slug, tariff_type) => async dispatch => {\n  const updatedDetails = {\n    disableSuccessToast: true,\n    pathVariables: {\n      lang,\n      water_scheme_slug\n    }\n  };\n\n  if (tariff_type) {\n    updatedDetails['params'] = {\n      tariff_type\n    };\n  }\n\n  return await initDefaultAction(apiDetails, dispatch, updatedDetails);\n};","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/store/modules/waterTarrifs/getWaterTarrifs.ts"],"names":["apiList","initDefaultAction","initDefaultReducer","initialState","apiDetails","Object","freeze","waterTarrif","getWaterTarrifs","getWaterTarrifsReducer","state","action","stateCopy","assign","actionName","getWaterTarrifsAction","lang","water_scheme_slug","tariff_type","dispatch","updatedDetails","disableSuccessToast","pathVariables"],"mappings":"AAGA,SAASA,OAAT,QAAwB,mBAAxB;AACA,OAAOC,iBAAP,MAAqD,6BAArD;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAyCA,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcN,OAAO,CAACO,WAAR,CAAoBC,eAAlC,CAAnB;AAEA,eAAe,SAASC,sBAAT,GAA6G;AAAA,MAA7EC,KAA6E,uEAArEP,YAAqE;AAAA,MAAvDQ,MAAuD;AACxH,QAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAP,CAAc,EAAd,EAAkBH,KAAlB,CAAlB;AACA,QAAMI,UAAU,GAAGV,UAAU,CAACU,UAA9B;AAEA,SAAOZ,kBAAkB,CAACY,UAAD,EAAaH,MAAb,EAAqBC,SAArB,CAAzB;AACH;AAED,OAAO,MAAMG,qBAAqB,GAAG,CAACC,IAAD,EAAOC,iBAAP,EAA0BC,WAA1B,KAAkG,MAAOC,QAAP,IAA8B;AAEjK,QAAMC,cAAc,GAAG;AAAEC,IAAAA,mBAAmB,EAAE,IAAvB;AAA6BC,IAAAA,aAAa,EAAE;AAAEN,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAA5C,GAAvB;;AAEA,MAAIC,WAAJ,EAAiB;AACbE,IAAAA,cAAc,CAAC,QAAD,CAAd,GAA2B;AAAEF,MAAAA;AAAF,KAA3B;AACH;;AAED,SAAO,MAAMjB,iBAAiB,CAACG,UAAD,EAAae,QAAb,EAAuBC,cAAvB,CAA9B;AACH,CATM","sourcesContent":["import { Dispatch } from \"redux\";\r\nimport { AppThunk } from \"../..\";\r\n\r\nimport { apiList } from \"../../actionNames\";\r\nimport initDefaultAction, { APIResponseDetail } from \"../../helper/default-action\";\r\nimport initDefaultReducer from \"../../helper/default-reducer\";\r\nimport initialState from \"../../helper/default-state\";\r\n\r\ntype UneBasedType = {\r\n    estimated_paying_connection: any\r\n    id: any\r\n    rate: any\r\n    tariff: any\r\n    unit_from: any\r\n    unit_to: any\r\n}\r\n\r\ninterface RootObject {\r\n    id: number;\r\n    terif_type: string;\r\n    rate_for_institution: number;\r\n    rate_for_household: number;\r\n    rate_for_public: number;\r\n    rate_for_commercial: number;\r\n    apply_date: string;\r\n    estimated_paying_connection_household: number;\r\n    estimated_paying_connection_institution: number;\r\n    estimated_paying_connection_public: number;\r\n    estimated_paying_connection_commercial: number;\r\n}\r\n\r\n\r\nexport type WaterTarrifsType = {\r\n    id: number;\r\n    terif_type: \"Use Based\" | \"Fixed\"\r\n    rate_for_institution: number;\r\n    rate_for_household: number;\r\n    rate_for_public: number;\r\n    rate_for_commercial: number;\r\n    apply_date: string;\r\n    estimated_paying_connection_household: number;\r\n    estimated_paying_connection_institution: number;\r\n    estimated_paying_connection_public: number;\r\n    estimated_paying_connection_commercial: number;\r\n    used_based_units: UneBasedType[]\r\n}[]\r\n\r\nconst apiDetails = Object.freeze(apiList.waterTarrif.getWaterTarrifs);\r\n\r\nexport default function getWaterTarrifsReducer(state = initialState, action: DefaultAction): DefaultState<WaterTarrifsType> {\r\n    const stateCopy = Object.assign({}, state);\r\n    const actionName = apiDetails.actionName;\r\n\r\n    return initDefaultReducer(actionName, action, stateCopy);\r\n}\r\n\r\nexport const getWaterTarrifsAction = (lang, water_scheme_slug, tariff_type?: string): AppThunk<APIResponseDetail<WaterTarrifsType>> => async (dispatch: Dispatch) => {\r\n\r\n    const updatedDetails = { disableSuccessToast: true, pathVariables: { lang, water_scheme_slug } }\r\n\r\n    if (tariff_type) {\r\n        updatedDetails['params'] = { tariff_type }\r\n    }\r\n\r\n    return await initDefaultAction(apiDetails, dispatch, updatedDetails);\r\n};"]},"metadata":{},"sourceType":"module"}