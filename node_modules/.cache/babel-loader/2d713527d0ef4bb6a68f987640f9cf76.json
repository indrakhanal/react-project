{"ast":null,"code":"import { apiList } from \"../../actionNames\";\nimport initDefaultAction from \"../../helper/default-action\";\nimport initDefaultReducer from \"../../helper/default-reducer\";\nimport initialState from \"../../helper/default-state\";\nconst apiDetails = Object.freeze(apiList.icome.getPreviousIncomeTotal);\nexport default function getPreviousIncomeTotalReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const stateCopy = Object.assign({}, state);\n  const actionName = apiDetails.actionName;\n  return initDefaultReducer(actionName, action, stateCopy);\n}\nexport const getPreviousIncomeTotalAction = (lang, water_scheme_slug, year, month) => async dispatch => {\n  return await initDefaultAction(apiDetails, dispatch, {\n    disableSuccessToast: true,\n    pathVariables: {\n      lang,\n      water_scheme_slug\n    },\n    params: {\n      year,\n      month\n    }\n  });\n};","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/store/modules/income/getPreviousIncomeTotal.ts"],"names":["apiList","initDefaultAction","initDefaultReducer","initialState","apiDetails","Object","freeze","icome","getPreviousIncomeTotal","getPreviousIncomeTotalReducer","state","action","stateCopy","assign","actionName","getPreviousIncomeTotalAction","lang","water_scheme_slug","year","month","dispatch","disableSuccessToast","pathVariables","params"],"mappings":"AAGA,SAASA,OAAT,QAAwB,mBAAxB;AACA,OAAOC,iBAAP,MAEO,6BAFP;AAGA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAaA,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAP,CACjBN,OAAO,CAACO,KAAR,CAAcC,sBADG,CAAnB;AAIA,eAAe,SAASC,6BAAT,GAG2B;AAAA,MAFxCC,KAEwC,uEAFhCP,YAEgC;AAAA,MADxCQ,MACwC;AACxC,QAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAP,CAAc,EAAd,EAAkBH,KAAlB,CAAlB;AACA,QAAMI,UAAU,GAAGV,UAAU,CAACU,UAA9B;AAEA,SAAOZ,kBAAkB,CAACY,UAAD,EAAaH,MAAb,EAAqBC,SAArB,CAAzB;AACD;AAED,OAAO,MAAMG,4BAA4B,GACvC,CACEC,IADF,EAEEC,iBAFF,EAGEC,IAHF,EAIEC,KAJF,KAME,MAAOC,QAAP,IAA8B;AAC5B,SAAO,MAAMnB,iBAAiB,CAACG,UAAD,EAAagB,QAAb,EAAuB;AACnDC,IAAAA,mBAAmB,EAAE,IAD8B;AAEnDC,IAAAA,aAAa,EAAE;AAAEN,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAFoC;AAGnDM,IAAAA,MAAM,EAAE;AAAEL,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAH2C,GAAvB,CAA9B;AAKD,CAbE","sourcesContent":["import { Dispatch } from \"redux\";\r\nimport { AppThunk } from \"../..\";\r\n\r\nimport { apiList } from \"../../actionNames\";\r\nimport initDefaultAction, {\r\n  APIResponseDetail,\r\n} from \"../../helper/default-action\";\r\nimport initDefaultReducer from \"../../helper/default-reducer\";\r\nimport initialState from \"../../helper/default-state\";\r\n\r\ntype expenseType = {\r\n  income_category_name: string;\r\n  expense_category_name: string;\r\n  total_expense_amount: number;\r\n  total_income_amount: number;\r\n};\r\nexport type PreviousExpenditureTotal = {\r\n  previous_month_data: expenseType[];\r\n  present_month_data: expenseType[];\r\n};\r\n\r\nconst apiDetails = Object.freeze(\r\n  apiList.icome.getPreviousIncomeTotal\r\n);\r\n\r\nexport default function getPreviousIncomeTotalReducer(\r\n  state = initialState,\r\n  action: DefaultAction\r\n): DefaultState<PreviousExpenditureTotal> {\r\n  const stateCopy = Object.assign({}, state);\r\n  const actionName = apiDetails.actionName;\r\n\r\n  return initDefaultReducer(actionName, action, stateCopy);\r\n}\r\n\r\nexport const getPreviousIncomeTotalAction =\r\n  (\r\n    lang,\r\n    water_scheme_slug,\r\n    year,\r\n    month\r\n  ): AppThunk<APIResponseDetail<PreviousExpenditureTotal>> =>\r\n    async (dispatch: Dispatch) => {\r\n      return await initDefaultAction(apiDetails, dispatch, {\r\n        disableSuccessToast: true,\r\n        pathVariables: { lang, water_scheme_slug },\r\n        params: { year, month },\r\n      });\r\n    };\r\n"]},"metadata":{},"sourceType":"module"}