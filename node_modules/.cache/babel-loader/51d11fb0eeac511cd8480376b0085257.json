{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\src\\\\core\\\\Protected\\\\Maintainance\\\\AssetComponent\\\\AssetTable\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { DeleteIcon, EditIconDark } from \"assets/images/xd\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\nimport Button from \"components/UI/Forms/Buttons\";\nimport GeneralModal from \"components/UI/GeneralModal\";\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { deleteComponentInfoAction } from \"store/modules/componentInfo/deleteComponentInfo\";\nimport { getComponentInfoByIdAction } from \"store/modules/componentInfo/getComponentInfoById\";\nimport { getDashboardComponentInfoAction } from \"store/modules/maintainance/dashboardComponentInfo\";\nimport ComponentInfoForm from \"./ComponentInfoForm\";\nimport CostDataHeader, { CostData } from \"./Components/CostData\";\nimport NormalDataHeader, { NormalData } from \"./Components/NormalData\";\nimport RiskDataHeader, { RiskData } from \"./Components/RiskData\";\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport Thumbnail from \"assets/images/thumbnail.png\";\n\nconst AssetTable = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation([\"maintainance\"]);\n  const {\n    editId,\n    modal,\n    handleDeleteClick,\n    resetDeleteData,\n    toggleModal\n  } = useDeleteConfirmation();\n  const [editData, setEditData] = React.useState(null);\n  const [modalForm, setModalForm] = React.useState(false);\n  const [showRisk, setShowRisk] = React.useState(false);\n  const [showCost, setShowCost] = React.useState(false);\n  const [tableData, setTableData] = React.useState(null);\n\n  const toggleComponentModal = () => {\n    if (modalForm) {\n      setEditData(null);\n    }\n\n    setModalForm(!modalForm);\n  };\n\n  React.useEffect(() => {\n    if (props.schemeSlug) {\n      props.getDashboardComponentInfoAction(props.language, props.schemeSlug);\n    }\n  }, [props.language, props.schemeSlug]);\n  React.useEffect(() => {\n    if (props.componentData) {\n      const newGroupedData = {};\n      props.componentData.forEach(data => {\n        if (data.component.category.name in newGroupedData) {\n          newGroupedData[data.component.category.name].push(data);\n        } else {\n          newGroupedData[data.component.category.name] = [data];\n        }\n      });\n      setTableData(newGroupedData);\n    }\n  }, [props.componentData]);\n\n  const handleDelete = async () => {\n    try {\n      const response = await props.deleteComponentInfoAction(editId);\n\n      if (response.status === 204) {\n        toast.success(t(\"home:deleteSuccess\"));\n        props.getDashboardComponentInfoAction(props.language, props.schemeSlug);\n        resetDeleteData();\n      } else {\n        toast.error(t(\"home:deleteError\"));\n        resetDeleteData();\n      }\n    } catch (error) {\n      console.log(error, \"error\");\n    }\n  };\n\n  const handleEditClick = (id, component) => {\n    props.getComponentInfoByIdAction(props.language, id).then(res => {\n      if (res.data) {\n        setEditData({ ...res.data,\n          component\n        });\n      }\n    });\n  };\n\n  console.log(tableData, \"newGroupedData\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table-02\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn mb-2\",\n    text: t(\"maintainance:aci\"),\n    type: \"submit\",\n    onClick: toggleComponentModal // disabled={authorizing}\n    // loading={authorizing}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: showRisk || showCost ? \"placeholder\" : \"top-headers\",\n    colSpan: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, !showRisk && !showCost && t(\"maintainance:mitigation\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: showRisk || showCost ? \"placeholder\" : \"top-headers\",\n    colSpan: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, !showRisk && !showCost && t(\"maintainance:responsible\")))), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"bg-header\",\n    style: {\n      width: 350,\n      borderRadius: \"5px 0 0 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, t(\"maintainance:assetComponent\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"bg-header\",\n    colSpan: 1,\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, t(\"maintainance:dopf\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"bg-header\",\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, t(\"maintainance:lifespan\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"bg-header\",\n    style: {\n      borderRadius: \"0 5px 0 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, t(\"home:action\")), showCost ? /*#__PURE__*/React.createElement(CostDataHeader, {\n    onClick: () => setShowCost(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }) : showRisk ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RiskDataHeader, {\n    onClick: () => setShowRisk(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    rowSpan: 2,\n    className: \"expand-header risk-tab\",\n    role: \"button\",\n    onClick: () => setShowRisk(!showRisk),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pill\",\n    role: \"button\",\n    onClick: () => setShowRisk(!showRisk),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, t(\"maintainance:risk\")), t(\"maintainance:click\")), showRisk || showCost ? /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    rowSpan: 2,\n    className: \"expand-header  cost-tab\",\n    role: \"button\",\n    onClick: () => setShowCost(!showCost),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pill\",\n    role: \"button\",\n    onClick: () => setShowCost(!showCost),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, t(\"maintainance:cost\")), t(\"maintainance:click\")), showRisk || (showCost ? /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NormalDataHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  })))), tableData && Object.entries(tableData).map(item => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: showCost ? 9 : 4,\n      className: \"component-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, item[0]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    })), item[1] instanceof Array && item[1].map(data => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"component-image-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(SRLWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: data.componant_picture || Thumbnail,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 33\n      }\n    }))), data.component.name)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, data.possible_failure), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, data.maintenance_interval, \" \", data.interval_unit), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"button\",\n      onClick: e => {\n        e.stopPropagation();\n        handleEditClick(data.id, data.component);\n        toggleComponentModal();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: EditIconDark,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      role: \"button\",\n      onClick: e => {\n        e.stopPropagation();\n        handleDeleteClick(data.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: DeleteIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 29\n      }\n    }))), !showRisk && /*#__PURE__*/React.createElement(\"td\", {\n      className: `\n                        ${data.resulting_risk_score <= 4 ? \"bg-green\" : data.resulting_risk_score <= 8 ? \"bg-yellow\" : data.resulting_risk_score <= 12 ? \"bg-orange\" : \"bg-red\"}\n                        `,\n      role: \"button\",\n      onClick: () => setShowRisk(!showRisk),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 27\n      }\n    }, data.resulting_risk_score), showRisk || showCost ? /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 27\n      }\n    }, props.currency, \" \", data.seggregated_or_unseggregated_cost), showRisk || showCost ? /*#__PURE__*/React.createElement(React.Fragment, null, showCost ? /*#__PURE__*/React.createElement(CostData, {\n      data: data,\n      currency: props.currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 31\n      }\n    }) : showRisk ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RiskData, {\n      data: data,\n      onClick: () => setShowRisk(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 33\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NormalData, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 29\n      }\n    })))));\n  }))), /*#__PURE__*/React.createElement(GeneralModal, {\n    title: t(\"maintainance:addEditaci\"),\n    size: \"xl\",\n    open: modalForm,\n    toggle: () => {\n      if (modalForm) {\n        setEditData(null);\n      }\n\n      toggleComponentModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ComponentInfoForm, {\n    editData: editData,\n    setEditData: setEditData,\n    toggle: setModalForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ConfirmationModal, {\n    open: modal,\n    handleModal: () => toggleModal(),\n    handleConfirmClick: () => handleDelete(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(AssetTable, \"qocnfJQ8Psxr3m1HqciwnJNj790=\", false, function () {\n  return [useTranslation, useDeleteConfirmation];\n});\n\n_c = AssetTable;\n\nconst mapStateToProps = state => {\n  var _state$waterSchemeDat, _state$waterSchemeDat2;\n\n  return {\n    language: state.i18nextData.languageType,\n    schemeSlug: (_state$waterSchemeDat = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat === void 0 ? void 0 : _state$waterSchemeDat.slug,\n    currency: (_state$waterSchemeDat2 = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat2 === void 0 ? void 0 : _state$waterSchemeDat2.currency,\n    componentData: state.maintainanceData.dashboardComponentInfoData.data\n  };\n};\n\nconst mapDispatchToProps = {\n  getDashboardComponentInfoAction: getDashboardComponentInfoAction,\n  deleteComponentInfoAction: deleteComponentInfoAction,\n  getComponentInfoByIdAction: getComponentInfoByIdAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(AssetTable);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AssetTable\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/core/Protected/Maintainance/AssetComponent/AssetTable/index.tsx"],"names":["DeleteIcon","EditIconDark","toast","ConfirmationModal","Button","GeneralModal","useDeleteConfirmation","React","useTranslation","connect","deleteComponentInfoAction","getComponentInfoByIdAction","getDashboardComponentInfoAction","ComponentInfoForm","CostDataHeader","CostData","NormalDataHeader","NormalData","RiskDataHeader","RiskData","SRLWrapper","Thumbnail","AssetTable","props","t","editId","modal","handleDeleteClick","resetDeleteData","toggleModal","editData","setEditData","useState","modalForm","setModalForm","showRisk","setShowRisk","showCost","setShowCost","tableData","setTableData","toggleComponentModal","useEffect","schemeSlug","language","componentData","newGroupedData","forEach","data","component","category","name","push","handleDelete","response","status","success","error","console","log","handleEditClick","id","then","res","width","borderRadius","Object","entries","map","item","Array","componant_picture","possible_failure","maintenance_interval","interval_unit","e","stopPropagation","resulting_risk_score","currency","seggregated_or_unseggregated_cost","mapStateToProps","state","i18nextData","languageType","waterSchemeData","waterSchemeDetailsData","slug","maintainanceData","dashboardComponentInfoData","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import { DeleteIcon, EditIconDark } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { deleteComponentInfoAction } from \"store/modules/componentInfo/deleteComponentInfo\";\r\nimport { getComponentInfoByIdAction } from \"store/modules/componentInfo/getComponentInfoById\";\r\nimport {\r\n  DashboardComponentInfoType,\r\n  getDashboardComponentInfoAction,\r\n} from \"store/modules/maintainance/dashboardComponentInfo\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport ComponentInfoForm from \"./ComponentInfoForm\";\r\nimport CostDataHeader, { CostData } from \"./Components/CostData\";\r\nimport NormalDataHeader, { NormalData } from \"./Components/NormalData\";\r\nimport RiskDataHeader, { RiskData } from \"./Components/RiskData\";\r\nimport { SRLWrapper } from \"simple-react-lightbox\";\r\nimport Thumbnail from \"assets/images/thumbnail.png\";\r\n\r\n\r\ninterface IProps extends PropsFromRedux {}\r\n\r\nconst AssetTable = (props: IProps) => {\r\n  const { t } = useTranslation([\"maintainance\"]);\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } =\r\n    useDeleteConfirmation();\r\n\r\n  const [editData, setEditData] = React.useState<any>(null);\r\n  const [modalForm, setModalForm] = React.useState(false);\r\n\r\n  const [showRisk, setShowRisk] = React.useState(false);\r\n  const [showCost, setShowCost] = React.useState(false);\r\n\r\n  const [tableData, setTableData] = React.useState<any>(null);\r\n\r\n  const toggleComponentModal = () => {\r\n    if (modalForm) {\r\n      setEditData(null);\r\n    }\r\n    setModalForm(!modalForm);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      props.getDashboardComponentInfoAction(props.language, props.schemeSlug);\r\n    }\r\n  }, [props.language, props.schemeSlug]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.componentData) {\r\n      const newGroupedData: any = {};\r\n\r\n      props.componentData.forEach((data) => {\r\n        if (data.component.category.name in newGroupedData) {\r\n          newGroupedData[data.component.category.name].push(data);\r\n        } else {\r\n          newGroupedData[data.component.category.name] = [data];\r\n        }\r\n      });\r\n      setTableData(newGroupedData);\r\n    }\r\n  }, [props.componentData]);\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      const response = await props.deleteComponentInfoAction(editId);\r\n      if (response.status === 204) {\r\n        toast.success(t(\"home:deleteSuccess\"));\r\n        props.getDashboardComponentInfoAction(props.language, props.schemeSlug);\r\n        resetDeleteData();\r\n      } else {\r\n        toast.error(t(\"home:deleteError\"));\r\n        resetDeleteData();\r\n      }\r\n    } catch (error) {\r\n      console.log(error, \"error\");\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (id, component) => {\r\n    props.getComponentInfoByIdAction(props.language, id).then((res) => {\r\n      if (res.data) {\r\n        setEditData({ ...res.data, component });\r\n      }\r\n    });\r\n  };\r\n\r\n  console.log(tableData, \"newGroupedData\");\r\n  return (\r\n    <div className=\"tabular\">\r\n      <table className=\"table-02\">\r\n        <tbody>\r\n          <>\r\n            <tr className=\"\">\r\n              <th scope=\"col\" colSpan={6}>\r\n                <Button\r\n                  className=\"btn custom-btn mb-2\"\r\n                  text={t(\"maintainance:aci\")}\r\n                  type=\"submit\"\r\n                  onClick={toggleComponentModal}\r\n                  // disabled={authorizing}\r\n                  // loading={authorizing}\r\n                />\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={showRisk || showCost ? \"placeholder\" : \"top-headers\"}\r\n                colSpan={3}\r\n              >\r\n                {!showRisk && !showCost && t(\"maintainance:mitigation\")}\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={showRisk || showCost ? \"placeholder\" : \"top-headers\"}\r\n                colSpan={3}\r\n              >\r\n                {!showRisk && !showCost && t(\"maintainance:responsible\")}\r\n              </th>\r\n            </tr>\r\n          </>\r\n\r\n          <tr className=\"header\">\r\n            <th scope=\"col\" className=\"bg-header\" style={{ width: 350, borderRadius: \"5px 0 0 0\" }}>\r\n              {t(\"maintainance:assetComponent\")}\r\n            </th>\r\n            <th scope=\"col\" className=\"bg-header\" colSpan={1} style={{  }}>\r\n              {t(\"maintainance:dopf\")}\r\n            </th>\r\n            <th scope=\"col\" className=\"bg-header\" style={{  }}>\r\n              {t(\"maintainance:lifespan\")}\r\n            </th>\r\n            <th scope=\"col\" className=\"bg-header\" style={{ borderRadius: \"0 5px 0 0\" }}>\r\n              {t(\"home:action\")}\r\n            </th>\r\n\r\n            {showCost ? (\r\n              <CostDataHeader onClick={() => setShowCost(false)} />\r\n            ) : showRisk ? (\r\n              <>\r\n                <RiskDataHeader onClick={() => setShowRisk(false)} />\r\n              </>\r\n            ) : (\r\n              <th\r\n                scope=\"col\"\r\n                rowSpan={2}\r\n                className=\"expand-header risk-tab\"\r\n                role=\"button\"\r\n                onClick={() => setShowRisk(!showRisk)}\r\n              >\r\n                <span className=\"pill\" role=\"button\" onClick={() => setShowRisk(!showRisk)}>\r\n                  {t(\"maintainance:risk\")}\r\n                </span>\r\n                {t(\"maintainance:click\")}\r\n              </th>\r\n            )}\r\n\r\n            {showRisk || showCost ? (\r\n              <></>\r\n            ) : (\r\n              <th\r\n                scope=\"col\"\r\n                rowSpan={2}\r\n                className=\"expand-header  cost-tab\"\r\n                role=\"button\"\r\n                onClick={() => setShowCost(!showCost)}\r\n              >\r\n                <span className=\"pill\" role=\"button\" onClick={() => setShowCost(!showCost)}>\r\n                  {t(\"maintainance:cost\")}\r\n                </span>\r\n                {t(\"maintainance:click\")}\r\n              </th>\r\n            )}\r\n\r\n            {showRisk ||\r\n              (showCost ? (\r\n                <></>\r\n              ) : (\r\n                <>\r\n                  <NormalDataHeader />\r\n                </>\r\n              ))}\r\n          </tr>\r\n\r\n          {tableData &&\r\n            Object.entries(tableData).map((item) => {\r\n              return (\r\n                <React.Fragment>\r\n                  <tr>\r\n                    <td colSpan={showCost ? 9 : 4} className=\"component-title\">\r\n                      {item[0]}\r\n                    </td>\r\n                    <td></td>\r\n                  </tr>\r\n                  {item[1] instanceof Array &&\r\n                    item[1].map((data: DashboardComponentInfoType) => (\r\n                      <tr>\r\n                        <td>\r\n                          <div className=\"d-flex\">\r\n                            <div className=\"component-image-wrapper\">\r\n                              <SRLWrapper >\r\n                                <img src={data.componant_picture || Thumbnail} alt=\"\" />\r\n                              </SRLWrapper>\r\n                            </div>\r\n                            {data.component.name}\r\n                          </div>\r\n                        </td>\r\n                        <td>{data.possible_failure}</td>\r\n                        <td>{data.maintenance_interval} {data.interval_unit}</td>\r\n                        <td className=\"action\">\r\n                          <div\r\n                            role=\"button\"\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              handleEditClick(data.id, data.component);\r\n                              toggleComponentModal();\r\n                            }}\r\n                          >\r\n                            <img src={EditIconDark} alt=\"\" />\r\n                          </div>\r\n                          <div\r\n                            role=\"button\"\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              handleDeleteClick(data.id);\r\n                            }}\r\n                          >\r\n                            <img src={DeleteIcon} alt=\"\" />\r\n                          </div>\r\n                        </td>\r\n\r\n                        {!showRisk && (\r\n                          <td\r\n                            className={`\r\n                        ${\r\n                          data.resulting_risk_score <= 4\r\n                            ? \"bg-green\"\r\n                            : data.resulting_risk_score <= 8\r\n                            ? \"bg-yellow\"\r\n                            : data.resulting_risk_score <= 12\r\n                            ? \"bg-orange\"\r\n                            : \"bg-red\"\r\n                        }\r\n                        `}\r\n                            role=\"button\"\r\n                            onClick={() => setShowRisk(!showRisk)}\r\n                          >\r\n                            {data.resulting_risk_score}\r\n                          </td>\r\n                        )}\r\n                        {showRisk || showCost ? (\r\n                          <></>\r\n                        ) : (\r\n                          <td className=\"text-center\">\r\n                            {props.currency} {data.seggregated_or_unseggregated_cost}\r\n                          </td>\r\n                        )}\r\n                        {showRisk || showCost ? (\r\n                          <>\r\n                            {showCost ? (\r\n                              <CostData data={data} currency={props.currency} />\r\n                            ) : showRisk ? (\r\n                              <>\r\n                                <RiskData data={data} onClick={() => setShowRisk(false)} />\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <NormalData data={data} />\r\n                          </>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n\r\n      <GeneralModal\r\n        title={t(\"maintainance:addEditaci\")}\r\n        size=\"xl\"\r\n        open={modalForm}\r\n        toggle={() => {\r\n          if (modalForm) {\r\n            setEditData(null);\r\n          }\r\n          toggleComponentModal();\r\n        }}\r\n      >\r\n        <ComponentInfoForm editData={editData} setEditData={setEditData} toggle={setModalForm} />\r\n      </GeneralModal>\r\n\r\n      <ConfirmationModal\r\n        open={modal}\r\n        handleModal={() => toggleModal()}\r\n        handleConfirmClick={() => handleDelete()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  currency: state.waterSchemeData.waterSchemeDetailsData.data?.currency,\r\n  componentData: state.maintainanceData.dashboardComponentInfoData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getDashboardComponentInfoAction: getDashboardComponentInfoAction,\r\n  deleteComponentInfoAction: deleteComponentInfoAction,\r\n  getComponentInfoByIdAction: getComponentInfoByIdAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(AssetTable);\r\n"]},"metadata":{},"sourceType":"module"}