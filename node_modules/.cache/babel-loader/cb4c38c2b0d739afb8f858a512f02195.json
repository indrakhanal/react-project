{"ast":null,"code":"var _jsxFileName = \"E:\\\\Smart Tech Solution\\\\React JS\\\\react-project\\\\src\\\\core\\\\Protected\\\\Home\\\\InflationParameters\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport { useFormik } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getInflationParametersAction } from \"store/modules/inflationParameters/getInflationParameters\";\nimport { postInflationParametersAction } from \"store/modules/inflationParameters/postInflationParameters\";\nimport { updateInflationparametersAction } from \"store/modules/inflationParameters/updateInflationParameters\";\nimport * as Yup from \"yup\";\nimport { useTranslation } from \"react-i18next\";\nimport TooltipLabel from \"components/UI/TooltipLabel\";\nconst validationSchema = Yup.object({\n  rate: Yup.string().required(\"This field is required\"),\n  dis_allow_edit: Yup.mixed().nullable().required(\"This field is required\")\n});\n\nconst InflationParameters = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [initialData, setInitialData] = React.useState({\n    rate: 0,\n    dis_allow_edit: null\n  });\n  React.useEffect(() => {\n    if (props.language) {\n      props.getInflationParametersAction(props.language);\n    }\n  }, [props.language]);\n  const {\n    values,\n    errors,\n    touched,\n    setFieldTouched,\n    setFieldValue,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = useFormik({\n    enableReinitialize: true,\n    initialValues: initialData,\n    validationSchema: validationSchema,\n    onSubmit: async (values, _ref) => {\n      var _values$dis_allow_edi, _props$inflationParam;\n\n      let {\n        resetForm\n      } = _ref;\n      let response;\n      const requestData = { ...values,\n        dis_allow_edit: values === null || values === void 0 ? void 0 : (_values$dis_allow_edi = values.dis_allow_edit) === null || _values$dis_allow_edi === void 0 ? void 0 : _values$dis_allow_edi.value\n      };\n\n      if (props.inflationParametersList instanceof Array && ((_props$inflationParam = props.inflationParametersList) === null || _props$inflationParam === void 0 ? void 0 : _props$inflationParam.length) > 0) {\n        const editData = props.inflationParametersList[0];\n        response = await props.updateInflationparametersAction(props.language, editData.id, requestData);\n      } else {\n        response = await props.postInflationParametersAction(props.language, requestData);\n      }\n\n      if (response.status === 201 || response.status === 200) {\n        if (response.status === 201) {\n          resetForm();\n          toast.success(t(\"home:postSuccess\"));\n        } else {\n          setInitialData({\n            rate: 0,\n            dis_allow_edit: null\n          });\n          toast.success(t(\"home:updateSuccess\"));\n        }\n\n        props.getInflationParametersAction(props.language);\n      }\n    }\n  });\n  React.useEffect(() => {\n    var _props$inflationParam2;\n\n    if (props.inflationParametersList instanceof Array && ((_props$inflationParam2 = props.inflationParametersList) === null || _props$inflationParam2 === void 0 ? void 0 : _props$inflationParam2.length) > 0) {\n      const editData = props.inflationParametersList[0];\n      setInitialData({ ...editData,\n        dis_allow_edit: editData !== null && editData !== void 0 && editData.dis_allow_edit ? {\n          label: \"Yes\",\n          value: true\n        } : {\n          label: \"No\",\n          value: false\n        }\n      });\n    }\n  }, [props.inflationParametersList]);\n  console.log(props.inflationParametersList, \"inflationParametersList\");\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row rate_form align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, t(\"finance:daeams\"), \" \", /*#__PURE__*/React.createElement(TooltipLabel, {\n    id: \"twatm\",\n    text: `This will affect  the Mobile App's Cashbook month Closing`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }), \":\"), /*#__PURE__*/React.createElement(StyledSelect, {\n    name: \"dis_allow_edit\",\n    options: [{\n      label: \"Yes\",\n      value: true\n    }, {\n      label: \"No\",\n      value: false\n    }],\n    value: values.dis_allow_edit,\n    onChange: _ref2 => {\n      let {\n        name,\n        value\n      } = _ref2;\n      setFieldValue(name, value);\n      handleSubmit();\n    },\n    onBlur: () => {\n      setFieldTouched(\"dis_allow_edit\", true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"dis_allow_edit\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(InflationParameters, \"NJkMjyk/XaBgpkmWdsI0h7e+788=\", false, function () {\n  return [useTranslation, useFormik];\n});\n\n_c = InflationParameters;\n\nconst mapStateToProps = state => ({\n  language: state.i18nextData.languageType,\n  postLoading: state.inflationParametersData.postInflationParameters.isFetching,\n  updateLoading: state.inflationParametersData.postInflationParameters.isFetching,\n  inflationParametersList: state.inflationParametersData.getInflationParameters.data\n});\n\nconst mapDispatchToProps = {\n  postInflationParametersAction: postInflationParametersAction,\n  updateInflationparametersAction: updateInflationparametersAction,\n  getInflationParametersAction: getInflationParametersAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(InflationParameters);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InflationParameters\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/core/Protected/Home/InflationParameters/index.tsx"],"names":["FormikValidationError","StyledSelect","toast","useFormik","React","connect","getInflationParametersAction","postInflationParametersAction","updateInflationparametersAction","Yup","useTranslation","TooltipLabel","validationSchema","object","rate","string","required","dis_allow_edit","mixed","nullable","InflationParameters","props","t","initialData","setInitialData","useState","useEffect","language","values","errors","touched","setFieldTouched","setFieldValue","handleChange","handleBlur","handleSubmit","enableReinitialize","initialValues","onSubmit","resetForm","response","requestData","value","inflationParametersList","Array","length","editData","id","status","success","label","console","log","e","preventDefault","name","mapStateToProps","state","i18nextData","languageType","postLoading","inflationParametersData","postInflationParameters","isFetching","updateLoading","getInflationParameters","data","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getInflationParametersAction } from \"store/modules/inflationParameters/getInflationParameters\";\r\nimport { postInflationParametersAction } from \"store/modules/inflationParameters/postInflationParameters\";\r\nimport { updateInflationparametersAction } from \"store/modules/inflationParameters/updateInflationParameters\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\n\r\nconst validationSchema = Yup.object({\r\n  rate: Yup.string().required(\"This field is required\"),\r\n  dis_allow_edit: Yup.mixed().nullable().required(\"This field is required\"),\r\n});\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst InflationParameters = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [initialData, setInitialData] = React.useState({\r\n    rate: 0,\r\n    dis_allow_edit: null as null | OptionType,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.language) {\r\n      props.getInflationParametersAction(props.language);\r\n    }\r\n  }, [props.language]);\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      let response;\r\n      const requestData = {\r\n        ...values,\r\n        dis_allow_edit: values?.dis_allow_edit?.value,\r\n      };\r\n\r\n      if (\r\n        props.inflationParametersList instanceof Array &&\r\n        props.inflationParametersList?.length > 0\r\n      ) {\r\n        const editData = props.inflationParametersList[0];\r\n        response = await props.updateInflationparametersAction(\r\n          props.language,\r\n          editData.id,\r\n          requestData\r\n        );\r\n      } else {\r\n        response = await props.postInflationParametersAction(props.language, requestData);\r\n      }\r\n\r\n      if (response.status === 201 || response.status === 200) {\r\n        if (response.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          setInitialData({\r\n            rate: 0,\r\n            dis_allow_edit: null,\r\n          });\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n        props.getInflationParametersAction(props.language);\r\n      }\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      props.inflationParametersList instanceof Array &&\r\n      props.inflationParametersList?.length > 0\r\n    ) {\r\n      const editData = props.inflationParametersList[0];\r\n      setInitialData({\r\n        ...editData,\r\n        dis_allow_edit: editData?.dis_allow_edit\r\n          ? { label: \"Yes\", value: true }\r\n          : { label: \"No\", value: false },\r\n      });\r\n    }\r\n  }, [props.inflationParametersList]);\r\n\r\n  console.log(props.inflationParametersList, \"inflationParametersList\");\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row rate_form align-items-center\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:daeams\")}{\" \"}\r\n              <TooltipLabel\r\n                id={\"twatm\"}\r\n                text={`This will affect  the Mobile App's Cashbook month Closing`}\r\n              />\r\n              :\r\n            </label>\r\n\r\n            <StyledSelect\r\n              name=\"dis_allow_edit\"\r\n              options={[\r\n                { label: \"Yes\", value: true },\r\n                { label: \"No\", value: false },\r\n              ]}\r\n              value={values.dis_allow_edit}\r\n              onChange={({ name, value }) => {\r\n                setFieldValue(name, value);\r\n                handleSubmit()\r\n              }}\r\n              onBlur={() => {\r\n                setFieldTouched(\"dis_allow_edit\", true);\r\n              }}\r\n            />\r\n            <FormikValidationError name=\"dis_allow_edit\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  postLoading: state.inflationParametersData.postInflationParameters.isFetching,\r\n  updateLoading: state.inflationParametersData.postInflationParameters.isFetching,\r\n  inflationParametersList: state.inflationParametersData.getInflationParameters.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postInflationParametersAction: postInflationParametersAction,\r\n  updateInflationparametersAction: updateInflationparametersAction,\r\n  getInflationParametersAction: getInflationParametersAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(InflationParameters);\r\n"]},"metadata":{},"sourceType":"module"}