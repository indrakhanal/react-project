{"ast":null,"code":"var _jsxFileName = \"E:\\\\Smart Tech Solution\\\\React JS\\\\react-project\\\\src\\\\components\\\\React\\\\FormikValidationError\\\\FormikValidationError.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction FormikValidationError(props) {\n  _s();\n\n  const {\n    name,\n    touched,\n    errors\n  } = props;\n  const {\n    t\n  } = useTranslation();\n  return touched[name] && !!errors[name] ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ic-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), \" \", errors[name] ? t(errors[name]) : \"\")) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\n_s(FormikValidationError, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = FormikValidationError;\nexport function FormikFieldArrayValidationError(props) {\n  const {\n    name,\n    touched,\n    errors,\n    index,\n    keyName\n  } = props;\n\n  if (`${keyName}` in errors && `${keyName}` in touched && errors[keyName][index]) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error font-weight-bold\",\n      style: {\n        fontStyle: \"normal\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, \" \", errors[keyName][index][name] && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ic-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), \" \", errors[keyName][index][name]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  });\n}\n_c2 = FormikFieldArrayValidationError;\nexport default FormikValidationError;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormikValidationError\");\n$RefreshReg$(_c2, \"FormikFieldArrayValidationError\");","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/components/React/FormikValidationError/FormikValidationError.tsx"],"names":["React","useTranslation","FormikValidationError","props","name","touched","errors","t","FormikFieldArrayValidationError","index","keyName","fontStyle"],"mappings":";;;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAUA,SAASC,qBAAT,CAA+BC,KAA/B,EAA2D;AAAA;;AACzD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA4BH,KAAlC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAQN,cAAc,EAA5B;AAEA,SAAOI,OAAO,CAACD,IAAD,CAAP,IAAiB,CAAC,CAACE,MAAM,CAACF,IAAD,CAAzB,gBACL;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,eAEE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAEqC,GAFrC,EAGGE,MAAM,CAACF,IAAD,CAAN,GAAeG,CAAC,CAACD,MAAM,CAACF,IAAD,CAAP,CAAhB,GAA2C,EAH9C,CADF,CADK,gBASL,yCATF;AAWD;;GAfQF,qB;UAEOD,c;;;KAFPC,qB;AAiBT,OAAO,SAASM,+BAAT,CAAyCL,KAAzC,EAAqE;AAC1E,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,MAAjB;AAAyBG,IAAAA,KAAzB;AAAgCC,IAAAA;AAAhC,MAA4CP,KAAlD;;AACA,MACG,GAAEO,OAAQ,EAAX,IAAgBJ,MAAhB,IACC,GAAEI,OAAQ,EAAX,IAAgBL,OADhB,IAEAC,MAAM,CAACI,OAAD,CAAN,CAAiBD,KAAjB,CAHF,EAIE;AACA,wBACE;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAyC,MAAA,KAAK,EAAE;AAAEE,QAAAA,SAAS,EAAE;AAAb,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEGL,MAAM,CAACI,OAAD,CAAN,CAAiBD,KAAjB,EAAyBL,IAAzB,kBACC;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAIK,GAJL,EAKGE,MAAM,CAACI,OAAD,CAAN,CAAiBD,KAAjB,EAAyBL,IAAzB,CALH,CADF;AASD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;MAnBeI,+B;AAqBhB,eAAeN,qBAAf","sourcesContent":["import React, { ReactElement } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  touched: { [key: string]: any | undefined };\r\n  errors: { [key: string]: any | undefined };\r\n  index?: number;\r\n  keyName?: string;\r\n}\r\n\r\nfunction FormikValidationError(props: Props): ReactElement {\r\n  const { name, touched, errors } = props;\r\n  const { t } = useTranslation();\r\n\r\n  return touched[name] && !!errors[name] ? (\r\n    <div className=\"text-left\">\r\n      <span className=\"error font-weight-bold\" >\r\n        {\" \"}\r\n        <span className=\"ic-error\"></span>{\" \"}\r\n        {errors[name] ? t(errors[name] as string) : \"\"}\r\n      </span>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport function FormikFieldArrayValidationError(props: Props): ReactElement {\r\n  const { name, touched, errors, index, keyName } = props;\r\n  if (\r\n    `${keyName}` in errors &&\r\n    `${keyName}` in touched &&\r\n    errors[keyName!][index!]\r\n  ) {\r\n    return (\r\n      <span className=\"error font-weight-bold\" style={{ fontStyle: \"normal\" }}>\r\n        {\" \"}\r\n        {errors[keyName!][index!][name] && (\r\n          <span className=\"ic-error\"></span>\r\n        )}{\" \"}\r\n        {errors[keyName!][index!][name] as string}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  return <span></span>;\r\n}\r\n\r\nexport default FormikValidationError;\r\n"]},"metadata":{},"sourceType":"module"}