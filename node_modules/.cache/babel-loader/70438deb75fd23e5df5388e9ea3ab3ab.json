{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\src\\\\core\\\\Public\\\\Home\\\\IncomeExpend\\\\IncomeExpendGraph.tsx\",\n    _s = $RefreshSig$();\n\nimport GeneralChart from \"components/UI/Charts/General\";\nimport { getNumberByLanguage } from \"i18n/i18n\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { getYearFromDate } from \"utils/utilsFunction/date-converter\";\nimport IncomeExpendTable from \"./IncomeExpendTable\";\n\nconst IncomeExpendGraph = props => {\n  _s();\n\n  const {\n    incomeExpenseData\n  } = props;\n  const {\n    t\n  } = useTranslation([\"home\"]);\n  const [years, setYears] = useState([]);\n  const [income, setIncome] = useState([]);\n  const [expense, setExpense] = useState([]);\n  useEffect(() => {\n    if (incomeExpenseData) {\n      var _incomeExpenseData$in, _incomeExpenseData$in2, _incomeExpenseData$ex;\n\n      const yearArray = incomeExpenseData === null || incomeExpenseData === void 0 ? void 0 : (_incomeExpenseData$in = incomeExpenseData.income) === null || _incomeExpenseData$in === void 0 ? void 0 : _incomeExpenseData$in.map(item => `${t(\"home:year\")} ${getNumberByLanguage(item.year_num)} -  ${getNumberByLanguage(getYearFromDate(item.year_from))} - ${getNumberByLanguage(getYearFromDate(item.year_to))}`);\n      const incomeArray = incomeExpenseData === null || incomeExpenseData === void 0 ? void 0 : (_incomeExpenseData$in2 = incomeExpenseData.income) === null || _incomeExpenseData$in2 === void 0 ? void 0 : _incomeExpenseData$in2.map(item => item.total_amount);\n      const expenseArray = incomeExpenseData === null || incomeExpenseData === void 0 ? void 0 : (_incomeExpenseData$ex = incomeExpenseData.expense) === null || _incomeExpenseData$ex === void 0 ? void 0 : _incomeExpenseData$ex.map(item => item.total_amount);\n      setYears(yearArray);\n      setIncome(incomeArray);\n      setExpense(expenseArray);\n    }\n  }, [incomeExpenseData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GeneralChart, {\n    minHeight: 350,\n    options: {\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          type: \"shadow\"\n        } // formatter: handleCustomTooltip,\n\n      },\n      legend: {\n        show: false\n      },\n      grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        top: \"8%\",\n        containLabel: true\n      },\n      xAxis: {\n        type: \"category\",\n        boundaryGap: false,\n        data: years,\n        axisLabel: {\n          formatter: function (name) {\n            var _name$split$;\n\n            return name === null || name === void 0 ? void 0 : (_name$split$ = name.split(\"-\")[0]) === null || _name$split$ === void 0 ? void 0 : _name$split$.replace(\"Year\", \"\");\n          }\n        }\n      },\n      yAxis: {\n        type: \"value\",\n        axisLabel: {\n          formatter: function (name) {\n            return getNumberByLanguage(name);\n          }\n        }\n      },\n      series: [{\n        name: `${t(\"home:total\")} ${t(\"home:income\")} `,\n        type: \"line\",\n        smooth: true,\n        data: income,\n        lineStyle: {\n          color: \"#4DFFFF\"\n        }\n      }, {\n        name: `${t(\"home:total\")} ${t(\"home:expense\")} `,\n        type: \"line\",\n        smooth: true,\n        data: expense,\n        lineStyle: {\n          color: \"#ff4D4D\"\n        }\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IncomeExpendTable, {\n    heading: years,\n    income: income,\n    expense: expense,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(IncomeExpendGraph, \"CAdZbYM+EPctC3G7YthUuzhUGZ8=\", false, function () {\n  return [useTranslation];\n});\n\n_c = IncomeExpendGraph;\n\nconst mapStateToProps = state => ({\n  incomeExpenseData: state.reportData.incomeExpenseData.data\n});\n\nconst mapDispatchToProps = {};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(IncomeExpendGraph);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IncomeExpendGraph\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/core/Public/Home/IncomeExpend/IncomeExpendGraph.tsx"],"names":["GeneralChart","getNumberByLanguage","React","useEffect","useState","useTranslation","connect","getYearFromDate","IncomeExpendTable","IncomeExpendGraph","props","incomeExpenseData","t","years","setYears","income","setIncome","expense","setExpense","yearArray","map","item","year_num","year_from","year_to","incomeArray","total_amount","expenseArray","tooltip","trigger","axisPointer","type","legend","show","grid","left","right","bottom","top","containLabel","xAxis","boundaryGap","data","axisLabel","formatter","name","split","replace","yAxis","series","smooth","lineStyle","color","mapStateToProps","state","reportData","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import GeneralChart from \"components/UI/Charts/General\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getYearFromDate } from \"utils/utilsFunction/date-converter\";\r\nimport IncomeExpendTable from \"./IncomeExpendTable\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst IncomeExpendGraph = (props: Props) => {\r\n  const { incomeExpenseData } = props;\r\n  const { t } = useTranslation([\"home\"]);\r\n\r\n  const [years, setYears] = useState<(string | number)[]>([]);\r\n  const [income, setIncome] = useState<(string | number)[]>([]);\r\n  const [expense, setExpense] = useState<(string | number)[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (incomeExpenseData) {\r\n      const yearArray = incomeExpenseData?.income?.map(\r\n        (item) =>\r\n          `${t(\"home:year\")} ${getNumberByLanguage(item.year_num)} -  ${getNumberByLanguage(\r\n            getYearFromDate(item.year_from)\r\n          )} - ${getNumberByLanguage(getYearFromDate(item.year_to))}`\r\n      );\r\n      const incomeArray = incomeExpenseData?.income?.map((item) => item.total_amount);\r\n      const expenseArray = incomeExpenseData?.expense?.map((item) => item.total_amount);\r\n\r\n      setYears(yearArray);\r\n      setIncome(incomeArray);\r\n      setExpense(expenseArray);\r\n    }\r\n  }, [incomeExpenseData]);\r\n\r\n  return (\r\n    <>\r\n      <GeneralChart\r\n        minHeight={350}\r\n        options={{\r\n          tooltip: {\r\n            trigger: \"axis\",\r\n            axisPointer: {\r\n              type: \"shadow\",\r\n            },\r\n            // formatter: handleCustomTooltip,\r\n          },\r\n          legend: {\r\n            show: false,\r\n          },\r\n          grid: {\r\n            left: \"3%\",\r\n            right: \"4%\",\r\n            bottom: \"3%\",\r\n            top: \"8%\",\r\n            containLabel: true,\r\n          },\r\n          xAxis: {\r\n            type: \"category\",\r\n            boundaryGap: false,\r\n            data: years,\r\n            axisLabel: {\r\n              formatter: function (name) {\r\n                return name?.split(\"-\")[0]?.replace(\"Year\", \"\");\r\n              },\r\n            },\r\n          },\r\n          yAxis: {\r\n            type: \"value\",\r\n            axisLabel: {\r\n              formatter: function (name) {\r\n                return getNumberByLanguage(name);\r\n              },\r\n            },\r\n          },\r\n          series: [\r\n            {\r\n              name: `${t(\"home:total\")} ${t(\"home:income\")} `,\r\n              type: \"line\",\r\n              smooth: true,\r\n              data: income,\r\n              lineStyle: { color: \"#4DFFFF\" },\r\n            },\r\n            {\r\n              name: `${t(\"home:total\")} ${t(\"home:expense\")} `,\r\n              type: \"line\",\r\n              smooth: true,\r\n              data: expense,\r\n              lineStyle: { color: \"#ff4D4D\" },\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n\r\n      <IncomeExpendTable heading={years} income={income} expense={expense} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(IncomeExpendGraph);\r\n"]},"metadata":{},"sourceType":"module"}