{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\src\\\\core\\\\Protected\\\\Service\\\\QualityTestParameters\\\\ManageQTParameters\\\\List.tsx\",\n    _s = $RefreshSig$();\n\nimport { DeleteIcon, EditIconDark } from \"assets/images/xd\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport React from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { deleteTestParametersAction } from \"store/modules/testParamters/deleteTestParameters\";\nimport { getTestParametersAction } from \"store/modules/testParamters/getTestParameters\";\nimport { useTranslation } from \"react-i18next\";\nimport { getNumberByLanguage } from \"i18n/i18n\";\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\n\nconst List = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    editId,\n    modal,\n    handleDeleteClick,\n    resetDeleteData,\n    toggleModal\n  } = useDeleteConfirmation();\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getTestParametersAction());\n  }, []);\n  const testParameters = useSelector(state => state.testParamtersData.testParametersData.data);\n\n  const deleteTestParameters = async () => {\n    try {\n      const response = await props.deleteTestParametersAction(editId);\n      console.log(response, \"response\");\n\n      if (response.status === 204) {\n        toast.success(t(\"home:deleteSuccess\"));\n        props.getTestParametersAction();\n        resetDeleteData();\n      } else {\n        toast.error(t(\"home:deleteError\"));\n        resetDeleteData();\n      }\n    } catch (error) {\n      console.log(error, \"error\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-table mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      borderRadius: \"5px 0 0 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, t(\"home:sn\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, t(\"home:parameter\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, t(\"home:units\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, t(\"home:ndwq\")), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      borderRadius: \"0 5px 0 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, t(\"home:action\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, testParameters && (testParameters === null || testParameters === void 0 ? void 0 : testParameters.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, getNumberByLanguage(index + 1)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, \" \", item.parameter_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, \" \", item.unit || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, item.NDWQS_standard || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"action justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    onClick: () => props.setEditData(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: EditIconDark,\n    alt: \"\",\n    className: \"mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    onClick: () => handleDeleteClick(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: DeleteIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }\n  }))))))))), /*#__PURE__*/React.createElement(ConfirmationModal, {\n    open: modal,\n    handleModal: () => toggleModal(),\n    handleConfirmClick: () => deleteTestParameters(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(List, \"4Zw0gsMjtGR3hkXMSfETkaAEbPA=\", false, function () {\n  return [useTranslation, useDeleteConfirmation, useDispatch, useSelector];\n});\n\n_c = List;\n\nconst mapStateToProps = state => ({\n  language: state.i18nextData.languageType,\n  supplySchedule: state.waterSupplyData.waterScheduleData.data\n});\n\nconst mapDispatchToProps = {\n  deleteTestParametersAction,\n  getTestParametersAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(List);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"List\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/core/Protected/Service/QualityTestParameters/ManageQTParameters/List.tsx"],"names":["DeleteIcon","EditIconDark","toast","React","connect","useDispatch","useSelector","deleteTestParametersAction","getTestParametersAction","useTranslation","getNumberByLanguage","useDeleteConfirmation","ConfirmationModal","List","props","t","editId","modal","handleDeleteClick","resetDeleteData","toggleModal","dispatch","useEffect","testParameters","state","testParamtersData","testParametersData","data","deleteTestParameters","response","console","log","status","success","error","borderRadius","map","item","index","id","parameter_name","unit","NDWQS_standard","setEditData","mapStateToProps","language","i18nextData","languageType","supplySchedule","waterSupplyData","waterScheduleData","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import { DeleteIcon, EditIconDark } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps, useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteTestParametersAction } from \"store/modules/testParamters/deleteTestParameters\";\r\nimport { getTestParametersAction } from \"store/modules/testParamters/getTestParameters\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  setEditData: any;\r\n  toggle: any;\r\n}\r\n\r\nconst List = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } =\r\n    useDeleteConfirmation();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getTestParametersAction());\r\n  }, []);\r\n\r\n  const testParameters = useSelector(\r\n    (state: RootState) => state.testParamtersData.testParametersData.data\r\n  );\r\n\r\n  const deleteTestParameters = async () => {\r\n    try {\r\n      const response = await props.deleteTestParametersAction(editId);\r\n      console.log(response, \"response\");\r\n      if (response.status === 204) {\r\n        toast.success(t(\"home:deleteSuccess\"));\r\n        props.getTestParametersAction();\r\n        resetDeleteData();\r\n      } else {\r\n        toast.error(t(\"home:deleteError\"));\r\n        resetDeleteData();\r\n      }\r\n    } catch (error) {\r\n      console.log(error, \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-table mt-4\">\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table mt-2\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{ borderRadius: \"5px 0 0 0\" }}>{t(\"home:sn\")}</th>\r\n              <th>{t(\"home:parameter\")}</th>\r\n              <th>{t(\"home:units\")}</th>\r\n              <th>{t(\"home:ndwq\")}</th>\r\n              <th style={{ borderRadius: \"0 5px 0 0\" }}>{t(\"home:action\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {testParameters &&\r\n              testParameters?.map((item, index) => (\r\n                <tr key={item.id}>\r\n                  <td>{getNumberByLanguage(index + 1)}</td>\r\n                  <td> {item.parameter_name}</td>\r\n                  <td> {item.unit || \"-\"}</td>\r\n                  <td>{item.NDWQS_standard || \"-\"}</td>\r\n\r\n                  <td className=\"action justify-content-center\">\r\n                    <div role=\"button\" onClick={() => props.setEditData(item)}>\r\n                      <img src={EditIconDark} alt=\"\" className=\"mr-4\" />\r\n                    </div>\r\n                    <div role=\"button\" onClick={() => handleDeleteClick(item.id)}>\r\n                      <img src={DeleteIcon} alt=\"\" />\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <ConfirmationModal\r\n        open={modal}\r\n        handleModal={() => toggleModal()}\r\n        handleConfirmClick={() => deleteTestParameters()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  supplySchedule: state.waterSupplyData.waterScheduleData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  deleteTestParametersAction,\r\n  getTestParametersAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(List);\r\n"]},"metadata":{},"sourceType":"module"}