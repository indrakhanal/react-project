{"ast":null,"code":"var _jsxFileName = \"E:\\\\Smart Tech Solution\\\\React JS\\\\react-project\\\\src\\\\core\\\\Public\\\\Service\\\\SupplyVisualization\\\\VisualizationGraphThisYear.tsx\",\n    _s = $RefreshSig$();\n\nimport GeneralChart from \"components/UI/Charts/General\";\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\nimport { getFiscalYearData, getMonthByLanguageAndScheme } from \"i18n/i18n\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport DataTable from \"./DataTable\";\nconst config = {\n  name: \"\",\n  type: \"line\",\n  smooth: true,\n  data: []\n};\n\nconst LineChart = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [chartData, setChartData] = useState();\n  const [seriesData, setSeriesData] = useState();\n  const [tableData, setTableData] = useState();\n  const [selected, setSelected] = useState(props.defaultSelected);\n\n  const getDataByArray = () => {};\n\n  useEffect(() => {\n    if (props.intervalData && props.waterSupplyData) {\n      var _props$schemeDetails;\n\n      const fiscalYearArray = getFiscalYearData(props.intervalData, (_props$schemeDetails = props.schemeDetails) === null || _props$schemeDetails === void 0 ? void 0 : _props$schemeDetails.system_date_format);\n      const newData = {\n        xAxis: fiscalYearArray === null || fiscalYearArray === void 0 ? void 0 : fiscalYearArray.map(item => {\n          var _props$schemeDetails2;\n\n          return getMonthByLanguageAndScheme(item, (_props$schemeDetails2 = props.schemeDetails) === null || _props$schemeDetails2 === void 0 ? void 0 : _props$schemeDetails2.system_date_format);\n        }),\n        total_supply_avg: fiscalYearArray === null || fiscalYearArray === void 0 ? void 0 : fiscalYearArray.map(item => {\n          var _props$waterSupplyDat, _props$waterSupplyDat2, _props$waterSupplyDat3;\n\n          return ((_props$waterSupplyDat = props.waterSupplyData) === null || _props$waterSupplyDat === void 0 ? void 0 : (_props$waterSupplyDat2 = _props$waterSupplyDat.supply) === null || _props$waterSupplyDat2 === void 0 ? void 0 : (_props$waterSupplyDat3 = _props$waterSupplyDat2.find(inc => {\n            var _inc$supply_date__mon, _inc$supply_date__mon2;\n\n            return +inc.supply_date__month < 10 ? +((_inc$supply_date__mon = inc.supply_date__month) === null || _inc$supply_date__mon === void 0 ? void 0 : (_inc$supply_date__mon2 = _inc$supply_date__mon.toString()) === null || _inc$supply_date__mon2 === void 0 ? void 0 : _inc$supply_date__mon2.replace(\"0\", \"\")) === item : +inc.supply_date__month === item;\n          })) === null || _props$waterSupplyDat3 === void 0 ? void 0 : _props$waterSupplyDat3.total_supply_avg) || 0;\n        }),\n        total_supply: fiscalYearArray === null || fiscalYearArray === void 0 ? void 0 : fiscalYearArray.map(item => {\n          var _props$waterSupplyDat4, _props$waterSupplyDat5, _props$waterSupplyDat6;\n\n          return ((_props$waterSupplyDat4 = props.waterSupplyData) === null || _props$waterSupplyDat4 === void 0 ? void 0 : (_props$waterSupplyDat5 = _props$waterSupplyDat4.supply) === null || _props$waterSupplyDat5 === void 0 ? void 0 : (_props$waterSupplyDat6 = _props$waterSupplyDat5.find(inc => {\n            var _inc$supply_date__mon3, _inc$supply_date__mon4;\n\n            return +inc.supply_date__month < 10 ? +((_inc$supply_date__mon3 = inc.supply_date__month) === null || _inc$supply_date__mon3 === void 0 ? void 0 : (_inc$supply_date__mon4 = _inc$supply_date__mon3.toString()) === null || _inc$supply_date__mon4 === void 0 ? void 0 : _inc$supply_date__mon4.replace(\"0\", \"\")) === item : +inc.supply_date__month === item;\n          })) === null || _props$waterSupplyDat6 === void 0 ? void 0 : _props$waterSupplyDat6.total_supply) || 0;\n        }),\n        non_revenue_water: fiscalYearArray === null || fiscalYearArray === void 0 ? void 0 : fiscalYearArray.map(item => {\n          var _props$waterSupplyDat7, _props$waterSupplyDat8, _props$waterSupplyDat9;\n\n          return ((_props$waterSupplyDat7 = props.waterSupplyData) === null || _props$waterSupplyDat7 === void 0 ? void 0 : (_props$waterSupplyDat8 = _props$waterSupplyDat7.supply) === null || _props$waterSupplyDat8 === void 0 ? void 0 : (_props$waterSupplyDat9 = _props$waterSupplyDat8.find(inc => {\n            var _inc$supply_date__mon5, _inc$supply_date__mon6;\n\n            return +inc.supply_date__month < 10 ? +((_inc$supply_date__mon5 = inc.supply_date__month) === null || _inc$supply_date__mon5 === void 0 ? void 0 : (_inc$supply_date__mon6 = _inc$supply_date__mon5.toString()) === null || _inc$supply_date__mon6 === void 0 ? void 0 : _inc$supply_date__mon6.replace(\"0\", \"\")) === item : +inc.supply_date__month === item;\n          })) === null || _props$waterSupplyDat9 === void 0 ? void 0 : _props$waterSupplyDat9.non_revenue_water) || 0;\n        })\n      };\n      setChartData(newData);\n    }\n  }, [props.waterSupplyData, props.schemeDetails, props.intervalData]);\n\n  const handleSelect = name => {\n    if (selected !== null && selected !== void 0 && selected.includes(name)) {\n      const filteredData = selected.filter(item => item !== name);\n      setSelected(filteredData);\n    } else {\n      setSelected([...selected, name]);\n    }\n  };\n\n  useEffect(() => {\n    const selectedData = selected.map(item => {\n      var _props$options$find, _props$options$find2;\n\n      return { ...config,\n        name: ((_props$options$find = props.options.find(opt => opt.id === item)) === null || _props$options$find === void 0 ? void 0 : _props$options$find.name) || \"\",\n        data: chartData && chartData[item],\n        itemStyle: {\n          color: ((_props$options$find2 = props.options.find(opt => opt.id === item)) === null || _props$options$find2 === void 0 ? void 0 : _props$options$find2.color) || \"\"\n        }\n      };\n    });\n    const tableData = selected.map(item => {\n      var _props$options$find3, _props$options$find4;\n\n      return {\n        name: ((_props$options$find3 = props.options.find(opt => opt.id === item)) === null || _props$options$find3 === void 0 ? void 0 : _props$options$find3.name) || \"\",\n        color: ((_props$options$find4 = props.options.find(opt => opt.id === item)) === null || _props$options$find4 === void 0 ? void 0 : _props$options$find4.color) || \"\",\n        data: chartData && chartData[item]\n      };\n    });\n    setSeriesData(selectedData);\n    setTableData(tableData);\n  }, [chartData, selected]);\n  console.log(seriesData, \"<<<<<newData\");\n  const optionData = {\n    tooltip: {\n      trigger: \"axis\",\n      axisPointer: {\n        type: \"shadow\"\n      }\n    },\n    legend: {\n      show: true\n    },\n    grid: {\n      left: \"3%\",\n      right: \"5%\",\n      bottom: \"3%\",\n      //   top: \"6%\",\n      containLabel: true\n    },\n    xAxis: {\n      type: \"category\",\n      boundaryGap: false,\n      data: chartData === null || chartData === void 0 ? void 0 : chartData.xAxis,\n      axisLabel: {\n        formatter: function (name) {\n          return name === null || name === void 0 ? void 0 : name.replace(props.type, \"\");\n        },\n        rotate: 25\n      }\n    },\n    yAxis: {\n      type: \"value\"\n    },\n    series: seriesData\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GeneralChart, {\n    minHeight: 400,\n    options: optionData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }), (tableData === null || tableData === void 0 ? void 0 : tableData.length) > 0 && props.type && /*#__PURE__*/React.createElement(DataTable, {\n    years: chartData === null || chartData === void 0 ? void 0 : chartData.xAxis,\n    tableData: tableData,\n    type: props.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 chartOptions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, \"Visualization Parameters\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, props.options.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomCheckBox, {\n    id: \"\" + item.id,\n    label: item.name,\n    onChange: e => handleSelect(item.id),\n    checked: selected.includes(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }))))));\n};\n\n_s(LineChart, \"TuolSkc4sAYeNv2g75gruSK6HTw=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LineChart;\n\nconst mapStateToProps = state => ({\n  language: state.i18nextData.languageType,\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\n  waterSupplyData: state.reportData.waterSupplyData.data,\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\n  actualCF: state.reportData.actualCumulativeCashFlowData.data,\n  expenseCF: state.reportData.expenseCumulativeCashFlowData.data,\n  intervalData: state.waterSchemeData.getYearIntervals.data\n});\n\nconst mapDispatchToProps = {};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(LineChart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LineChart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/core/Public/Service/SupplyVisualization/VisualizationGraphThisYear.tsx"],"names":["GeneralChart","CustomCheckBox","getFiscalYearData","getMonthByLanguageAndScheme","React","useEffect","useState","useTranslation","connect","DataTable","config","name","type","smooth","data","LineChart","props","t","chartData","setChartData","seriesData","setSeriesData","tableData","setTableData","selected","setSelected","defaultSelected","getDataByArray","intervalData","waterSupplyData","fiscalYearArray","schemeDetails","system_date_format","newData","xAxis","map","item","total_supply_avg","supply","find","inc","supply_date__month","toString","replace","total_supply","non_revenue_water","handleSelect","includes","filteredData","filter","selectedData","options","opt","id","itemStyle","color","console","log","optionData","tooltip","trigger","axisPointer","legend","show","grid","left","right","bottom","containLabel","boundaryGap","axisLabel","formatter","rotate","yAxis","series","length","e","mapStateToProps","state","language","i18nextData","languageType","waterSchemeData","waterSchemeDetailsData","reportData","incomeExpenseData","actualCF","actualCumulativeCashFlowData","expenseCF","expenseCumulativeCashFlowData","getYearIntervals","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import GeneralChart from \"components/UI/Charts/General\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\nimport { getFiscalYearData, getMonthByLanguageAndScheme } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport DataTable from \"./DataTable\";\r\n\r\nconst config = {\r\n  name: \"\",\r\n  type: \"line\",\r\n  smooth: true,\r\n  data: [],\r\n};\r\n\r\ntype SeriesConfig = {\r\n  name: string;\r\n  type: string;\r\n  smooth: boolean;\r\n  data: (string | number)[];\r\n};\r\n\r\ntype ChartDataType = {\r\n  xAxis: (string | number)[];\r\n  total_supply_avg?: (string | number)[];\r\n  total_supply?: (string | number)[];\r\n  non_revenue_water?: (string | number)[];\r\n};\r\n\r\ninterface Props extends PropsFromRedux {\r\n  type?: string;\r\n  options: any[];\r\n  compareKey?: string;\r\n  selectedYear: number;\r\n  defaultSelected: string[];\r\n}\r\n\r\nconst LineChart = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [chartData, setChartData] = useState<ChartDataType>();\r\n\r\n  const [seriesData, setSeriesData] = useState<SeriesConfig[]>();\r\n\r\n  const [tableData, setTableData] = useState<any>();\r\n\r\n  const [selected, setSelected] = useState<string[]>(props.defaultSelected);\r\n\r\n  const getDataByArray = () => {};\r\n\r\n  useEffect(() => {\r\n    if (props.intervalData && props.waterSupplyData) {\r\n      const fiscalYearArray = getFiscalYearData(\r\n        props.intervalData,\r\n        props.schemeDetails?.system_date_format\r\n      );\r\n\r\n      const newData: ChartDataType = {\r\n        xAxis: fiscalYearArray?.map((item) => {\r\n          return getMonthByLanguageAndScheme(item, props.schemeDetails?.system_date_format);\r\n        }),\r\n        total_supply_avg: fiscalYearArray?.map((item) => {\r\n          return (\r\n            props.waterSupplyData?.supply?.find((inc) => {\r\n              return +inc.supply_date__month < 10\r\n                ? +inc.supply_date__month?.toString()?.replace(\"0\", \"\") === item\r\n                : +inc.supply_date__month === item;\r\n            })?.total_supply_avg || 0\r\n          );\r\n        }),\r\n        total_supply: fiscalYearArray?.map((item) => {\r\n          return (\r\n            props.waterSupplyData?.supply?.find((inc) => {\r\n              return +inc.supply_date__month < 10\r\n                ? +inc.supply_date__month?.toString()?.replace(\"0\", \"\") === item\r\n                : +inc.supply_date__month === item;\r\n            })?.total_supply || 0\r\n          );\r\n        }),\r\n        non_revenue_water: fiscalYearArray?.map((item) => {\r\n          return (\r\n            props.waterSupplyData?.supply?.find((inc) => {\r\n              return +inc.supply_date__month < 10\r\n                ? +inc.supply_date__month?.toString()?.replace(\"0\", \"\") === item\r\n                : +inc.supply_date__month === item;\r\n            })?.non_revenue_water || 0\r\n          );\r\n        }),\r\n      };\r\n\r\n\r\n      setChartData(newData);\r\n    }\r\n  }, [props.waterSupplyData, props.schemeDetails, props.intervalData]);\r\n\r\n  const handleSelect = (name: string) => {\r\n    if (selected?.includes(name)) {\r\n      const filteredData = selected.filter((item) => item !== name);\r\n      setSelected(filteredData);\r\n    } else {\r\n      setSelected([...selected, name]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selectedData = selected.map((item) => ({\r\n      ...config,\r\n      name: props.options.find((opt) => opt.id === item)?.name || \"\",\r\n      data: chartData && chartData[item],\r\n      itemStyle: {\r\n        color: props.options.find((opt) => opt.id === item)?.color || \"\",\r\n      },\r\n    }));\r\n\r\n\r\n\r\n    const tableData = selected.map((item) => ({\r\n      name: props.options.find((opt) => opt.id === item)?.name || \"\",\r\n      color: props.options.find((opt) => opt.id === item)?.color || \"\",\r\n      data: chartData && chartData[item],\r\n    }));\r\n\r\n    setSeriesData(selectedData);\r\n    setTableData(tableData);\r\n  }, [chartData, selected]);\r\n\r\n  console.log(seriesData, \"<<<<<newData\")\r\n\r\n\r\n  const optionData = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n      },\r\n    },\r\n    legend: {\r\n      show: true,\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"5%\",\r\n      bottom: \"3%\",\r\n      //   top: \"6%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      boundaryGap: false,\r\n      data: chartData?.xAxis,\r\n      axisLabel: {\r\n        formatter: function (name) {\r\n          return name?.replace(props.type, \"\");\r\n        },\r\n        rotate: 25,\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n    },\r\n    series: seriesData,\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-9\">\r\n        <GeneralChart minHeight={400} options={optionData} />\r\n        {tableData?.length > 0 && props.type && (\r\n          <DataTable years={chartData?.xAxis} tableData={tableData} type={props.type} />\r\n        )}\r\n      </div>\r\n      <div className=\"col-md-3 chartOptions\">\r\n        <h6>Select</h6>\r\n        <p>Visualization Parameters</p>\r\n\r\n        <ul>\r\n          {props.options.map((item) => (\r\n            <li key={item.id}>\r\n              <CustomCheckBox\r\n                id={\"\" + item.id}\r\n                label={item.name}\r\n                onChange={(e) => handleSelect(item.id)}\r\n                checked={selected.includes(item.id)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  waterSupplyData: state.reportData.waterSupplyData.data,\r\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\r\n  actualCF: state.reportData.actualCumulativeCashFlowData.data,\r\n  expenseCF: state.reportData.expenseCumulativeCashFlowData.data,\r\n  intervalData: state.waterSchemeData.getYearIntervals.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(LineChart);\r\n"]},"metadata":{},"sourceType":"module"}