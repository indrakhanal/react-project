{"ast":null,"code":"var _jsxFileName = \"E:\\\\Smart Tech Solution\\\\React JS\\\\react-project\\\\src\\\\core\\\\Protected\\\\Home\\\\SupplySchedule\\\\ManageSupply\\\\Form.tsx\",\n    _s = $RefreshSig$();\n\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport Button from \"components/UI/Forms/Buttons\";\nimport { useFormik } from \"formik\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { getWaterSupplyScheduleAction } from \"store/modules/waterSupplySchedule/getWaterSupplySchedule\";\nimport { postWaterSupplyScheduleAction } from \"store/modules/waterSupplySchedule/postSupplySchedule\";\nimport { updateWaterSupplyScheduleAction } from \"store/modules/waterSupplySchedule/updateSupplySchedule\";\nimport { initialValues, validationSchema } from \"./schema\";\n\nconst Form = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation([\"home\"]);\n  const [initialData, seetInitialData] = React.useState(initialValues);\n  React.useEffect(() => {\n    if (props.editData) {\n      var _props$editData$time_, _props$editData$time_2, _props$editData$time_3, _props$editData$time_4;\n\n      seetInitialData({ ...props.editData,\n        time_from: new Date().setHours((_props$editData$time_ = props.editData.time_from) === null || _props$editData$time_ === void 0 ? void 0 : _props$editData$time_.split(\":\")[0], (_props$editData$time_2 = props.editData.time_from) === null || _props$editData$time_2 === void 0 ? void 0 : _props$editData$time_2.split(\":\")[1]),\n        time_to: new Date().setHours((_props$editData$time_3 = props.editData.time_to) === null || _props$editData$time_3 === void 0 ? void 0 : _props$editData$time_3.split(\":\")[0], (_props$editData$time_4 = props.editData.time_to) === null || _props$editData$time_4 === void 0 ? void 0 : _props$editData$time_4.split(\":\")[1])\n      });\n    }\n  }, [props.editData]);\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    setFieldValue,\n    setFieldTouched,\n    handleSubmit\n  } = useFormik({\n    enableReinitialize: true,\n    initialValues: initialData,\n    validationSchema: validationSchema,\n    onSubmit: async (submitValue, _ref) => {\n      let {\n        resetForm\n      } = _ref;\n      const requestData = { ...submitValue,\n        time_from: formatTime(submitValue.time_from),\n        time_to: formatTime(submitValue.time_to)\n      };\n      let res;\n\n      if (props.editData) {\n        res = await props.updateWaterSupplyScheduleAction(props.language, props.editData.id, requestData);\n      } else {\n        res = await props.postWaterSupplyScheduleAction(props.language, requestData);\n      }\n\n      console.log(res, \"resss\");\n\n      if (res.status === 201 || res.status === 200) {\n        if (res.status === 201) {\n          resetForm();\n          toast.success(t(\"home:postSuccess\"));\n        } else {\n          seetInitialData(initialValues);\n          toast.success(t(\"home:updateSuccess\"));\n        }\n\n        props.getWaterSupplyScheduleAction(props.language, props.schemeSlug);\n      } else {\n        var _Object$values;\n\n        const errors = (_Object$values = Object.values(res.data)) === null || _Object$values === void 0 ? void 0 : _Object$values.map(item => {\n          toast.error(item[0]);\n        });\n      }\n    }\n  });\n\n  const formatTime = time => {\n    const receivedTime = new Date(time).toTimeString();\n    return receivedTime.split(\" \")[0];\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, t(\"home:day\")), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"day\",\n    value: values.day,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"day\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, t(\"home:timeFrom\")), /*#__PURE__*/React.createElement(EnglishDatePicker, {\n    name: \"time_from\",\n    value: values.time_from,\n    handleChange: e => {\n      setFieldValue(\"time_from\", e);\n    },\n    showTimeSelect: true,\n    showTimeSelectOnly: true,\n    dateFormat: \"HH:mm\",\n    timeIntervals: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"time_from\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, t(\"home:timeTo\")), /*#__PURE__*/React.createElement(EnglishDatePicker, {\n    name: \"time_to\",\n    value: values.time_to,\n    handleChange: e => {\n      setFieldValue(\"time_to\", e);\n    },\n    showTimeSelect: true,\n    showTimeSelectOnly: true,\n    dateFormat: \"HH:mm\",\n    timeIntervals: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"time_to\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pl-md-5 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn  mr-3\",\n    text: t(\"home:save\"),\n    disabled: props.postLoading || props.updateLoading,\n    loading: props.postLoading || props.updateLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn-outlined\",\n    text: t(\"home:cancel\"),\n    onClick: () => props.toggle(),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(Form, \"0iwylrjBx9Pc6aqllV6L3Vgszc8=\", false, function () {\n  return [useTranslation, useFormik];\n});\n\n_c = Form;\n\nconst mapStateToProps = state => {\n  var _state$waterSchemeDat;\n\n  return {\n    language: state.i18nextData.languageType,\n    schemeSlug: (_state$waterSchemeDat = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat === void 0 ? void 0 : _state$waterSchemeDat.slug,\n    supplySchedule: state.waterSupplyData.waterScheduleData.data,\n    postLoading: state.waterSupplyData.postWaterScheduleData.isFetching,\n    updateLoading: state.waterSupplyData.updateWaterScheduleData.isFetching\n  };\n};\n\nconst mapDispatchToProps = {\n  postWaterSupplyScheduleAction,\n  getWaterSupplyScheduleAction,\n  updateWaterSupplyScheduleAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(Form);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/core/Protected/Home/SupplySchedule/ManageSupply/Form.tsx"],"names":["EnglishDatePicker","FormikValidationError","toast","Button","useFormik","React","useTranslation","connect","getWaterSupplyScheduleAction","postWaterSupplyScheduleAction","updateWaterSupplyScheduleAction","initialValues","validationSchema","Form","props","t","initialData","seetInitialData","useState","useEffect","editData","time_from","Date","setHours","split","time_to","values","errors","touched","handleChange","handleBlur","setFieldValue","setFieldTouched","handleSubmit","enableReinitialize","onSubmit","submitValue","resetForm","requestData","formatTime","res","language","id","console","log","status","success","schemeSlug","Object","data","map","item","error","time","receivedTime","toTimeString","e","preventDefault","day","postLoading","updateLoading","toggle","mapStateToProps","state","i18nextData","languageType","waterSchemeData","waterSchemeDetailsData","slug","supplySchedule","waterSupplyData","waterScheduleData","postWaterScheduleData","isFetching","updateWaterScheduleData","mapDispatchToProps","connector"],"mappings":";;;AAAA,OAAOA,iBAAP,MAA8B,sDAA9B;AACA,OAAOC,qBAAP,MAAkC,8DAAlC;AACA,OAAOC,KAAP,MAAkB,8CAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,OAAT,QAAwC,aAAxC;AACA,SAASC,4BAAT,QAA6C,0DAA7C;AACA,SAASC,6BAAT,QAA8C,sDAA9C;AACA,SAASC,+BAAT,QAAgD,wDAAhD;AAEA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,UAAhD;;AAOA,MAAMC,IAAI,GAAIC,KAAD,IAAkB;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAQT,cAAc,CAAC,CAAC,MAAD,CAAD,CAA5B;AAEA,QAAM,CAACU,WAAD,EAAcC,eAAd,IAAiCZ,KAAK,CAACa,QAAN,CAAeP,aAAf,CAAvC;AAEAN,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB,QAAIL,KAAK,CAACM,QAAV,EAAoB;AAAA;;AAClBH,MAAAA,eAAe,CAAC,EACd,GAAGH,KAAK,CAACM,QADK;AAEdC,QAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,QAAX,0BACTT,KAAK,CAACM,QAAN,CAAeC,SADN,0DACT,sBAA0BG,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CADS,4BAETV,KAAK,CAACM,QAAN,CAAeC,SAFN,2DAET,uBAA0BG,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAFS,CAFG;AAMdC,QAAAA,OAAO,EAAE,IAAIH,IAAJ,GAAWC,QAAX,2BACPT,KAAK,CAACM,QAAN,CAAeK,OADR,2DACP,uBAAwBD,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CADO,4BAEPV,KAAK,CAACM,QAAN,CAAeK,OAFR,2DAEP,uBAAwBD,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAFO;AANK,OAAD,CAAf;AAWD;AACF,GAdD,EAcG,CAACV,KAAK,CAACM,QAAP,CAdH;AAgBA,QAAM;AACJM,IAAAA,MADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA,aANI;AAOJC,IAAAA,eAPI;AAQJC,IAAAA;AARI,MASF7B,SAAS,CAAC;AACZ8B,IAAAA,kBAAkB,EAAE,IADR;AAEZvB,IAAAA,aAAa,EAAEK,WAFH;AAGZJ,IAAAA,gBAAgB,EAAEA,gBAHN;AAIZuB,IAAAA,QAAQ,EAAE,OAAOC,WAAP,WAAsC;AAAA,UAAlB;AAAEC,QAAAA;AAAF,OAAkB;AAC9C,YAAMC,WAAW,GAAG,EAClB,GAAGF,WADe;AAElBf,QAAAA,SAAS,EAAEkB,UAAU,CAACH,WAAW,CAACf,SAAb,CAFH;AAGlBI,QAAAA,OAAO,EAAEc,UAAU,CAACH,WAAW,CAACX,OAAb;AAHD,OAApB;AAKA,UAAIe,GAAJ;;AACA,UAAI1B,KAAK,CAACM,QAAV,EAAoB;AAClBoB,QAAAA,GAAG,GAAG,MAAM1B,KAAK,CAACJ,+BAAN,CACVI,KAAK,CAAC2B,QADI,EAEV3B,KAAK,CAACM,QAAN,CAAesB,EAFL,EAGVJ,WAHU,CAAZ;AAKD,OAND,MAMO;AACLE,QAAAA,GAAG,GAAG,MAAM1B,KAAK,CAACL,6BAAN,CAAoCK,KAAK,CAAC2B,QAA1C,EAAoDH,WAApD,CAAZ;AACD;;AAEDK,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EAAiB,OAAjB;;AAEA,UAAIA,GAAG,CAACK,MAAJ,KAAe,GAAf,IAAsBL,GAAG,CAACK,MAAJ,KAAe,GAAzC,EAA8C;AAC5C,YAAIL,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwB;AACtBR,UAAAA,SAAS;AACTnC,UAAAA,KAAK,CAAC4C,OAAN,CAAc/B,CAAC,CAAC,kBAAD,CAAf;AACD,SAHD,MAGO;AACLE,UAAAA,eAAe,CAACN,aAAD,CAAf;AACAT,UAAAA,KAAK,CAAC4C,OAAN,CAAc/B,CAAC,CAAC,oBAAD,CAAf;AACD;;AAEDD,QAAAA,KAAK,CAACN,4BAAN,CAAmCM,KAAK,CAAC2B,QAAzC,EAAmD3B,KAAK,CAACiC,UAAzD;AACD,OAVD,MAUO;AAAA;;AACL,cAAMpB,MAAM,qBAAGqB,MAAM,CAACtB,MAAP,CAAcc,GAAG,CAACS,IAAlB,CAAH,mDAAG,eAAyBC,GAAzB,CAA8BC,IAAD,IAAe;AACzDjD,UAAAA,KAAK,CAACkD,KAAN,CAAYD,IAAI,CAAC,CAAD,CAAhB;AACD,SAFc,CAAf;AAGD;AACF;AAtCW,GAAD,CATb;;AAkDA,QAAMZ,UAAU,GAAIc,IAAD,IAAU;AAC3B,UAAMC,YAAY,GAAG,IAAIhC,IAAJ,CAAS+B,IAAT,EAAeE,YAAf,EAArB;AACA,WAAOD,YAAY,CAAC9B,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAP;AACD,GAHD;;AAKA,sBACE;AACE,IAAA,QAAQ,EAAGgC,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACC,cAAF;AACAxB,MAAAA,YAAY,CAACuB,CAAD,CAAZ;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,EAAf;AAAkB,IAAA,SAAS,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzC,CAAC,CAAC,UAAD,CADJ,CADF,eAKE;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAgC,IAAA,IAAI,EAAC,KAArC;AAA2C,IAAA,KAAK,EAAEW,MAAM,CAACgC,GAAzD;AAA8D,IAAA,QAAQ,EAAE7B,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAC,KAA5B;AAAkC,IAAA,MAAM,EAAEF,MAA1C;AAAkD,IAAA,OAAO,EAAEC,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF,eAWE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,EAAf;AAAkB,IAAA,SAAS,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,CAAC,CAAC,eAAD,CADJ,CADF,eAKE,oBAAC,iBAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,KAAK,EAAEW,MAAM,CAACL,SAFhB;AAGE,IAAA,YAAY,EAAGmC,CAAD,IAAO;AACnBzB,MAAAA,aAAa,CAAC,WAAD,EAAcyB,CAAd,CAAb;AACD,KALH;AAME,IAAA,cAAc,EAAE,IANlB;AAOE,IAAA,kBAAkB,EAAE,IAPtB;AAQE,IAAA,UAAU,EAAC,OARb;AASE,IAAA,aAAa,EAAE,EATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAiBE,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAC,WAA5B;AAAwC,IAAA,MAAM,EAAE7B,MAAhD;AAAwD,IAAA,OAAO,EAAEC,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,CAXF,eAgCE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,EAAf;AAAkB,IAAA,SAAS,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,CAAC,CAAC,aAAD,CADJ,CADF,eAIE,oBAAC,iBAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,KAAK,EAAEW,MAAM,CAACD,OAFhB;AAGE,IAAA,YAAY,EAAG+B,CAAD,IAAO;AACnBzB,MAAAA,aAAa,CAAC,SAAD,EAAYyB,CAAZ,CAAb;AACD,KALH;AAME,IAAA,cAAc,EAAE,IANlB;AAOE,IAAA,kBAAkB,EAAE,IAPtB;AAQE,IAAA,UAAU,EAAC,OARb;AASE,IAAA,aAAa,EAAE,EATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAgBE,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAsC,IAAA,MAAM,EAAE7B,MAA9C;AAAsD,IAAA,OAAO,EAAEC,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF,CAhCF,eAqDE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,IAAI,EAAEb,CAAC,CAAC,WAAD,CAFT;AAGE,IAAA,QAAQ,EAAED,KAAK,CAAC6C,WAAN,IAAqB7C,KAAK,CAAC8C,aAHvC;AAIE,IAAA,OAAO,EAAE9C,KAAK,CAAC6C,WAAN,IAAqB7C,KAAK,CAAC8C,aAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,yBADZ;AAEE,IAAA,IAAI,EAAE7C,CAAC,CAAC,aAAD,CAFT;AAGE,IAAA,OAAO,EAAE,MAAMD,KAAK,CAAC+C,MAAN,EAHjB;AAIE,IAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CArDF,CANF,CADF;AA+ED,CA3JD;;GAAMhD,I;UACUP,c,EA6BVF,S;;;KA9BAS,I;;AA6JN,MAAMiD,eAAe,GAAIC,KAAD;AAAA;;AAAA,SAAuB;AAC7CtB,IAAAA,QAAQ,EAAEsB,KAAK,CAACC,WAAN,CAAkBC,YADiB;AAE7ClB,IAAAA,UAAU,2BAAEgB,KAAK,CAACG,eAAN,CAAsBC,sBAAtB,CAA6ClB,IAA/C,0DAAE,sBAAmDmB,IAFlB;AAG7CC,IAAAA,cAAc,EAAEN,KAAK,CAACO,eAAN,CAAsBC,iBAAtB,CAAwCtB,IAHX;AAI7CU,IAAAA,WAAW,EAAEI,KAAK,CAACO,eAAN,CAAsBE,qBAAtB,CAA4CC,UAJZ;AAK7Cb,IAAAA,aAAa,EAAEG,KAAK,CAACO,eAAN,CAAsBI,uBAAtB,CAA8CD;AALhB,GAAvB;AAAA,CAAxB;;AAQA,MAAME,kBAAkB,GAAG;AACzBlE,EAAAA,6BADyB;AAEzBD,EAAAA,4BAFyB;AAGzBE,EAAAA;AAHyB,CAA3B;AAMA,MAAMkE,SAAS,GAAGrE,OAAO,CAACuD,eAAD,EAAkBa,kBAAlB,CAAzB;AAIA,qBAAeC,SAAS,CAAC/D,IAAD,CAAxB","sourcesContent":["import EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getWaterSupplyScheduleAction } from \"store/modules/waterSupplySchedule/getWaterSupplySchedule\";\r\nimport { postWaterSupplyScheduleAction } from \"store/modules/waterSupplySchedule/postSupplySchedule\";\r\nimport { updateWaterSupplyScheduleAction } from \"store/modules/waterSupplySchedule/updateSupplySchedule\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { initialValues, validationSchema } from \"./schema\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  toggle: any;\r\n}\r\n\r\nconst Form = (props: Props) => {\r\n  const { t } = useTranslation([\"home\"]);\r\n\r\n  const [initialData, seetInitialData] = React.useState(initialValues);\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      seetInitialData({\r\n        ...props.editData,\r\n        time_from: new Date().setHours(\r\n          props.editData.time_from?.split(\":\")[0],\r\n          props.editData.time_from?.split(\":\")[1]\r\n        ),\r\n        time_to: new Date().setHours(\r\n          props.editData.time_to?.split(\":\")[0],\r\n          props.editData.time_to?.split(\":\")[1]\r\n        ),\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleChange,\r\n    handleBlur,\r\n    setFieldValue,\r\n    setFieldTouched,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (submitValue, { resetForm }) => {\r\n      const requestData = {\r\n        ...submitValue,\r\n        time_from: formatTime(submitValue.time_from),\r\n        time_to: formatTime(submitValue.time_to),\r\n      };\r\n      let res;\r\n      if (props.editData) {\r\n        res = await props.updateWaterSupplyScheduleAction(\r\n          props.language,\r\n          props.editData.id,\r\n          requestData\r\n        );\r\n      } else {\r\n        res = await props.postWaterSupplyScheduleAction(props.language, requestData);\r\n      }\r\n\r\n      console.log(res, \"resss\");\r\n\r\n      if (res.status === 201 || res.status === 200) {\r\n        if (res.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          seetInitialData(initialValues);\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n\r\n        props.getWaterSupplyScheduleAction(props.language, props.schemeSlug);\r\n      } else {\r\n        const errors = Object.values(res.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  const formatTime = (time) => {\r\n    const receivedTime = new Date(time).toTimeString();\r\n    return receivedTime.split(\" \")[0];\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:day\")}\r\n            </label>\r\n\r\n            <input className=\"form-control\" name=\"day\" value={values.day} onChange={handleChange} />\r\n            <FormikValidationError name=\"day\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:timeFrom\")}\r\n            </label>\r\n\r\n            <EnglishDatePicker\r\n              name=\"time_from\"\r\n              value={values.time_from}\r\n              handleChange={(e) => {\r\n                setFieldValue(\"time_from\", e);\r\n              }}\r\n              showTimeSelect={true}\r\n              showTimeSelectOnly={true}\r\n              dateFormat=\"HH:mm\"\r\n              timeIntervals={15}\r\n            />\r\n\r\n            <FormikValidationError name=\"time_from\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:timeTo\")}\r\n            </label>\r\n            <EnglishDatePicker\r\n              name=\"time_to\"\r\n              value={values.time_to}\r\n              handleChange={(e) => {\r\n                setFieldValue(\"time_to\", e);\r\n              }}\r\n              showTimeSelect={true}\r\n              showTimeSelectOnly={true}\r\n              dateFormat=\"HH:mm\"\r\n              timeIntervals={15}\r\n            />\r\n\r\n            <FormikValidationError name=\"time_to\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12 text-right\">\r\n          <div className=\"pl-md-5 mt-3\">\r\n            <Button\r\n              className=\"btn custom-btn  mr-3\"\r\n              text={t(\"home:save\")}\r\n              disabled={props.postLoading || props.updateLoading}\r\n              loading={props.postLoading || props.updateLoading}\r\n            />\r\n            <Button\r\n              className=\"btn custom-btn-outlined\"\r\n              text={t(\"home:cancel\")}\r\n              onClick={() => props.toggle()}\r\n              type=\"button\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  supplySchedule: state.waterSupplyData.waterScheduleData.data,\r\n  postLoading: state.waterSupplyData.postWaterScheduleData.isFetching,\r\n  updateLoading: state.waterSupplyData.updateWaterScheduleData.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postWaterSupplyScheduleAction,\r\n  getWaterSupplyScheduleAction,\r\n  updateWaterSupplyScheduleAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Form);\r\n"]},"metadata":{},"sourceType":"module"}