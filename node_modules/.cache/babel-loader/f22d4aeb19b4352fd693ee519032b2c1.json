{"ast":null,"code":"var _jsxFileName = \"E:\\\\Smart Tech Solution\\\\React JS\\\\react-project\\\\src\\\\core\\\\Protected\\\\Maintainance\\\\ComponentLogs\\\\ManageComponentLogs\\\\List.tsx\",\n    _s = $RefreshSig$();\n\nimport { DeleteIcon, EditIconDark } from \"assets/images/xd\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\nimport { getNumberByLanguage } from \"i18n/i18n\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { deleteComponentLogsAction } from \"store/modules/componentLogs/deleteComponentLogs\";\nimport { getComponentLogsAction } from \"store/modules/componentLogs/getComponentLogs\";\nimport { getComponentLogsByIdAction } from \"store/modules/componentLogs/getComponentLogsById\";\n\nconst ManageComponentLists = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    editId,\n    modal,\n    handleDeleteClick,\n    resetDeleteData,\n    toggleModal\n  } = useDeleteConfirmation();\n  const [logTypeData, setLogTypeData] = React.useState([]);\n  React.useEffect(() => {\n    if (props.language) {\n      props.getComponentLogsAction(props.language);\n    }\n  }, [props.language]);\n  React.useEffect(() => {\n    if (props.componentInfoLogs) {\n      if (props.issueType) {\n        const issueLogs = props.componentInfoLogs.filter(item => item.log_type === \"Issue\");\n        setLogTypeData(issueLogs);\n      } else {\n        const maintainanceLog = props.componentInfoLogs.filter(item => item.log_type !== 'Issue');\n        setLogTypeData(maintainanceLog);\n      }\n    }\n  }, [props.componentInfoLogs, props.issueType]);\n\n  const handleDelete = async () => {\n    const response = await props.deleteComponentLogsAction(editId);\n\n    if (response.status === 204) {\n      toast.success(t(\"home:deleteSuccess\"));\n      props.getComponentLogsAction(props.language);\n    } else {\n      toast.error(t(\"home:deleteError\"));\n    }\n\n    toggleModal();\n  };\n\n  const handleEditClick = id => {\n    props.getComponentLogsByIdAction(props.language, id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-table mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, t(\"home:sn\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, t(\"maintainance:component\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, t(\"home:maintainance\"), \" \", t(\"home:date\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, t(\"home:duration\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, t(\"home:total\"), \" \", t(\"home:cost\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, t(\"home:action\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, logTypeData === null || logTypeData === void 0 ? void 0 : logTypeData.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, getNumberByLanguage(index + 1)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \" \", item.component), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \" \", item.maintenance_date), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \" \", item.duration), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \" \", item.cost_total), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    onClick: () => {\n      props.setEditData(item);\n      props.toggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: EditIconDark,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    onClick: () => handleDeleteClick(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: DeleteIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  })))))))), /*#__PURE__*/React.createElement(ConfirmationModal, {\n    open: modal,\n    handleModal: () => toggleModal(),\n    handleConfirmClick: () => handleDelete(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(ManageComponentLists, \"L/YEylHIvBozqK/5+cP6oNBpsp8=\", false, function () {\n  return [useTranslation, useDeleteConfirmation];\n});\n\n_c = ManageComponentLists;\n\nconst mapStateToProps = state => {\n  var _state$waterSchemeDat;\n\n  return {\n    language: state.i18nextData.languageType,\n    schemeSlug: (_state$waterSchemeDat = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat === void 0 ? void 0 : _state$waterSchemeDat.slug,\n    componentInfoLogs: state.componentLogs.getComponentLogs.data\n  };\n};\n\nconst mapDispatchToProps = {\n  deleteComponentLogsAction: deleteComponentLogsAction,\n  getComponentLogsAction: getComponentLogsAction,\n  getComponentLogsByIdAction: getComponentLogsByIdAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(ManageComponentLists);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ManageComponentLists\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/core/Protected/Maintainance/ComponentLogs/ManageComponentLogs/List.tsx"],"names":["DeleteIcon","EditIconDark","toast","ConfirmationModal","useDeleteConfirmation","getNumberByLanguage","React","useTranslation","connect","deleteComponentLogsAction","getComponentLogsAction","getComponentLogsByIdAction","ManageComponentLists","props","t","editId","modal","handleDeleteClick","resetDeleteData","toggleModal","logTypeData","setLogTypeData","useState","useEffect","language","componentInfoLogs","issueType","issueLogs","filter","item","log_type","maintainanceLog","handleDelete","response","status","success","error","handleEditClick","id","map","index","component","maintenance_date","duration","cost_total","setEditData","toggle","mapStateToProps","state","i18nextData","languageType","schemeSlug","waterSchemeData","waterSchemeDetailsData","data","slug","componentLogs","getComponentLogs","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import { DeleteIcon, EditIconDark } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { deleteComponentLogsAction } from \"store/modules/componentLogs/deleteComponentLogs\";\r\nimport { getComponentLogsAction } from \"store/modules/componentLogs/getComponentLogs\";\r\nimport { getComponentLogsByIdAction } from \"store/modules/componentLogs/getComponentLogsById\";\r\nimport { RootState } from \"store/root-reducer\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  setEditData: any;\r\n  toggle: any;\r\n  issueType?: any;\r\n}\r\n\r\nconst ManageComponentLists = (props: Props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } =\r\n    useDeleteConfirmation();\r\n\r\n  const [logTypeData, setLogTypeData] = React.useState<any>([]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.language) {\r\n      props.getComponentLogsAction(props.language);\r\n    }\r\n  }, [props.language]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.componentInfoLogs) {\r\n      if (props.issueType) {\r\n        const issueLogs = props.componentInfoLogs.filter((item) => item.log_type === \"Issue\");\r\n        setLogTypeData(issueLogs);\r\n      } else {\r\n        const maintainanceLog = props.componentInfoLogs.filter(\r\n          (item) => item.log_type !== 'Issue'\r\n        );\r\n        setLogTypeData(maintainanceLog);\r\n      }\r\n    }\r\n  }, [props.componentInfoLogs, props.issueType]);\r\n\r\n  const handleDelete = async () => {\r\n    const response: any = await props.deleteComponentLogsAction(editId);\r\n\r\n    if (response.status === 204) {\r\n      toast.success(t(\"home:deleteSuccess\"));\r\n      props.getComponentLogsAction(props.language);\r\n    } else {\r\n      toast.error(t(\"home:deleteError\"));\r\n    }\r\n    toggleModal();\r\n  };\r\n\r\n  const handleEditClick = (id) => {\r\n    props.getComponentLogsByIdAction(props.language, id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-table mt-4\">\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table mt-2\">\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"home:sn\")}</th>\r\n              <th>{t(\"maintainance:component\")}</th>\r\n              <th>\r\n                {t(\"home:maintainance\")} {t(\"home:date\")}\r\n              </th>\r\n              <th>{t(\"home:duration\")}</th>\r\n              <th>\r\n                {t(\"home:total\")} {t(\"home:cost\")}\r\n              </th>\r\n              <th>{t(\"home:action\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {logTypeData?.map((item, index) => (\r\n              <tr key={item.id}>\r\n                <td>{getNumberByLanguage(index + 1)}</td>\r\n                <td> {item.component}</td>\r\n                <td> {item.maintenance_date}</td>\r\n                <td> {item.duration}</td>\r\n                <td> {item.cost_total}</td>\r\n\r\n                <td className=\"action\">\r\n                  <div\r\n                    role=\"button\"\r\n                    onClick={() => {\r\n                      props.setEditData(item);\r\n                      props.toggle();\r\n                    }}\r\n                  >\r\n                    <img src={EditIconDark} alt=\"\" />\r\n                  </div>\r\n                  <div role=\"button\" onClick={() => handleDeleteClick(item.id)}>\r\n                    <img src={DeleteIcon} alt=\"\" />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <ConfirmationModal\r\n        open={modal}\r\n        handleModal={() => toggleModal()}\r\n        handleConfirmClick={() => handleDelete()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  componentInfoLogs: state.componentLogs.getComponentLogs.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  deleteComponentLogsAction: deleteComponentLogsAction,\r\n  getComponentLogsAction: getComponentLogsAction,\r\n  getComponentLogsByIdAction: getComponentLogsByIdAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(ManageComponentLists);\r\n"]},"metadata":{},"sourceType":"module"}