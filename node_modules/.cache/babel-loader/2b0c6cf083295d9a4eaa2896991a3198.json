{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\src\\\\core\\\\Protected\\\\Finance\\\\CashBook\\\\CashBookByDate\\\\CashbookTable.tsx\",\n    _s = $RefreshSig$();\n\nimport { CameraIcon } from \"assets/images/xd\";\nimport { ADToBS } from \"components/React/Datepicker/Datepickerutils\";\nimport GeneralModal from \"components/UI/GeneralModal\";\nimport Slider from \"components/UI/Slider\";\nimport { getMonthByLanguageAndScheme } from \"i18n/i18n\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { geAllIncomeAction } from \"store/modules/income/getAllIncome\";\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\nimport { getIncomeExpenseImageAction } from \"store/modules/income/getIncomeExpenseImgae\";\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\n\nconst CashbookTable = props => {\n  _s();\n\n  var _sortAplabetically, _sortAplabetically3, _props$sliderImages, _props$activeDate, _props$schemeDetails3;\n\n  const {\n    t\n  } = useTranslation([\"cashbook\"]);\n  const {\n    incomeData,\n    incomeCategories,\n    language,\n    schemeSlug,\n    schemeDetails,\n    previousIncomeTotal,\n    geAllIncomeAction,\n    getIncomeCategoryAction,\n    getIncomeExpenseImageAction\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  useEffect(() => {\n    if (language && schemeSlug && schemeDetails && props.activeTab && props.activeDate && props.endDate) {\n      if (props.activeTab === \"1\") {\n        geAllIncomeAction(language, schemeSlug, props.activeDate, props.endDate);\n        getIncomeCategoryAction(schemeSlug);\n        getIncomeExpenseImageAction(language, schemeSlug, props.activeDate || ADToBS(new Date()));\n      }\n    }\n  }, [language, props.activeDate, props.endDate, schemeSlug, schemeDetails, props.activeTab]);\n  console.log(props.activeDate, props.activeDate, \"<<<<<<<<<\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-table table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, t(\"cashbook:date\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, t(\"cashbook:description\")), (_sortAplabetically = sortAplabetically(incomeCategories, \"name\")) === null || _sortAplabetically === void 0 ? void 0 : _sortAplabetically.map((incomeCategory, index) => /*#__PURE__*/React.createElement(\"th\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, incomeCategory.name)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, incomeData === null || incomeData === void 0 ? void 0 : incomeData.map((income, index) => {\n    var _sortAplabetically2;\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, language === \"en\" ? income.date : income.date_np), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, income.title), (_sortAplabetically2 = sortAplabetically(incomeCategories, \"name\")) === null || _sortAplabetically2 === void 0 ? void 0 : _sortAplabetically2.map((incomeCategory, index) => {\n      if (income.category.name === incomeCategory.name) {\n        var _props$schemeDetails;\n\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }\n        }, (_props$schemeDetails = props.schemeDetails) === null || _props$schemeDetails === void 0 ? void 0 : _props$schemeDetails.currency, \" \", income.income_amount);\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 30\n          }\n        }, \"-\");\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, t(\"cashbook:total\")), (_sortAplabetically3 = sortAplabetically(incomeCategories, \"name\")) === null || _sortAplabetically3 === void 0 ? void 0 : _sortAplabetically3.map((incomeCategory, index) => {\n    var _previousIncomeTotal$;\n\n    const findData = previousIncomeTotal === null || previousIncomeTotal === void 0 ? void 0 : (_previousIncomeTotal$ = previousIncomeTotal.present_month_data) === null || _previousIncomeTotal$ === void 0 ? void 0 : _previousIncomeTotal$.find(prev => prev.income_category_name === incomeCategory.name);\n\n    if (findData) {\n      var _props$schemeDetails2;\n\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 23\n        }\n      }, (_props$schemeDetails2 = props.schemeDetails) === null || _props$schemeDetails2 === void 0 ? void 0 : _props$schemeDetails2.currency, \" \", findData.total_income_amount);\n    } else {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 28\n        }\n      }, \"-\");\n    }\n  })), props.sliderImages && props.sliderImages instanceof Array && ((_props$sliderImages = props.sliderImages) === null || _props$sliderImages === void 0 ? void 0 : _props$sliderImages.length) > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n    role: \"button\",\n    onClick: () => setModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: CameraIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }), \" \\xA0\\xA0 Paper Cashbook Image -\", \" \", getMonthByLanguageAndScheme((_props$activeDate = props.activeDate) === null || _props$activeDate === void 0 ? void 0 : _props$activeDate.split(\"-\")[1], (_props$schemeDetails3 = props.schemeDetails) === null || _props$schemeDetails3 === void 0 ? void 0 : _props$schemeDetails3.system_date_format))))))), /*#__PURE__*/React.createElement(GeneralModal, {\n    open: modal,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(CashbookTable, \"xKq+9o3pEc9o3cEUmEMJo3FAjyQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c = CashbookTable;\n\nconst mapStateToProps = state => {\n  var _state$waterSchemeDat;\n\n  return {\n    language: state.i18nextData.languageType,\n    sliderImages: state.incomeData.getIncomeExpenseImgae.data,\n    schemeSlug: (_state$waterSchemeDat = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat === void 0 ? void 0 : _state$waterSchemeDat.slug,\n    schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\n    incomeData: state.incomeData.getAllIncomeData.data,\n    incomeCategories: state.incomeData.getIncomeCategory.data,\n    previousIncomeTotal: state.incomeData.getPreviousIncomeTotal.data,\n    incomeExpenseImage: state.incomeData.getIncomeExpenseImgae.data\n  };\n};\n\nconst mapDispatchToProps = {\n  geAllIncomeAction: geAllIncomeAction,\n  getIncomeCategoryAction: getIncomeCategoryAction,\n  getIncomeExpenseImageAction: getIncomeExpenseImageAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(CashbookTable);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CashbookTable\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/core/Protected/Finance/CashBook/CashBookByDate/CashbookTable.tsx"],"names":["CameraIcon","ADToBS","GeneralModal","Slider","getMonthByLanguageAndScheme","React","useEffect","useState","useTranslation","connect","geAllIncomeAction","getIncomeCategoryAction","getIncomeExpenseImageAction","sortAplabetically","CashbookTable","props","t","incomeData","incomeCategories","language","schemeSlug","schemeDetails","previousIncomeTotal","modal","setModal","toggle","activeTab","activeDate","endDate","Date","console","log","map","incomeCategory","index","name","income","date","date_np","title","category","currency","income_amount","findData","present_month_data","find","prev","income_category_name","total_income_amount","sliderImages","Array","length","split","system_date_format","mapStateToProps","state","i18nextData","languageType","getIncomeExpenseImgae","data","waterSchemeData","waterSchemeDetailsData","slug","getAllIncomeData","getIncomeCategory","getPreviousIncomeTotal","incomeExpenseImage","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import { CameraIcon } from \"assets/images/xd\";\r\nimport { ADToBS } from \"components/React/Datepicker/Datepickerutils\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport Slider from \"components/UI/Slider\";\r\nimport { getMonthByLanguageAndScheme } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { geAllIncomeAction } from \"store/modules/income/getAllIncome\";\r\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\r\nimport { getIncomeExpenseImageAction } from \"store/modules/income/getIncomeExpenseImgae\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  activeDate: string;\r\n  endDate: string;\r\n  activeTab: string;\r\n}\r\n\r\nconst CashbookTable = (props: Props) => {\r\n  const { t } = useTranslation([\"cashbook\"]);\r\n\r\n  const {\r\n    incomeData,\r\n    incomeCategories,\r\n    language,\r\n    schemeSlug,\r\n    schemeDetails,\r\n    previousIncomeTotal,\r\n    geAllIncomeAction,\r\n    getIncomeCategoryAction,\r\n    getIncomeExpenseImageAction,\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      language &&\r\n      schemeSlug &&\r\n      schemeDetails &&\r\n      props.activeTab &&\r\n      props.activeDate &&\r\n      props.endDate\r\n    ) {\r\n      if (props.activeTab === \"1\") {\r\n        geAllIncomeAction(language, schemeSlug, props.activeDate, props.endDate);\r\n        getIncomeCategoryAction(schemeSlug);\r\n        getIncomeExpenseImageAction(language, schemeSlug, props.activeDate || ADToBS(new Date()));\r\n      }\r\n    }\r\n  }, [language, props.activeDate, props.endDate, schemeSlug, schemeDetails, props.activeTab]);\r\n\r\n  console.log(props.activeDate, props.activeDate, \"<<<<<<<<<\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        <div className=\"data-table table-responsive\">\r\n          <table className=\"table mt-2\">\r\n            <thead>\r\n              <tr>\r\n                <th>{t(\"cashbook:date\")}</th>\r\n                <th>{t(\"cashbook:description\")}</th>\r\n                {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => (\r\n                  <th key={index}>{incomeCategory.name}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {incomeData?.map((income, index) => (\r\n                <tr key={index}>\r\n                  <td>{language === \"en\" ? income.date : income.date_np}</td>\r\n                  <td>{income.title}</td>\r\n                  {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                    if (income.category.name === incomeCategory.name) {\r\n                      return (\r\n                        <td key={index}>\r\n                          {props.schemeDetails?.currency} {income.income_amount}\r\n                        </td>\r\n                      );\r\n                    } else {\r\n                      return <td key={index}>-</td>;\r\n                    }\r\n                  })}\r\n                </tr>\r\n              ))}\r\n\r\n              <tr>\r\n                <td></td>\r\n                <td>{t(\"cashbook:total\")}</td>\r\n                {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  const findData = previousIncomeTotal?.present_month_data?.find(\r\n                    (prev) => prev.income_category_name === incomeCategory.name\r\n                  );\r\n                  if (findData) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {findData.total_income_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n              </tr>\r\n              {props.sliderImages &&\r\n                props.sliderImages instanceof Array &&\r\n                props.sliderImages?.length > 0 && (\r\n                  <>\r\n                    <tr role=\"button\" onClick={() => setModal(true)}>\r\n                      <td>\r\n                        <img src={CameraIcon} alt=\"\" /> &nbsp;&nbsp; Paper Cashbook Image -{\" \"}\r\n                        {getMonthByLanguageAndScheme(\r\n                          props.activeDate?.split(\"-\")[1],\r\n                          props.schemeDetails?.system_date_format\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </>\r\n                )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <GeneralModal open={modal} toggle={toggle}>\r\n          <Slider />\r\n        </GeneralModal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  sliderImages: state.incomeData.getIncomeExpenseImgae.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  incomeData: state.incomeData.getAllIncomeData.data,\r\n  incomeCategories: state.incomeData.getIncomeCategory.data,\r\n  previousIncomeTotal: state.incomeData.getPreviousIncomeTotal.data,\r\n  incomeExpenseImage: state.incomeData.getIncomeExpenseImgae.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  geAllIncomeAction: geAllIncomeAction,\r\n  getIncomeCategoryAction: getIncomeCategoryAction,\r\n  getIncomeExpenseImageAction: getIncomeExpenseImageAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CashbookTable);\r\n"]},"metadata":{},"sourceType":"module"}