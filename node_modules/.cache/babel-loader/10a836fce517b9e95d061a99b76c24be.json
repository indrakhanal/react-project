{"ast":null,"code":"var _jsxFileName = \"E:\\\\Smart Tech Solution\\\\React JS\\\\react-project\\\\src\\\\core\\\\Public\\\\Service\\\\SupplyVisualization\\\\VisualizationGraph.tsx\",\n    _s = $RefreshSig$();\n\nimport GeneralChart from \"components/UI/Charts/General\";\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\nimport { getNumberByLanguage } from \"i18n/i18n\";\nimport React, { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { getYearFromDate } from \"utils/utilsFunction/date-converter\";\nimport DataTable from \"./DataTable\";\nconst config = {\n  name: \"\",\n  type: \"line\",\n  smooth: true,\n  data: []\n};\n\nconst LineChart = props => {\n  _s();\n\n  var _props$options;\n\n  const {\n    t\n  } = useTranslation();\n  const [chartData, setChartData] = useState();\n  const [seriesData, setSeriesData] = useState();\n  const [tableData, setTableData] = useState();\n  const [selected, setSelected] = useState(props.defaultSelected);\n  useEffect(() => {\n    var _props$waterSupplyDat, _props$waterSupplyDat2, _props$waterSupplyDat3, _props$waterSupplyDat4, _props$waterSupplyDat5, _props$waterSupplyDat6, _props$waterSupplyDat7, _props$waterSupplyDat8;\n\n    const newData = {\n      xAxis: (_props$waterSupplyDat = props.waterSupplyData) === null || _props$waterSupplyDat === void 0 ? void 0 : (_props$waterSupplyDat2 = _props$waterSupplyDat.supply) === null || _props$waterSupplyDat2 === void 0 ? void 0 : _props$waterSupplyDat2.map((item, index) => `${t(\"home:year\")} ${getNumberByLanguage(index + 1)} -  ${getNumberByLanguage(getYearFromDate(item.date_from))} - ${getNumberByLanguage(getYearFromDate(item.date_to))}`),\n      total_supply_avg: (_props$waterSupplyDat3 = props.waterSupplyData) === null || _props$waterSupplyDat3 === void 0 ? void 0 : (_props$waterSupplyDat4 = _props$waterSupplyDat3.supply) === null || _props$waterSupplyDat4 === void 0 ? void 0 : _props$waterSupplyDat4.map(item => Number(item.total_supply_avg)),\n      total_supply: (_props$waterSupplyDat5 = props.waterSupplyData) === null || _props$waterSupplyDat5 === void 0 ? void 0 : (_props$waterSupplyDat6 = _props$waterSupplyDat5.supply) === null || _props$waterSupplyDat6 === void 0 ? void 0 : _props$waterSupplyDat6.map(item => Number(item.total_supply)),\n      non_revenue_water: (_props$waterSupplyDat7 = props.waterSupplyData) === null || _props$waterSupplyDat7 === void 0 ? void 0 : (_props$waterSupplyDat8 = _props$waterSupplyDat7.supply) === null || _props$waterSupplyDat8 === void 0 ? void 0 : _props$waterSupplyDat8.map(item => Number(item.non_revenue_water))\n    };\n    setChartData(newData);\n  }, [props.waterSupplyData]);\n\n  const handleSelect = name => {\n    if (selected !== null && selected !== void 0 && selected.includes(name)) {\n      const filteredData = selected.filter(item => item !== name);\n      setSelected(filteredData);\n    } else {\n      setSelected([...selected, name]);\n    }\n  };\n\n  useEffect(() => {\n    const selectedData = selected === null || selected === void 0 ? void 0 : selected.map(item => {\n      var _props$options$find, _props$options$find2;\n\n      return { ...config,\n        name: ((_props$options$find = props.options.find(opt => opt.id === item)) === null || _props$options$find === void 0 ? void 0 : _props$options$find.name) || \"\",\n        data: chartData && chartData[item],\n        itemStyle: {\n          color: ((_props$options$find2 = props.options.find(opt => opt.id === item)) === null || _props$options$find2 === void 0 ? void 0 : _props$options$find2.color) || \"\"\n        }\n      };\n    });\n    const tableData = selected === null || selected === void 0 ? void 0 : selected.map(item => {\n      var _props$options$find3, _props$options$find4;\n\n      return {\n        name: ((_props$options$find3 = props.options.find(opt => opt.id === item)) === null || _props$options$find3 === void 0 ? void 0 : _props$options$find3.name) || \"\",\n        color: ((_props$options$find4 = props.options.find(opt => opt.id === item)) === null || _props$options$find4 === void 0 ? void 0 : _props$options$find4.color) || \"\",\n        data: chartData && chartData[item]\n      };\n    });\n    setSeriesData(selectedData);\n    setTableData(tableData);\n  }, [chartData, selected]);\n  console.log(seriesData, \">>seriesData\");\n  const optionData = {\n    tooltip: {\n      trigger: \"axis\",\n      axisPointer: {\n        type: \"shadow\"\n      }\n    },\n    legend: {\n      show: true\n    },\n    grid: {\n      left: \"3%\",\n      right: \"5%\",\n      bottom: \"3%\",\n      //   top: \"6%\",\n      containLabel: true\n    },\n    xAxis: {\n      type: \"category\",\n      boundaryGap: false,\n      data: chartData === null || chartData === void 0 ? void 0 : chartData.xAxis,\n      axisLabel: {\n        formatter: function (name) {\n          var _name$split$;\n\n          return name === null || name === void 0 ? void 0 : (_name$split$ = name.split(\"-\")[0]) === null || _name$split$ === void 0 ? void 0 : _name$split$.replace(\"Year\", \"\");\n        }\n      }\n    },\n    yAxis: {\n      type: \"value\",\n      axisLabel: {\n        formatter: function (name) {\n          return getNumberByLanguage(name);\n        }\n      }\n    },\n    series: seriesData\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GeneralChart, {\n    minHeight: 400,\n    options: optionData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), (tableData === null || tableData === void 0 ? void 0 : tableData.length) > 0 && props.type && /*#__PURE__*/React.createElement(DataTable, {\n    years: chartData === null || chartData === void 0 ? void 0 : chartData.xAxis,\n    tableData: tableData,\n    type: props.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 chartOptions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"Visualization Parameters\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, (_props$options = props.options) === null || _props$options === void 0 ? void 0 : _props$options.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomCheckBox, {\n    id: \"\" + item.id,\n    label: item.name,\n    onChange: e => handleSelect(item.id),\n    checked: selected.includes(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }))))));\n};\n\n_s(LineChart, \"TuolSkc4sAYeNv2g75gruSK6HTw=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LineChart;\n\nconst mapStateToProps = state => ({\n  language: state.i18nextData.languageType,\n  waterSupplyData: state.reportData.waterSupplyData.data,\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\n  actualCF: state.reportData.actualCumulativeCashFlowData.data,\n  expenseCF: state.reportData.expenseCumulativeCashFlowData.data\n});\n\nconst mapDispatchToProps = {};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(LineChart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LineChart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/core/Public/Service/SupplyVisualization/VisualizationGraph.tsx"],"names":["GeneralChart","CustomCheckBox","getNumberByLanguage","React","useState","useEffect","useTranslation","connect","getYearFromDate","DataTable","config","name","type","smooth","data","LineChart","props","t","chartData","setChartData","seriesData","setSeriesData","tableData","setTableData","selected","setSelected","defaultSelected","newData","xAxis","waterSupplyData","supply","map","item","index","date_from","date_to","total_supply_avg","Number","total_supply","non_revenue_water","handleSelect","includes","filteredData","filter","selectedData","options","find","opt","id","itemStyle","color","console","log","optionData","tooltip","trigger","axisPointer","legend","show","grid","left","right","bottom","containLabel","boundaryGap","axisLabel","formatter","split","replace","yAxis","series","length","e","mapStateToProps","state","language","i18nextData","languageType","reportData","incomeExpenseData","actualCF","actualCumulativeCashFlowData","expenseCF","expenseCumulativeCashFlowData","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import GeneralChart from \"components/UI/Charts/General\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getYearFromDate } from \"utils/utilsFunction/date-converter\";\r\nimport DataTable from \"./DataTable\";\r\n\r\nconst config = {\r\n  name: \"\",\r\n  type: \"line\",\r\n  smooth: true,\r\n  data: [],\r\n};\r\n\r\ntype SeriesConfig = {\r\n  name: string;\r\n  type: string;\r\n  smooth: boolean;\r\n  data: (string | number)[];\r\n};\r\n\r\ntype ChartDataType = {\r\n  xAxis: (string | number)[];\r\n  total_supply_avg?: (string | number)[];\r\n  total_supply?: (string | number)[];\r\n  non_revenue_water?: (string | number)[];\r\n};\r\n\r\ninterface Props extends PropsFromRedux {\r\n  type?: string;\r\n  options: any[];\r\n  compareKey: string;\r\n  defaultSelected: string[];\r\n}\r\n\r\nconst LineChart = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [chartData, setChartData] = useState<ChartDataType>();\r\n\r\n  const [seriesData, setSeriesData] = useState<SeriesConfig[]>();\r\n\r\n  const [tableData, setTableData] = useState<any>();\r\n\r\n  const [selected, setSelected] = useState<string[]>(props.defaultSelected);\r\n\r\n  useEffect(() => {\r\n    const newData: ChartDataType = {\r\n      xAxis: props.waterSupplyData?.supply?.map(\r\n        (item, index) =>\r\n          `${t(\"home:year\")} ${getNumberByLanguage(index + 1)} -  ${getNumberByLanguage(\r\n            getYearFromDate(item.date_from)\r\n          )} - ${getNumberByLanguage(getYearFromDate(item.date_to))}`\r\n      ),\r\n\r\n      total_supply_avg: props.waterSupplyData?.supply?.map((item) => Number(item.total_supply_avg)),\r\n      total_supply: props.waterSupplyData?.supply?.map((item) => Number(item.total_supply)),\r\n      non_revenue_water: props.waterSupplyData?.supply?.map((item) =>\r\n        Number(item.non_revenue_water)\r\n      ),\r\n    };\r\n    setChartData(newData);\r\n  }, [props.waterSupplyData]);\r\n\r\n  const handleSelect = (name: string) => {\r\n    if (selected?.includes(name)) {\r\n      const filteredData = selected.filter((item) => item !== name);\r\n      setSelected(filteredData);\r\n    } else {\r\n      setSelected([...selected, name]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selectedData = selected?.map((item) => ({\r\n      ...config,\r\n      name: props.options.find((opt) => opt.id === item)?.name || \"\",\r\n      data: chartData && chartData[item],\r\n      itemStyle: {\r\n        color: props.options.find((opt) => opt.id === item)?.color || \"\",\r\n      },\r\n    }));\r\n\r\n    const tableData = selected?.map((item) => ({\r\n      name: props.options.find((opt) => opt.id === item)?.name || \"\",\r\n      color: props.options.find((opt) => opt.id === item)?.color || \"\",\r\n      data: chartData && chartData[item],\r\n    }));\r\n\r\n    setSeriesData(selectedData);\r\n    setTableData(tableData);\r\n  }, [chartData, selected]);\r\n\r\n  console.log(seriesData, \">>seriesData\")\r\n\r\n  const optionData = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n      },\r\n    },\r\n    legend: {\r\n      show: true,\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"5%\",\r\n      bottom: \"3%\",\r\n      //   top: \"6%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      boundaryGap: false,\r\n      data: chartData?.xAxis,\r\n      axisLabel: {\r\n        formatter: function (name) {\r\n          return name?.split(\"-\")[0]?.replace(\"Year\", \"\");\r\n        },\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      axisLabel: {\r\n        formatter: function (name) {\r\n          return getNumberByLanguage(name);\r\n        },\r\n      },\r\n    },\r\n    series: seriesData,\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-9\">\r\n        <GeneralChart minHeight={400} options={optionData} />\r\n        {tableData?.length > 0 && props.type && (\r\n          <DataTable years={chartData?.xAxis} tableData={tableData} type={props.type} />\r\n        )}\r\n      </div>\r\n      <div className=\"col-md-3 chartOptions\">\r\n        <h6>Select</h6>\r\n        <p>Visualization Parameters</p>\r\n\r\n        <ul>\r\n          {props.options?.map((item) => (\r\n            <li key={item.id}>\r\n              <CustomCheckBox\r\n                id={\"\" + item.id}\r\n                label={item.name}\r\n                onChange={(e) => handleSelect(item.id)}\r\n                checked={selected.includes(item.id)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  waterSupplyData: state.reportData.waterSupplyData.data,\r\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\r\n  actualCF: state.reportData.actualCumulativeCashFlowData.data,\r\n  expenseCF: state.reportData.expenseCumulativeCashFlowData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(LineChart);\r\n"]},"metadata":{},"sourceType":"module"}