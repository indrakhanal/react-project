{"ast":null,"code":"import { ADToBS } from \"components/React/Datepicker/Datepickerutils\";\nexport default function formatDate(date) {\n  if (date) {\n    const dateVal = date ? new Date(date) : new Date();\n    let day = dateVal.getDate();\n    let month = dateVal.getMonth() + 1;\n    let year = dateVal.getFullYear();\n    const formattedDate = year + '-' + (month < 10 ? \"0\" + month : month) + '-' + (day < 10 ? \"0\" + day : day);\n    return formattedDate;\n  }\n\n  return \"\";\n}\nexport const getWeekDay = string => {\n  var _Date$toLocaleString, _Date$toLocaleString$;\n\n  return (_Date$toLocaleString = new Date(string).toLocaleString('en-us', {\n    weekday: 'long'\n  })) === null || _Date$toLocaleString === void 0 ? void 0 : (_Date$toLocaleString$ = _Date$toLocaleString.substring(0, 3)) === null || _Date$toLocaleString$ === void 0 ? void 0 : _Date$toLocaleString$.toUpperCase();\n};\nexport const getYearFromDate = date => {\n  if (date) {\n    const split = date.split(\"-\");\n\n    if (split) {\n      return split[0];\n    }\n\n    return \"\";\n  }\n\n  return \"\";\n};\nexport const getDefaultDate = language => {\n  if (language === \"nep\") {\n    return ADToBS(new Date());\n  } else {\n    return formatDate(new Date());\n  }\n};","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/utils/utilsFunction/date-converter.ts"],"names":["ADToBS","formatDate","date","dateVal","Date","day","getDate","month","getMonth","year","getFullYear","formattedDate","getWeekDay","string","toLocaleString","weekday","substring","toUpperCase","getYearFromDate","split","getDefaultDate","language"],"mappings":"AAAA,SAASA,MAAT,QAAuB,6CAAvB;AAEA,eAAe,SAASC,UAAT,CAAoBC,IAApB,EAA0C;AACvD,MAAIA,IAAJ,EAAU;AACR,UAAMC,OAAa,GAAGD,IAAI,GAAG,IAAIE,IAAJ,CAASF,IAAT,CAAH,GAAoB,IAAIE,IAAJ,EAA9C;AACA,QAAIC,GAAG,GAAGF,OAAO,CAACG,OAAR,EAAV;AACA,QAAIC,KAAK,GAAGJ,OAAO,CAACK,QAAR,KAAqB,CAAjC;AACA,QAAIC,IAAI,GAAGN,OAAO,CAACO,WAAR,EAAX;AAEA,UAAMC,aAAa,GAAGF,IAAI,GAAG,GAAP,IAAcF,KAAK,GAAG,EAAR,GAAa,MAAMA,KAAnB,GAA2BA,KAAzC,IAAkD,GAAlD,IAAyDF,GAAG,GAAG,EAAN,GAAW,MAAMA,GAAjB,GAAuBA,GAAhF,CAAtB;AAEA,WAAOM,aAAP;AACD;;AAED,SAAO,EAAP;AACD;AAGD,OAAO,MAAMC,UAAU,GAAIC,MAAD,IAAY;AAAA;;AACpC,iCAAO,IAAIT,IAAJ,CAASS,MAAT,EAAiBC,cAAjB,CAAgC,OAAhC,EAAyC;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAzC,CAAP,kFAAO,qBAA+DC,SAA/D,CAAyE,CAAzE,EAA4E,CAA5E,CAAP,0DAAO,sBAAgFC,WAAhF,EAAP;AACD,CAFM;AAIP,OAAO,MAAMC,eAAe,GAAIhB,IAAD,IAAU;AACvC,MAAIA,IAAJ,EAAU;AACR,UAAMiB,KAAK,GAAGjB,IAAI,CAACiB,KAAL,CAAW,GAAX,CAAd;;AACA,QAAIA,KAAJ,EAAW;AACT,aAAOA,KAAK,CAAC,CAAD,CAAZ;AACD;;AACD,WAAO,EAAP;AACD;;AACD,SAAO,EAAP;AACD,CATM;AAYP,OAAO,MAAMC,cAAc,GAAIC,QAAD,IAAsB;AAClD,MAAIA,QAAQ,KAAK,KAAjB,EAAwB;AACtB,WAAOrB,MAAM,CAAC,IAAII,IAAJ,EAAD,CAAb;AACD,GAFD,MAEO;AACL,WAAOH,UAAU,CAAC,IAAIG,IAAJ,EAAD,CAAjB;AACD;AACF,CANM","sourcesContent":["import { ADToBS } from \"components/React/Datepicker/Datepickerutils\";\r\n\r\nexport default function formatDate(date?: string | Date) {\r\n  if (date) {\r\n    const dateVal: Date = date ? new Date(date) : new Date();\r\n    let day = dateVal.getDate();\r\n    let month = dateVal.getMonth() + 1;\r\n    let year = dateVal.getFullYear();\r\n\r\n    const formattedDate = year + '-' + (month < 10 ? \"0\" + month : month) + '-' + (day < 10 ? \"0\" + day : day);\r\n\r\n    return formattedDate;\r\n  }\r\n\r\n  return \"\";\r\n}\r\n\r\n\r\nexport const getWeekDay = (string) => {\r\n  return new Date(string).toLocaleString('en-us', { weekday: 'long' })?.substring(0, 3)?.toUpperCase()\r\n}\r\n\r\nexport const getYearFromDate = (date) => {\r\n  if (date) {\r\n    const split = date.split(\"-\")\r\n    if (split) {\r\n      return split[0]\r\n    }\r\n    return \"\"\r\n  }\r\n  return \"\"\r\n}\r\n\r\n\r\nexport const getDefaultDate = (language: string) => {\r\n  if (language === \"nep\") {\r\n    return ADToBS(new Date())\r\n  } else {\r\n    return formatDate(new Date())\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}