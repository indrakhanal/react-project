{"ast":null,"code":"var _jsxFileName = \"E:\\\\Smart Tech Solution\\\\React JS\\\\react-project\\\\src\\\\core\\\\Protected\\\\Finance\\\\TarrifRates\\\\UseBased\\\\Form.tsx\",\n    _s = $RefreshSig$();\n\nimport { DeleteIcon } from \"assets/images/xd\";\nimport NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\nimport FormikValidationError, { FormikFieldArrayValidationError } from \"components/React/FormikValidationError/FormikValidationError\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport Button from \"components/UI/Forms/Buttons\";\nimport TooltipLabel from \"components/UI/TooltipLabel\";\nimport { FieldArray, Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { getUsIncomeEstimateThisYearAction } from \"store/modules/waterTarrifs/getIncomeEstimateThisYear\";\nimport { getUseBasedWaterTarrifsAction } from \"store/modules/waterTarrifs/getUseBasedWaterTarrifs\";\nimport { postUseBasedWaterTariffAction } from \"store/modules/waterTarrifs/postUseBasedWaterTariff\";\nimport { updateUseBasedWaterTariffAction } from \"store/modules/waterTarrifs/updateUseBasedWaterTariff\";\nimport formatDate from \"utils/utilsFunction/date-converter\";\nimport * as Yup from \"yup\";\nconst validationSchema = Yup.object({\n  apply_date: Yup.mixed().required(\"This field is required\"),\n  used_based_units: Yup.array().of(Yup.object().shape({\n    unit_from: Yup.string().required(\"This field is required\"),\n    unit_to: Yup.string().required(\"This field is required\"),\n    rate: Yup.string().required(\"This field is required\"),\n    estimated_paying_connection: Yup.string().required(\"This field is required\")\n  }))\n});\n\nconst UseBasedForm = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    editData,\n    postUseBasedWaterTariffAction\n  } = props;\n  console.log(editData, \"editDataeditData\");\n  const [initialData, setInitialData] = React.useState({\n    apply_date: \"\",\n    used_based_units: [{\n      unit_from: \"\",\n      unit_to: \"\",\n      rate: \"\",\n      estimated_paying_connection: \"\"\n    }]\n  });\n  React.useEffect(() => {\n    if (props.scheme) {\n      var _props$scheme;\n\n      setInitialData({\n        apply_date: ((_props$scheme = props.scheme) === null || _props$scheme === void 0 ? void 0 : _props$scheme.tool_start_date) || \"\",\n        used_based_units: [{\n          unit_from: \"\",\n          unit_to: \"\",\n          rate: \"\",\n          estimated_paying_connection: \"\"\n        }]\n      });\n    }\n  }, [props.scheme]);\n\n  const handleTariffSubmit = async (values, resetForm) => {\n    let response;\n\n    if (props.editData) {\n      var _props$editData, _props$editData$tarif, _props$editData$tarif2;\n\n      const updateValues = {\n        apply_date: values.apply_date,\n        ...values.used_based_units[0],\n        tariff: (_props$editData = props.editData) === null || _props$editData === void 0 ? void 0 : (_props$editData$tarif = _props$editData.tariff) === null || _props$editData$tarif === void 0 ? void 0 : _props$editData$tarif.tariff\n      };\n      console.log(updateValues, \"updateValues\");\n      response = await props.updateUseBasedWaterTariffAction(props.language, (_props$editData$tarif2 = props.editData.tariff) === null || _props$editData$tarif2 === void 0 ? void 0 : _props$editData$tarif2.id, updateValues);\n    } else {\n      response = await props.postUseBasedWaterTariffAction(props.language, { ...values,\n        apply_date: formatDate(values.apply_date)\n      });\n    }\n\n    if (response && (response.status === 201 || response.status === 200)) {\n      if (response.status === 201) {\n        resetForm();\n        toast.success(t(\"home:postSuccess\"));\n      } else {\n        setInitialData({\n          apply_date: \"\",\n          used_based_units: [{\n            unit_from: \"\",\n            unit_to: \"\",\n            rate: \"\",\n            estimated_paying_connection: \"\"\n          }]\n        });\n        toast.success(t(\"home:updateSuccess\"));\n      }\n\n      props.getUseBasedWaterTarrifsAction(props.language, props.schemeSlug);\n      props.getUsIncomeEstimateThisYearAction(props.schemeSlug);\n    } else {\n      const errorList = response.data && response.data.error;\n\n      if (errorList instanceof Array) {\n        errorList.forEach(item => {\n          toast.error(item);\n        });\n      }\n\n      console.log(response, \"errrr\");\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.editData) {\n      var _props$editData2, _props$editData2$item, _props$editData3, _props$editData3$tari, _props$editData4, _props$editData4$tari, _props$editData5, _props$editData5$tari, _props$editData6, _props$editData6$tari;\n\n      setInitialData({\n        apply_date: (_props$editData2 = props.editData) === null || _props$editData2 === void 0 ? void 0 : (_props$editData2$item = _props$editData2.item) === null || _props$editData2$item === void 0 ? void 0 : _props$editData2$item.apply_date,\n        used_based_units: [{\n          unit_from: (_props$editData3 = props.editData) === null || _props$editData3 === void 0 ? void 0 : (_props$editData3$tari = _props$editData3.tariff) === null || _props$editData3$tari === void 0 ? void 0 : _props$editData3$tari.unit_from,\n          unit_to: (_props$editData4 = props.editData) === null || _props$editData4 === void 0 ? void 0 : (_props$editData4$tari = _props$editData4.tariff) === null || _props$editData4$tari === void 0 ? void 0 : _props$editData4$tari.unit_to,\n          rate: (_props$editData5 = props.editData) === null || _props$editData5 === void 0 ? void 0 : (_props$editData5$tari = _props$editData5.tariff) === null || _props$editData5$tari === void 0 ? void 0 : _props$editData5$tari.rate,\n          estimated_paying_connection: (_props$editData6 = props.editData) === null || _props$editData6 === void 0 ? void 0 : (_props$editData6$tari = _props$editData6.tariff) === null || _props$editData6$tari === void 0 ? void 0 : _props$editData6$tari.estimated_paying_connection\n        }]\n      });\n    }\n  }, [props.editData]);\n  return /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: initialData,\n    validationSchema: validationSchema,\n    onSubmit: (values, _ref) => {\n      let {\n        resetForm\n      } = _ref;\n      handleTariffSubmit(values, resetForm);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, _ref2 => {\n    var _props$scheme2;\n\n    let {\n      values,\n      errors,\n      touched,\n      handleChange,\n      setFieldValue\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row tarrif_form \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group top  mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      className: \"mr-1 pl-0 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, t(\"home:applyDate\"), \" \", /*#__PURE__*/React.createElement(TooltipLabel, {\n      id: \"apd\",\n      text: `The date from which this record  should be applied to the system.`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 41\n      }\n    }), \":\"), ((_props$scheme2 = props.scheme) === null || _props$scheme2 === void 0 ? void 0 : _props$scheme2.system_date_format) === \"nep\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NepaliDatePicker, {\n      value: values.apply_date,\n      name: \"apply_date\",\n      onChange: e => {\n        setFieldValue(\"apply_date\", e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EnglishDatePicker, {\n      name: \"apply_date\",\n      value: values.apply_date,\n      handleChange: e => {\n        setFieldValue(\"apply_date\", formatDate(e));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormikValidationError, {\n      name: \"apply_date\",\n      errors: errors,\n      touched: touched,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(FieldArray, {\n      name: \"used_based_units\",\n      render: arrayHelpers => /*#__PURE__*/React.createElement(React.Fragment, null, values.used_based_units && values.used_based_units.map((data, index) => {\n        var _props$scheme3, _values$used_based_un;\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row align-items-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"\",\n          className: \"mr-1 pl-0 \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 31\n          }\n        }, t(\"home:units\"), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          name: `used_based_units[${index}][unit_from]`,\n          value: values.used_based_units[index][\"unit_from\"],\n          onChange: e => {\n            setFieldValue(e.target.name, e.target.value);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 31\n          }\n        }), /*#__PURE__*/React.createElement(FormikFieldArrayValidationError, {\n          keyName: \"used_based_units\",\n          name: \"unit_from\",\n          index: index,\n          errors: errors,\n          touched: touched,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 31\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"\",\n          className: \"mr-1 pl-0 \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 31\n          }\n        }, t(\"finance:to\"), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          name: `used_based_units[${index}][unit_to]`,\n          value: values.used_based_units[index][\"unit_to\"],\n          onChange: e => {\n            setFieldValue(e.target.name, e.target.value);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 31\n          }\n        }), /*#__PURE__*/React.createElement(FormikFieldArrayValidationError, {\n          keyName: \"used_based_units\",\n          name: \"unit_to\",\n          index: index,\n          errors: errors,\n          touched: touched,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 31\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"\",\n          className: \"mr-1 pl-0 \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 31\n          }\n        }, t(\"home:rate\"), \" (\", (_props$scheme3 = props.scheme) === null || _props$scheme3 === void 0 ? void 0 : _props$scheme3.currency, \"):\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          name: `used_based_units[${index}][rate]`,\n          value: values.used_based_units[index][\"rate\"],\n          onChange: e => {\n            setFieldValue(e.target.name, e.target.value);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 31\n          }\n        }), /*#__PURE__*/React.createElement(FormikFieldArrayValidationError, {\n          keyName: \"used_based_units\",\n          name: \"rate\",\n          index: index,\n          errors: errors,\n          touched: touched,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 31\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-4\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"\",\n          className: \"mr-1 pl-0 \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 31\n          }\n        }, t(\"finance:epcs\"), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          name: `used_based_units[${index}][estimated_paying_connection]`,\n          value: values.used_based_units[index][\"estimated_paying_connection\"],\n          onChange: e => {\n            setFieldValue(e.target.name, e.target.value);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 31\n          }\n        }), /*#__PURE__*/React.createElement(FormikFieldArrayValidationError, {\n          keyName: \"used_based_units\",\n          name: \"estimated_paying_connection\",\n          index: index,\n          errors: errors,\n          touched: touched,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 31\n          }\n        }))), !props.editData && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-1 text-right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: DeleteIcon,\n          className: \"mb-3\",\n          role: \"button\",\n          onClick: () => arrayHelpers.remove(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 31\n          }\n        }))), index === ((_values$used_based_un = values.used_based_units) === null || _values$used_based_un === void 0 ? void 0 : _values$used_based_un.length) - 1 && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-12 mt-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"text-right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 29\n          }\n        }, !props.editData && /*#__PURE__*/React.createElement(Button, {\n          className: \"btn custom-btn  mr-3\",\n          text: t(\"finance:add\"),\n          onClick: () => arrayHelpers.push(\"\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          className: \"btn custom-btn \",\n          text: t(\"home:save\"),\n          disabled: props.postLoading || props.updateLoading,\n          loading: props.postLoading || props.updateLoading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 31\n          }\n        }))));\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    })));\n  });\n};\n\n_s(UseBasedForm, \"7DgOj2rAKRhcqS0qpA5lQQzJTj0=\", false, function () {\n  return [useTranslation];\n});\n\n_c = UseBasedForm;\n\nconst mapStateToProps = state => {\n  var _state$waterSchemeDat;\n\n  return {\n    language: state.i18nextData.languageType,\n    scheme: state.waterSchemeData.waterSchemeDetailsData.data,\n    schemeSlug: (_state$waterSchemeDat = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat === void 0 ? void 0 : _state$waterSchemeDat.slug,\n    supplySchedule: state.waterTarrifsData.waterTarrifData.data,\n    postLoading: state.waterTarrifsData.postUseBasedWaterTariff.isFetching,\n    updateLoading: state.waterTarrifsData.updateUseBasedWaterTariff.isFetching\n  };\n};\n\nconst mapDispatchToProps = {\n  postUseBasedWaterTariffAction: postUseBasedWaterTariffAction,\n  updateUseBasedWaterTariffAction: updateUseBasedWaterTariffAction,\n  getUsIncomeEstimateThisYearAction: getUsIncomeEstimateThisYearAction,\n  getUseBasedWaterTarrifsAction: getUseBasedWaterTarrifsAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(UseBasedForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UseBasedForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/core/Protected/Finance/TarrifRates/UseBased/Form.tsx"],"names":["DeleteIcon","NepaliDatePicker","EnglishDatePicker","FormikValidationError","FormikFieldArrayValidationError","toast","Button","TooltipLabel","FieldArray","Form","Formik","React","useTranslation","connect","getUsIncomeEstimateThisYearAction","getUseBasedWaterTarrifsAction","postUseBasedWaterTariffAction","updateUseBasedWaterTariffAction","formatDate","Yup","validationSchema","object","apply_date","mixed","required","used_based_units","array","of","shape","unit_from","string","unit_to","rate","estimated_paying_connection","UseBasedForm","props","t","editData","console","log","initialData","setInitialData","useState","useEffect","scheme","tool_start_date","handleTariffSubmit","values","resetForm","response","updateValues","tariff","language","id","status","success","schemeSlug","errorList","data","error","Array","forEach","item","errors","touched","handleChange","setFieldValue","system_date_format","e","arrayHelpers","map","index","target","name","value","currency","remove","length","push","postLoading","updateLoading","mapStateToProps","state","i18nextData","languageType","waterSchemeData","waterSchemeDetailsData","slug","supplySchedule","waterTarrifsData","waterTarrifData","postUseBasedWaterTariff","isFetching","updateUseBasedWaterTariff","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import { DeleteIcon } from \"assets/images/xd\";\r\nimport NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError, {\r\n  FormikFieldArrayValidationError,\r\n} from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\nimport { FieldArray, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getUsIncomeEstimateThisYearAction } from \"store/modules/waterTarrifs/getIncomeEstimateThisYear\";\r\nimport { getUseBasedWaterTarrifsAction } from \"store/modules/waterTarrifs/getUseBasedWaterTarrifs\";\r\nimport { getWaterTarrifsAction } from \"store/modules/waterTarrifs/getWaterTarrifs\";\r\nimport { postUseBasedWaterTariffAction } from \"store/modules/waterTarrifs/postUseBasedWaterTariff\";\r\nimport { updateUseBasedWaterTariffAction } from \"store/modules/waterTarrifs/updateUseBasedWaterTariff\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport formatDate from \"utils/utilsFunction/date-converter\";\r\nimport * as Yup from \"yup\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData;\r\n  setEditData;\r\n}\r\n\r\ntype useBasedType = {\r\n  unit_from: any;\r\n  unit_to: any;\r\n  rate: any;\r\n  estimated_paying_connection: any;\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  apply_date: Yup.mixed().required(\"This field is required\"),\r\n  used_based_units: Yup.array().of(\r\n    Yup.object().shape({\r\n      unit_from: Yup.string().required(\"This field is required\"),\r\n      unit_to: Yup.string().required(\"This field is required\"),\r\n      rate: Yup.string().required(\"This field is required\"),\r\n      estimated_paying_connection: Yup.string().required(\"This field is required\"),\r\n    })\r\n  ),\r\n});\r\n\r\nconst UseBasedForm = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const { editData, postUseBasedWaterTariffAction } = props;\r\n\r\n  console.log(editData, \"editDataeditData\");\r\n\r\n  const [initialData, setInitialData] = React.useState({\r\n    apply_date: \"\",\r\n    used_based_units: [\r\n      {\r\n        unit_from: \"\",\r\n        unit_to: \"\",\r\n        rate: \"\",\r\n        estimated_paying_connection: \"\",\r\n      },\r\n    ] as useBasedType[],\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.scheme) {\r\n      setInitialData({\r\n        apply_date: props.scheme?.tool_start_date || \"\",\r\n        used_based_units: [\r\n          {\r\n            unit_from: \"\",\r\n            unit_to: \"\",\r\n            rate: \"\",\r\n            estimated_paying_connection: \"\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }, [props.scheme]);\r\n\r\n  const handleTariffSubmit = async (values, resetForm) => {\r\n    let response;\r\n\r\n    if (props.editData) {\r\n      const updateValues = {\r\n        apply_date: values.apply_date,\r\n        ...values.used_based_units[0],\r\n        tariff: props.editData?.tariff?.tariff,\r\n      };\r\n\r\n      console.log(updateValues, \"updateValues\");\r\n      response = await props.updateUseBasedWaterTariffAction(\r\n        props.language,\r\n        props.editData.tariff?.id,\r\n        updateValues\r\n      );\r\n    } else {\r\n      response = await props.postUseBasedWaterTariffAction(props.language, {\r\n        ...values,\r\n        apply_date: formatDate(values.apply_date),\r\n      });\r\n    }\r\n\r\n    if (response && (response.status === 201 || response.status === 200)) {\r\n      if (response.status === 201) {\r\n        resetForm();\r\n        toast.success(t(\"home:postSuccess\"));\r\n      } else {\r\n        setInitialData({\r\n          apply_date: \"\",\r\n          used_based_units: [\r\n            {\r\n              unit_from: \"\",\r\n              unit_to: \"\",\r\n              rate: \"\",\r\n              estimated_paying_connection: \"\",\r\n            },\r\n          ],\r\n        });\r\n\r\n        toast.success(t(\"home:updateSuccess\"));\r\n      }\r\n      props.getUseBasedWaterTarrifsAction(props.language, props.schemeSlug);\r\n      props.getUsIncomeEstimateThisYearAction(props.schemeSlug);\r\n    } else {\r\n      const errorList = response.data && response.data.error;\r\n      if (errorList instanceof Array) {\r\n        errorList.forEach((item) => {\r\n          toast.error(item);\r\n        });\r\n      }\r\n      console.log(response, \"errrr\");\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      setInitialData({\r\n        apply_date: props.editData?.item?.apply_date,\r\n        used_based_units: [\r\n          {\r\n            unit_from: props.editData?.tariff?.unit_from,\r\n            unit_to: props.editData?.tariff?.unit_to,\r\n            rate: props.editData?.tariff?.rate,\r\n            estimated_paying_connection: props.editData?.tariff?.estimated_paying_connection,\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  return (\r\n    <Formik\r\n      enableReinitialize={true}\r\n      initialValues={initialData}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { resetForm }) => {\r\n        handleTariffSubmit(values, resetForm);\r\n      }}\r\n    >\r\n      {({ values, errors, touched, handleChange, setFieldValue }) => (\r\n        <Form>\r\n          <div className=\"row tarrif_form \">\r\n            <div className=\"col-md-4 \">\r\n              <div className=\"form-group top  mt-2\">\r\n                <label htmlFor=\"\" className=\"mr-1 pl-0 \">\r\n                  {t(\"home:applyDate\")} <TooltipLabel id={\"apd\"} text={`The date from which this record  should be applied to the system.`} />:\r\n                </label>\r\n\r\n                {props.scheme?.system_date_format === \"nep\" ? (\r\n                  <>\r\n                    <NepaliDatePicker\r\n                      value={values.apply_date}\r\n                      name=\"apply_date\"\r\n                      onChange={(e) => {\r\n                        setFieldValue(\"apply_date\", e);\r\n                      }}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <EnglishDatePicker\r\n                      name=\"apply_date\"\r\n                      value={values.apply_date}\r\n                      handleChange={(e) => {\r\n                        setFieldValue(\"apply_date\", formatDate(e));\r\n                      }}\r\n                    />\r\n                  </>\r\n                )}\r\n                <FormikValidationError name=\"apply_date\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n            <FieldArray\r\n              name=\"used_based_units\"\r\n              render={(arrayHelpers) => (\r\n                <>\r\n                  {values.used_based_units &&\r\n                    values.used_based_units.map((data, index) => (\r\n                      <div className=\"col-12\">\r\n                        <div className=\"row align-items-center\">\r\n                          <div className=\"col-md-2\">\r\n                            <div className=\"form-group \">\r\n                              <label htmlFor=\"\" className=\"mr-1 pl-0 \">\r\n                                {t(\"home:units\")}:\r\n                              </label>\r\n\r\n                              <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name={`used_based_units[${index}][unit_from]`}\r\n                                value={values.used_based_units[index][\"unit_from\"]}\r\n                                onChange={(e) => {\r\n                                  setFieldValue(e.target.name, e.target.value);\r\n                                }}\r\n                              />\r\n                              <FormikFieldArrayValidationError\r\n                                keyName=\"used_based_units\"\r\n                                name=\"unit_from\"\r\n                                index={index}\r\n                                errors={errors}\r\n                                touched={touched}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-2\">\r\n                            <div className=\"form-group \">\r\n                              <label htmlFor=\"\" className=\"mr-1 pl-0 \">\r\n                                {t(\"finance:to\")}:\r\n                              </label>\r\n\r\n                              <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name={`used_based_units[${index}][unit_to]`}\r\n                                value={values.used_based_units[index][\"unit_to\"]}\r\n                                onChange={(e) => {\r\n                                  setFieldValue(e.target.name, e.target.value);\r\n                                }}\r\n                              />\r\n                              <FormikFieldArrayValidationError\r\n                                keyName=\"used_based_units\"\r\n                                name=\"unit_to\"\r\n                                index={index}\r\n                                errors={errors}\r\n                                touched={touched}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-3\">\r\n                            <div className=\"form-group \">\r\n                              <label htmlFor=\"\" className=\"mr-1 pl-0 \">\r\n                                {t(\"home:rate\")} ({props.scheme?.currency}):\r\n                              </label>\r\n                              <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name={`used_based_units[${index}][rate]`}\r\n                                value={values.used_based_units[index][\"rate\"]}\r\n                                onChange={(e) => {\r\n                                  setFieldValue(e.target.name, e.target.value);\r\n                                }}\r\n                              />\r\n                              <FormikFieldArrayValidationError\r\n                                keyName=\"used_based_units\"\r\n                                name=\"rate\"\r\n                                index={index}\r\n                                errors={errors}\r\n                                touched={touched}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-4\">\r\n                            <div className=\"form-group \">\r\n                              <label htmlFor=\"\" className=\"mr-1 pl-0 \">\r\n                                {t(\"finance:epcs\")}:\r\n                              </label>\r\n\r\n                              <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name={`used_based_units[${index}][estimated_paying_connection]`}\r\n                                value={\r\n                                  values.used_based_units[index][\"estimated_paying_connection\"]\r\n                                }\r\n                                onChange={(e) => {\r\n                                  setFieldValue(e.target.name, e.target.value);\r\n                                }}\r\n                              />\r\n                              <FormikFieldArrayValidationError\r\n                                keyName=\"used_based_units\"\r\n                                name=\"estimated_paying_connection\"\r\n                                index={index}\r\n                                errors={errors}\r\n                                touched={touched}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          {!props.editData && (\r\n                            <div className=\"col-1 text-right\">\r\n                              <img\r\n                                src={DeleteIcon}\r\n                                className=\"mb-3\"\r\n                                role=\"button\"\r\n                                onClick={() => arrayHelpers.remove(index)}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        {index === values.used_based_units?.length - 1 && (\r\n                          <div className=\"col-12 mt-3\">\r\n                            <div className=\"text-right\">\r\n                              {!props.editData && (\r\n                                <Button\r\n                                  className=\"btn custom-btn  mr-3\"\r\n                                  text={t(\"finance:add\")}\r\n                                  onClick={() => arrayHelpers.push(\"\")}\r\n                                />\r\n                              )}\r\n                              <Button\r\n                                className=\"btn custom-btn \"\r\n                                text={t(\"home:save\")}\r\n                                disabled={props.postLoading || props.updateLoading}\r\n                                loading={props.postLoading || props.updateLoading}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                </>\r\n              )}\r\n            />\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  supplySchedule: state.waterTarrifsData.waterTarrifData.data,\r\n  postLoading: state.waterTarrifsData.postUseBasedWaterTariff.isFetching,\r\n  updateLoading: state.waterTarrifsData.updateUseBasedWaterTariff.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postUseBasedWaterTariffAction: postUseBasedWaterTariffAction,\r\n  updateUseBasedWaterTariffAction: updateUseBasedWaterTariffAction,\r\n  getUsIncomeEstimateThisYearAction: getUsIncomeEstimateThisYearAction,\r\n  getUseBasedWaterTarrifsAction: getUseBasedWaterTarrifsAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(UseBasedForm);\r\n"]},"metadata":{},"sourceType":"module"}