{"ast":null,"code":"import { apiList } from \"../../actionNames\";\nimport initDefaultAction from \"../../helper/default-action\";\nimport initDefaultReducer from \"../../helper/default-reducer\";\nimport initialState from \"../../helper/default-state\";\nconst apiDetails = Object.freeze(apiList.componentLogs.getComponentLogs);\nexport default function getComponentLogsReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const stateCopy = Object.assign({}, state);\n  const actionName = apiDetails.actionName;\n  return initDefaultReducer(actionName, action, stateCopy);\n}\nexport const getComponentLogsAction = lang => async dispatch => {\n  return await initDefaultAction(apiDetails, dispatch, { ...apiDetails,\n    pathVariables: {\n      lang\n    }\n  });\n};","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/store/modules/componentLogs/getComponentLogs.ts"],"names":["apiList","initDefaultAction","initDefaultReducer","initialState","apiDetails","Object","freeze","componentLogs","getComponentLogs","getComponentLogsReducer","state","action","stateCopy","assign","actionName","getComponentLogsAction","lang","dispatch","pathVariables"],"mappings":"AAGA,SAASA,OAAT,QAAwB,mBAAxB;AACA,OAAOC,iBAAP,MAAqD,6BAArD;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAoBA,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcN,OAAO,CAACO,aAAR,CAAsBC,gBAApC,CAAnB;AAEA,eAAe,SAASC,uBAAT,GAAiH;AAAA,MAAhFC,KAAgF,uEAAxEP,YAAwE;AAAA,MAA1DQ,MAA0D;AAC5H,QAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAP,CAAc,EAAd,EAAkBH,KAAlB,CAAlB;AACA,QAAMI,UAAU,GAAGV,UAAU,CAACU,UAA9B;AAEA,SAAOZ,kBAAkB,CAACY,UAAD,EAAaH,MAAb,EAAqBC,SAArB,CAAzB;AACH;AAED,OAAO,MAAMG,sBAAsB,GAAIC,IAAD,IAA4D,MAAOC,QAAP,IAA8B;AAC5H,SAAO,MAAMhB,iBAAiB,CAACG,UAAD,EAAaa,QAAb,EAAuB,EAAE,GAAGb,UAAL;AAAiBc,IAAAA,aAAa,EAAE;AAAEF,MAAAA;AAAF;AAAhC,GAAvB,CAA9B;AACH,CAFM","sourcesContent":["import { Dispatch } from \"redux\";\r\nimport { AppThunk } from \"../..\";\r\n\r\nimport { apiList } from \"../../actionNames\";\r\nimport initDefaultAction, { APIResponseDetail } from \"../../helper/default-action\";\r\nimport initDefaultReducer from \"../../helper/default-reducer\";\r\nimport initialState from \"../../helper/default-state\";\r\n\r\nexport interface ComponentLogsType {\r\n  id: number;\r\n  component: number;\r\n  maintenance_date: string;\r\n  possible_failure: string;\r\n  maintenance_action: string;\r\n  duration: number;\r\n  cost_total: number;\r\n  labour_cost: number;\r\n  material_cost: number;\r\n  replacement_cost: number;\r\n  componant_picture: number;\r\n  supply_belt: number;\r\n  remarks: string;\r\n  log_type: \"Issue\" | \"Maintenance\";\r\n}\r\n \r\n\r\nconst apiDetails = Object.freeze(apiList.componentLogs.getComponentLogs);\r\n\r\nexport default function getComponentLogsReducer(state = initialState, action: DefaultAction): DefaultState<ComponentLogsType[]> {\r\n    const stateCopy = Object.assign({}, state);\r\n    const actionName = apiDetails.actionName;\r\n\r\n    return initDefaultReducer(actionName, action, stateCopy);\r\n}\r\n\r\nexport const getComponentLogsAction = (lang): AppThunk<APIResponseDetail<ComponentLogsType[]>> => async (dispatch: Dispatch) => {\r\n    return await initDefaultAction(apiDetails, dispatch, { ...apiDetails, pathVariables: { lang } });\r\n};"]},"metadata":{},"sourceType":"module"}