{"ast":null,"code":"import _slicedToArray from\"C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{Fragment,useCallback,useEffect,useState}from\"react\";import{parsedDateInitialValue,executionDelegation,parseBSDate,stitchDate,ADToBS}from\"../Datepickerutils\";import CalenderController from\"./components/CalenderController\";import{DayPicker}from\"./components/DayPicker\";var Calender=function Calender(_ref){var value=_ref.value,events=_ref.events,minDate=_ref.minDate,maxDate=_ref.maxDate;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isInitialized=_useState2[0],setIsInitialized=_useState2[1];var _useState3=useState(parsedDateInitialValue),_useState4=_slicedToArray(_useState3,2),selectedDate=_useState4[0],setSelectedDate=_useState4[1];var _useState5=useState(parsedDateInitialValue),_useState6=_slicedToArray(_useState5,2),calenderDate=_useState6[0],setCalenderDate=_useState6[1];useEffect(function(){var parsedDateValue=parseBSDate(value||ADToBS(new Date()));setSelectedDate(parsedDateValue);setCalenderDate(parsedDateValue);setIsInitialized(true);},[value]);useEffect(function(){if(minDate.year&&minDate.month&&minDate.day){var parsedDateValue=parseBSDate(minDate.year+\"-\"+minDate.month+\"-\"+minDate.day);!value&&setSelectedDate(parsedDateValue);!value&&setCalenderDate(parsedDateValue);}},[minDate,value]);var onPreviousMonthHandler=useCallback(function(){executionDelegation(function(){setCalenderDate(function(date){var year=date.bsYear;var month=date.bsMonth-1;if(month<1){month=12;year--;}return parseBSDate(stitchDate({day:date.bsDay,month:month,year:year},\"-\"));});},function(){if(events.previousMonthSelect){events.previousMonthSelect({month:calenderDate.bsMonth,year:calenderDate.bsYear});}});},[calenderDate.bsMonth,calenderDate.bsYear,events]);var onNextMonthClickHandler=useCallback(function(){executionDelegation(function(){setCalenderDate(function(date){var year=date.bsYear;var month=date.bsMonth+1;if(month>12){month=1;year++;}return parseBSDate(stitchDate({day:date.bsDay,month:month,year:year},\"-\"));});},function(){if(events.nextMonthSelect){events.nextMonthSelect({year:calenderDate.bsYear,month:calenderDate.bsMonth});}});},[calenderDate.bsMonth,calenderDate.bsYear,events]);var onTodayClickHandler=useCallback(function(){var today=parseBSDate(ADToBS(new Date()));executionDelegation(function(){setCalenderDate(today);setSelectedDate(today);},function(){if(events.todaySelect){events.todaySelect({year:today.bsYear,month:today.bsMonth,day:today.bsDay});}// OnChange\nevents.change&&events.change(ADToBS(new Date()));});},[]);var onYearSelectHandler=useCallback(function(year){executionDelegation(function(){setCalenderDate(parseBSDate(stitchDate({year:year,month:calenderDate.bsMonth,day:calenderDate.bsDay})));},function(){if(events.yearSelect){events.yearSelect(year);}});},[calenderDate]);var onMonthSelectHandler=useCallback(function(month){executionDelegation(function(){setCalenderDate(parseBSDate(stitchDate({year:calenderDate.bsYear,month:month,day:calenderDate.bsDay})));},function(){if(events.monthSelect){events.monthSelect(month);}});},[calenderDate]);var onDaySelectHandler=useCallback(function(date){executionDelegation(function(){var newDate=parseBSDate(stitchDate(date));setCalenderDate(newDate);setSelectedDate(newDate);},function(){if(events.daySelect){events.daySelect(date);}// OnChange\nevents.change&&events.change(stitchDate(date));});},[]);return/*#__PURE__*/React.createElement(\"div\",{className:\"calender\"},/*#__PURE__*/React.createElement(\"div\",{className:\"calendar-wrapper\"},isInitialized&&/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(CalenderController,{onPreviousMonth:onPreviousMonthHandler,onNextMonth:onNextMonthClickHandler,calenderDate:calenderDate,onToday:onTodayClickHandler,onYearSelect:onYearSelectHandler,onMonthSelect:onMonthSelectHandler,minDate:minDate,maxDate:maxDate}),/*#__PURE__*/React.createElement(DayPicker,{selectedDate:selectedDate,calenderDate:calenderDate,onDaySelect:onDaySelectHandler,minDate:minDate,maxDate:maxDate}))));};export default Calender;","map":null,"metadata":{},"sourceType":"module"}