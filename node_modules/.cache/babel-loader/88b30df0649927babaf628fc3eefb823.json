{"ast":null,"code":"var _jsxFileName = \"E:\\\\Smart Tech Solution\\\\React JS\\\\react-project\\\\src\\\\core\\\\Protected\\\\Maintainance\\\\ComponentLogs\\\\ManageComponentLogs\\\\Form.tsx\",\n    _s = $RefreshSig$();\n\nimport NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\nimport Button from \"components/UI/Forms/Buttons\";\nimport { useFormik } from \"formik\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { getComponentInfoAction } from \"store/modules/componentInfo/getComponentInfo\";\nimport { getComponentLogsAction } from \"store/modules/componentLogs/getComponentLogs\";\nimport { postComponentLogsAction } from \"store/modules/componentLogs/postComponentLogs\";\nimport { updateComponentLogsAction } from \"store/modules/componentLogs/updateComponentLogs\";\nimport { getDashboardComponentInfoAction } from \"store/modules/maintainance/dashboardComponentInfo\";\nimport { getSupplyBeltsAction } from \"store/modules/supplyBelts/getWaterSupplyBelts\";\nimport formatDate from \"utils/utilsFunction/date-converter\";\nimport * as Yup from \"yup\";\nconst LOG_TYPE_OPTIONS = [{\n  label: \"Maintenance\",\n  value: \"Maintenance\"\n}, {\n  label: \"Issue\",\n  value: \"Issue\"\n}];\nconst validationSchema = Yup.object({\n  component: Yup.mixed().nullable().required(\"This field is required\"),\n  log_type: Yup.mixed().nullable().required(\"This field is required\"),\n  maintenance_date: Yup.string().required(\"This field is required\"),\n  possible_failure: Yup.string().required(\"This field is required\"),\n  maintenance_action: Yup.string().required(\"This field is required\"),\n  duration: Yup.string().required(\"This field is required\"),\n  cost_total: Yup.string().required(\"This field is required\"),\n  labour_cost: Yup.string().required(\"This field is required\"),\n  material_cost: Yup.string().required(\"This field is required\"),\n  replacement_cost: Yup.string().required(\"This field is required\"),\n  remarks: Yup.string().required(\"This field is required\").nullable()\n});\n\nconst ComponentLists = props => {\n  _s();\n\n  var _props$scheme2;\n\n  const {\n    t\n  } = useTranslation();\n  const [initialData, setInitialData] = React.useState({\n    component: null,\n    log_type: null,\n    maintenance_date: \"\",\n    possible_failure: \"\",\n    maintenance_action: \"\",\n    duration: \"\",\n    cost_total: 0,\n    labour_cost: 0,\n    material_cost: 0,\n    replacement_cost: 0,\n    remarks: \"\",\n    is_cost_seggregated: false\n  });\n  const {\n    values,\n    errors,\n    touched,\n    setFieldTouched,\n    setFieldValue,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = useFormik({\n    enableReinitialize: true,\n    initialValues: initialData,\n    validationSchema: validationSchema,\n    onSubmit: async (values, _ref) => {\n      var _values$component;\n\n      let {\n        resetForm\n      } = _ref;\n      let response;\n      const requestData = { ...values,\n        component: (_values$component = values.component) === null || _values$component === void 0 ? void 0 : _values$component.value,\n        cost_total: values !== null && values !== void 0 && values.is_cost_seggregated ? Number(values === null || values === void 0 ? void 0 : values.material_cost) + Number(values === null || values === void 0 ? void 0 : values.replacement_cost) + Number(values === null || values === void 0 ? void 0 : values.labour_cost) : values === null || values === void 0 ? void 0 : values.cost_total\n      };\n\n      if (props.editData) {\n        response = await props.updateComponentLogsAction(props.language, props.editData.id, requestData);\n      } else {\n        response = await props.postComponentLogsAction(props.language, requestData);\n      }\n\n      if (response.status === 201 || response.status === 200) {\n        if (response.status === 201) {\n          resetForm();\n          toast.success(t(\"home:postSuccess\"));\n        } else {\n          setInitialData({\n            component: null,\n            log_type: null,\n            maintenance_date: \"\",\n            possible_failure: \"\",\n            maintenance_action: \"\",\n            duration: \"\",\n            cost_total: 0,\n            labour_cost: 0,\n            material_cost: 0,\n            replacement_cost: 0,\n            remarks: \"\",\n            is_cost_seggregated: false\n          });\n          toast.success(t(\"home:updateSuccess\"));\n        }\n\n        props.setEditData(null);\n        props.toggle();\n        props.getComponentLogsAction(props.language);\n      } else {\n        var _Object$values;\n\n        const errors = (_Object$values = Object.values(response.data)) === null || _Object$values === void 0 ? void 0 : _Object$values.map(item => {\n          toast.error(item[0]);\n        });\n      }\n    }\n  });\n  React.useEffect(() => {\n    if (props.scheme) {\n      var _props$scheme;\n\n      props.getDashboardComponentInfoAction(props.language, (_props$scheme = props.scheme) === null || _props$scheme === void 0 ? void 0 : _props$scheme.slug);\n    }\n  }, [props.scheme]);\n  React.useEffect(() => {\n    if (props.editData) {\n      var _props$editData, _props$editData2, _props$editData3, _props$editData4;\n\n      const editData = { ...props.editData,\n        cost_total: ((_props$editData = props.editData) === null || _props$editData === void 0 ? void 0 : _props$editData.cost_total) || 0,\n        labour_cost: ((_props$editData2 = props.editData) === null || _props$editData2 === void 0 ? void 0 : _props$editData2.labour_cost) || 0,\n        material_cost: ((_props$editData3 = props.editData) === null || _props$editData3 === void 0 ? void 0 : _props$editData3.material_cost) || 0,\n        replacement_cost: ((_props$editData4 = props.editData) === null || _props$editData4 === void 0 ? void 0 : _props$editData4.replacement_cost) || 0,\n        component: {\n          value: props.editData.component,\n          label: props.editData.component_name\n        }\n      };\n      delete editData.componant_picture;\n      delete editData.supply_belt;\n      setInitialData(editData);\n    }\n  }, [props.editData]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row rate_form align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, t(\"maintainance:component\")), /*#__PURE__*/React.createElement(StyledSelect, {\n    name: \"component\",\n    options: props.componentInfoOptions || [],\n    value: values.component,\n    onChange: _ref2 => {\n      let {\n        name,\n        value\n      } = _ref2;\n      setFieldValue(name, value);\n    },\n    onBlur: () => {\n      setFieldTouched(\"component\", true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"component\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, t(\"maintainance:logType\")), /*#__PURE__*/React.createElement(StyledSelect, {\n    name: \"log_type\",\n    options: LOG_TYPE_OPTIONS,\n    value: (LOG_TYPE_OPTIONS === null || LOG_TYPE_OPTIONS === void 0 ? void 0 : LOG_TYPE_OPTIONS.find(opt => opt.label === (values === null || values === void 0 ? void 0 : values.log_type))) || null,\n    onChange: _ref3 => {\n      let {\n        name,\n        value\n      } = _ref3;\n      setFieldValue(name, value && value[\"value\"]);\n    },\n    onBlur: () => {\n      setFieldTouched(\"log_type\", true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"log_type\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, t(\"home:maintainance\"), \" \", t(\"home:date\"), \" :\"), ((_props$scheme2 = props.scheme) === null || _props$scheme2 === void 0 ? void 0 : _props$scheme2.system_date_format) === \"nep\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NepaliDatePicker, {\n    value: values.maintenance_date,\n    name: \"maintenance_date\",\n    onChange: e => {\n      setFieldValue(\"date\", e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EnglishDatePicker, {\n    name: \"maintenance_date\",\n    value: values.maintenance_date,\n    handleChange: e => {\n      setFieldValue(\"maintenance_date\", formatDate(e));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"maintenance_date\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, t(\"finance:possibleFailure\"), \" :\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"possible_failure\",\n    value: values.possible_failure,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"possible_failure\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, t(\"home:maintainance\"), \" \", t(\"home:action\"), \" :\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"maintenance_action\",\n    value: values.maintenance_action,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"maintenance_action\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, t(\"home:duration\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"duration\",\n    value: values.duration,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"duration\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomCheckBox, {\n    id: \"is_cost_seggregated\",\n    label: t(\"finance:icCostSegregated\"),\n    checked: values.is_cost_seggregated,\n    onChange: e => setFieldValue(\"is_cost_seggregated\", e.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"is_cost_seggregated\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }))), !values.is_cost_seggregated && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 15\n    }\n  }, t(\"home:total\"), \" \", t(\"home:cost\"), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"cost_total\",\n    value: values.cost_total,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"cost_total\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }))), values.is_cost_seggregated && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 15\n    }\n  }, t(\"home:labor\"), \" \", t(\"home:cost\"), \" :\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"labour_cost\",\n    value: values.labour_cost,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"labour_cost\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 15\n    }\n  }))), values.is_cost_seggregated && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 15\n    }\n  }, t(\"home:material\"), \" \", t(\"home:cost\"), \" :\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"material_cost\",\n    value: values.material_cost,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"material_cost\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 15\n    }\n  }))), values.is_cost_seggregated && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  }, t(\"home:replacement\"), \" \", t(\"home:cost\"), \" :\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"replacement_cost\",\n    value: values.replacement_cost,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"replacement_cost\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }, t(\"finance:remarks\"), \" :\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"remarks\",\n    value: values.remarks,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"remarks\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 mt-2 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn mr-2\",\n    text: t(\"home:save\"),\n    type: \"submit\",\n    disabled: props.postLoading || props.updateLoading,\n    loading: props.postLoading || props.updateLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn-outlined mr-3\",\n    text: t(\"home:cancel\"),\n    onClick: () => props.toggle(),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(ComponentLists, \"Uq9n60AjDDR1xbG7av+o/8MHeXw=\", false, function () {\n  return [useTranslation, useFormik];\n});\n\n_c = ComponentLists;\n\nconst mapStateToProps = state => {\n  var _state$maintainanceDa;\n\n  return {\n    language: state.i18nextData.languageType,\n    postLoading: state.componentLogs.postComponentLogs.isFetching,\n    updateLoading: state.componentLogs.updateComponentLogs.isFetching,\n    scheme: state.waterSchemeData.waterSchemeDetailsData.data,\n    componentInfoOptions: (_state$maintainanceDa = state.maintainanceData.dashboardComponentInfoData.data) === null || _state$maintainanceDa === void 0 ? void 0 : _state$maintainanceDa.map(item => {\n      var _item$component, _item$component2;\n\n      return {\n        label: item === null || item === void 0 ? void 0 : (_item$component = item.component) === null || _item$component === void 0 ? void 0 : _item$component.name,\n        value: item === null || item === void 0 ? void 0 : (_item$component2 = item.component) === null || _item$component2 === void 0 ? void 0 : _item$component2.id\n      };\n    })\n  };\n};\n\nconst mapDispatchToProps = {\n  postComponentLogsAction: postComponentLogsAction,\n  updateComponentLogsAction: updateComponentLogsAction,\n  getComponentInfoAction: getComponentInfoAction,\n  getSupplyBeltsAction: getSupplyBeltsAction,\n  getComponentLogsAction: getComponentLogsAction,\n  getDashboardComponentInfoAction: getDashboardComponentInfoAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(ComponentLists);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ComponentLists\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/core/Protected/Maintainance/ComponentLogs/ManageComponentLogs/Form.tsx"],"names":["NepaliDatePicker","EnglishDatePicker","FormikValidationError","StyledSelect","toast","CustomCheckBox","Button","useFormik","React","useTranslation","connect","getComponentInfoAction","getComponentLogsAction","postComponentLogsAction","updateComponentLogsAction","getDashboardComponentInfoAction","getSupplyBeltsAction","formatDate","Yup","LOG_TYPE_OPTIONS","label","value","validationSchema","object","component","mixed","nullable","required","log_type","maintenance_date","string","possible_failure","maintenance_action","duration","cost_total","labour_cost","material_cost","replacement_cost","remarks","ComponentLists","props","t","initialData","setInitialData","useState","is_cost_seggregated","values","errors","touched","setFieldTouched","setFieldValue","handleChange","handleBlur","handleSubmit","enableReinitialize","initialValues","onSubmit","resetForm","response","requestData","Number","editData","language","id","status","success","setEditData","toggle","Object","data","map","item","error","useEffect","scheme","slug","component_name","componant_picture","supply_belt","e","preventDefault","componentInfoOptions","name","find","opt","system_date_format","target","checked","postLoading","updateLoading","mapStateToProps","state","i18nextData","languageType","componentLogs","postComponentLogs","isFetching","updateComponentLogs","waterSchemeData","waterSchemeDetailsData","maintainanceData","dashboardComponentInfoData","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getComponentInfoAction } from \"store/modules/componentInfo/getComponentInfo\";\r\nimport { getComponentLogsAction } from \"store/modules/componentLogs/getComponentLogs\";\r\nimport { postComponentLogsAction } from \"store/modules/componentLogs/postComponentLogs\";\r\nimport { updateComponentLogsAction } from \"store/modules/componentLogs/updateComponentLogs\";\r\nimport { getDashboardComponentInfoAction } from \"store/modules/maintainance/dashboardComponentInfo\";\r\nimport { getSupplyBeltsAction } from \"store/modules/supplyBelts/getWaterSupplyBelts\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport formatDate from \"utils/utilsFunction/date-converter\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst LOG_TYPE_OPTIONS = [\r\n  {\r\n    label: \"Maintenance\",\r\n    value: \"Maintenance\",\r\n  },\r\n  {\r\n    label: \"Issue\",\r\n    value: \"Issue\",\r\n  },\r\n];\r\n\r\nconst validationSchema = Yup.object({\r\n  component: Yup.mixed().nullable().required(\"This field is required\"),\r\n  log_type: Yup.mixed().nullable().required(\"This field is required\"),\r\n  maintenance_date: Yup.string().required(\"This field is required\"),\r\n  possible_failure: Yup.string().required(\"This field is required\"),\r\n  maintenance_action: Yup.string().required(\"This field is required\"),\r\n  duration: Yup.string().required(\"This field is required\"),\r\n  cost_total: Yup.string().required(\"This field is required\"),\r\n  labour_cost: Yup.string().required(\"This field is required\"),\r\n  material_cost: Yup.string().required(\"This field is required\"),\r\n  replacement_cost: Yup.string().required(\"This field is required\"),\r\n  remarks: Yup.string().required(\"This field is required\").nullable(),\r\n});\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  setEditData: any;\r\n  toggle: any;\r\n}\r\n\r\nconst ComponentLists = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [initialData, setInitialData] = React.useState({\r\n    component: null as null | OptionType,\r\n    log_type: null as null | OptionType,\r\n    maintenance_date: \"\",\r\n    possible_failure: \"\",\r\n    maintenance_action: \"\",\r\n    duration: \"\",\r\n    cost_total: 0,\r\n    labour_cost: 0,\r\n    material_cost: 0,\r\n    replacement_cost: 0,\r\n    remarks: \"\",\r\n    is_cost_seggregated: false,\r\n  });\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      let response;\r\n      const requestData = {\r\n        ...values,\r\n        component: values.component?.value,\r\n        cost_total: values?.is_cost_seggregated\r\n          ? Number(values?.material_cost) +\r\n            Number(values?.replacement_cost) +\r\n            Number(values?.labour_cost)\r\n          : values?.cost_total,\r\n      };\r\n\r\n      if (props.editData) {\r\n        response = await props.updateComponentLogsAction(\r\n          props.language,\r\n          props.editData.id,\r\n          requestData\r\n        );\r\n      } else {\r\n        response = await props.postComponentLogsAction(props.language, requestData);\r\n      }\r\n\r\n      if (response.status === 201 || response.status === 200) {\r\n        if (response.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          setInitialData({\r\n            component: null as null | OptionType,\r\n            log_type: null as null | OptionType,\r\n            maintenance_date: \"\",\r\n            possible_failure: \"\",\r\n            maintenance_action: \"\",\r\n            duration: \"\",\r\n            cost_total: 0,\r\n            labour_cost: 0,\r\n            material_cost: 0,\r\n            replacement_cost: 0,\r\n            remarks: \"\",\r\n            is_cost_seggregated: false,\r\n          });\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n        props.setEditData(null);\r\n        props.toggle();\r\n        props.getComponentLogsAction(props.language);\r\n      } else {\r\n        const errors = Object.values(response.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.scheme) {\r\n      props.getDashboardComponentInfoAction(props.language, props.scheme?.slug);\r\n    }\r\n  }, [props.scheme]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      const editData = {\r\n        ...props.editData,\r\n        cost_total: props.editData?.cost_total || 0,\r\n        labour_cost: props.editData?.labour_cost || 0,\r\n        material_cost: props.editData?.material_cost || 0,\r\n        replacement_cost: props.editData?.replacement_cost || 0,\r\n        component: { value: props.editData.component, label: props.editData.component_name },\r\n      };\r\n      delete editData.componant_picture;\r\n      delete editData.supply_belt;\r\n      setInitialData(editData);\r\n    }\r\n  }, [props.editData]);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row rate_form align-items-center\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"maintainance:component\")}\r\n            </label>\r\n\r\n            <StyledSelect\r\n              name=\"component\"\r\n              options={props.componentInfoOptions || []}\r\n              value={values.component}\r\n              onChange={({ name, value }) => {\r\n                setFieldValue(name, value);\r\n              }}\r\n              onBlur={() => {\r\n                setFieldTouched(\"component\", true);\r\n              }}\r\n            />\r\n            <FormikValidationError name=\"component\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"maintainance:logType\")}\r\n            </label>\r\n\r\n            <StyledSelect\r\n              name=\"log_type\"\r\n              options={LOG_TYPE_OPTIONS}\r\n              value={LOG_TYPE_OPTIONS?.find((opt: any) => opt.label === values?.log_type) || null}\r\n              onChange={({ name, value }) => {\r\n                setFieldValue(name, value && value[\"value\"]);\r\n              }}\r\n              onBlur={() => {\r\n                setFieldTouched(\"log_type\", true);\r\n              }}\r\n            />\r\n            <FormikValidationError name=\"log_type\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:maintainance\")} {t(\"home:date\")} :\r\n            </label>\r\n\r\n            {props.scheme?.system_date_format === \"nep\" ? (\r\n              <>\r\n                <NepaliDatePicker\r\n                  value={values.maintenance_date}\r\n                  name=\"maintenance_date\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"date\", e);\r\n                  }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <EnglishDatePicker\r\n                  name=\"maintenance_date\"\r\n                  value={values.maintenance_date}\r\n                  handleChange={(e) => {\r\n                    setFieldValue(\"maintenance_date\", formatDate(e));\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n            <FormikValidationError name=\"maintenance_date\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"finance:possibleFailure\")} :\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"possible_failure\"\r\n              value={values.possible_failure}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"possible_failure\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:maintainance\")} {t(\"home:action\")} :\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"maintenance_action\"\r\n              value={values.maintenance_action}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"maintenance_action\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:duration\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"duration\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"form-group \">\r\n            <CustomCheckBox\r\n              id={\"is_cost_seggregated\"}\r\n              label={t(\"finance:icCostSegregated\")}\r\n              checked={values.is_cost_seggregated}\r\n              onChange={(e) => setFieldValue(\"is_cost_seggregated\", e.target.checked)}\r\n            />\r\n\r\n            <FormikValidationError name=\"is_cost_seggregated\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        {!values.is_cost_seggregated && (\r\n          <div className=\"col-md-4\">\r\n            <div className=\"form-group \">\r\n              <label htmlFor=\"\" className=\"mr-1 \">\r\n                {t(\"home:total\")} {t(\"home:cost\")}:\r\n              </label>\r\n\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"cost_total\"\r\n                value={values.cost_total}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              <FormikValidationError name=\"cost_total\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {values.is_cost_seggregated && (\r\n          <div className=\"col-md-4\">\r\n            <div className=\"form-group \">\r\n              <label htmlFor=\"\" className=\"mr-1 \">\r\n                {t(\"home:labor\")} {t(\"home:cost\")} :\r\n              </label>\r\n\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"labour_cost\"\r\n                value={values.labour_cost}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              <FormikValidationError name=\"labour_cost\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {values.is_cost_seggregated && (\r\n          <div className=\"col-md-4\">\r\n            <div className=\"form-group \">\r\n              <label htmlFor=\"\" className=\"mr-1 \">\r\n                {t(\"home:material\")} {t(\"home:cost\")} :\r\n              </label>\r\n\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"material_cost\"\r\n                value={values.material_cost}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              <FormikValidationError name=\"material_cost\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {values.is_cost_seggregated && (\r\n          <div className=\"col-md-4\">\r\n            <div className=\"form-group \">\r\n              <label htmlFor=\"\" className=\"mr-1 \">\r\n                {t(\"home:replacement\")} {t(\"home:cost\")} :\r\n              </label>\r\n\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"replacement_cost\"\r\n                value={values.replacement_cost}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              <FormikValidationError name=\"replacement_cost\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"finance:remarks\")} :\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"remarks\"\r\n              value={values.remarks}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"remarks\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 mt-2 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn mr-2\"\r\n            text={t(\"home:save\")}\r\n            type=\"submit\"\r\n            disabled={props.postLoading || props.updateLoading}\r\n            loading={props.postLoading || props.updateLoading}\r\n          />\r\n          <Button\r\n            className=\"btn custom-btn-outlined mr-3\"\r\n            text={t(\"home:cancel\")}\r\n            onClick={() => props.toggle()}\r\n            type=\"button\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  postLoading: state.componentLogs.postComponentLogs.isFetching,\r\n  updateLoading: state.componentLogs.updateComponentLogs.isFetching,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  componentInfoOptions: state.maintainanceData.dashboardComponentInfoData.data?.map((item) => ({\r\n    label: item?.component?.name,\r\n    value: item?.component?.id,\r\n  })),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postComponentLogsAction: postComponentLogsAction,\r\n  updateComponentLogsAction: updateComponentLogsAction,\r\n  getComponentInfoAction: getComponentInfoAction,\r\n  getSupplyBeltsAction: getSupplyBeltsAction,\r\n  getComponentLogsAction: getComponentLogsAction,\r\n  getDashboardComponentInfoAction: getDashboardComponentInfoAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(ComponentLists);\r\n"]},"metadata":{},"sourceType":"module"}