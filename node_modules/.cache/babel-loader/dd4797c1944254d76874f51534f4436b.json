{"ast":null,"code":"var _jsxFileName = \"E:\\\\Smart Tech Solution\\\\React JS\\\\react-project\\\\src\\\\core\\\\Protected\\\\Finance\\\\OtherExpense\\\\ManageOtherExpenses\\\\Form.tsx\",\n    _s = $RefreshSig$();\n\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\nimport { useFormik } from \"formik\";\nimport React from \"react\";\nimport Button from \"components/UI/Forms/Buttons\";\nimport { connect } from \"react-redux\";\nimport { postOtherExpensesAction } from \"store/modules/otherExpenses/postOtherExpenses\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport { updateOtherExpensesAction } from \"store/modules/otherExpenses/updateOtherExpenses\";\nimport { getOtherExpensesAction } from \"store/modules/otherExpenses/getOtherExpenses\";\nimport * as Yup from \"yup\";\nimport { useTranslation } from \"react-i18next\";\nimport NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\nimport formatDate from \"utils/utilsFunction/date-converter\";\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\nimport { EXPENSE_CATTEGORY } from \"constants/constants\";\nimport CustomRadio from \"components/UI/CustomRadio\";\nimport TooltipLabel from \"components/UI/TooltipLabel\";\nconst validationSchema = Yup.object({\n  apply_date: Yup.string().required(\"This field is required\"),\n  title: Yup.string().required(\"This field is required\"),\n  yearly_expense: Yup.string().required(\"This field is required\"),\n  category: Yup.string().required(\"This field is required\"),\n  apply_for_specific_date: Yup.boolean().required(\"This field is required\")\n});\n\nconst OtherExpenseForm = props => {\n  _s();\n\n  var _props$scheme;\n\n  const {\n    t\n  } = useTranslation();\n  const [initialData, setInitialData] = React.useState({\n    apply_date: \"\",\n    category: \"\",\n    title: \"\",\n    yearly_expense: \"\",\n    apply_for_specific_date: true,\n    one_time_cost: true\n  });\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    setFieldValue,\n    setFieldTouched\n  } = useFormik({\n    enableReinitialize: true,\n    initialValues: initialData,\n    validationSchema: validationSchema,\n    onSubmit: async (values, _ref) => {\n      let {\n        resetForm\n      } = _ref;\n      let response;\n\n      if (props.editData) {\n        response = await props.updateOtherExpensesAction(props.language, props.editData.id, values);\n      } else {\n        response = await props.postOtherExpensesAction(props.language, values);\n      }\n\n      if (response.status === 201 || response.status === 200) {\n        if (response.status === 201) {\n          resetForm();\n          toast.success(t(\"home:postSuccess\"));\n          props.getOtherExpensesAction(props.language);\n        } else {\n          setInitialData({\n            apply_date: \"\",\n            category: \"\",\n            title: \"\",\n            yearly_expense: \"\",\n            apply_for_specific_date: true,\n            one_time_cost: true\n          });\n          props.getOtherExpensesAction(props.language);\n          toast.success(t(\"home:updateSuccess\"));\n        }\n      }\n    }\n  });\n  React.useEffect(() => {\n    if (props.editData) {\n      setInitialData({ ...props.editData\n      });\n    }\n  }, [props.editData]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row rate_form align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, t(\"finance:applyDate\"), \" \", /*#__PURE__*/React.createElement(TooltipLabel, {\n    id: \"apd\",\n    text: `The date from which this record  should be applied to the system.`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }), \":\"), ((_props$scheme = props.scheme) === null || _props$scheme === void 0 ? void 0 : _props$scheme.system_date_format) === \"nep\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NepaliDatePicker, {\n    value: values.apply_date,\n    name: \"apply_date\",\n    onChange: e => {\n      setFieldValue(\"apply_date\", e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EnglishDatePicker, {\n    name: \"apply_date\",\n    value: values.apply_date,\n    handleChange: e => {\n      setFieldValue(\"apply_date\", formatDate(e));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"date\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, t(\"finance:expenseHeading\"), \" :\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"title\",\n    value: values.title,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"title\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, t(\"finance:yearlyExpnd\"), \" :\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"yearly_expense\",\n    type: \"number\",\n    value: values.yearly_expense,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"yearly_expense\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, t(\"finance:transactionType\"), \" :\"), /*#__PURE__*/React.createElement(StyledSelect, {\n    name: \"category\",\n    value: (EXPENSE_CATTEGORY === null || EXPENSE_CATTEGORY === void 0 ? void 0 : EXPENSE_CATTEGORY.find(item => item.value === values.category)) || null,\n    options: EXPENSE_CATTEGORY,\n    onChange: _ref2 => {\n      let {\n        name,\n        value\n      } = _ref2;\n      setFieldValue(name, value === null || value === void 0 ? void 0 : value.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"yearly_expense\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, t(\"finance:afsd\"), \" :\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CustomRadio, {\n    label: \"Yes\",\n    id: \"yes\",\n    name: \"apply_for_specific_date\",\n    value: 1,\n    checked: values.apply_for_specific_date === true,\n    onChange: e => setFieldValue(\"apply_for_specific_date\", true),\n    tooltipData: \"If yes, the transaction will not be distributed for months\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CustomRadio, {\n    label: \"No\",\n    id: \"no\",\n    name: \"apply_for_specific_date\",\n    value: 2,\n    checked: values.apply_for_specific_date === false,\n    onChange: e => setFieldValue(\"apply_for_specific_date\", false),\n    tooltipData: \"If no, the transaction will be distributed every months\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"yearly_expense\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, t(\"finance:oneTimeCost\"), \" :\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CustomRadio, {\n    label: \"Yes\",\n    id: \"yesOTC\",\n    name: \"one_time_cost\",\n    value: 1,\n    checked: values.one_time_cost === true,\n    onChange: e => setFieldValue(\"one_time_cost\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CustomRadio, {\n    label: \"No\",\n    id: \"noOTC\",\n    name: \"one_time_cost\",\n    value: 2,\n    checked: values.one_time_cost === false,\n    onChange: e => setFieldValue(\"one_time_cost\", false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"yearly_expense\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 mt-2 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn\",\n    text: t(\"home:save\"),\n    type: \"submit\",\n    disabled: props.postLoading || props.updateLoading,\n    loading: props.postLoading || props.updateLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(OtherExpenseForm, \"ROzY0xeEHuKb/ZJAjeYrsJOFOFw=\", false, function () {\n  return [useTranslation, useFormik];\n});\n\n_c = OtherExpenseForm;\n\nconst mapStateToProps = state => ({\n  language: state.i18nextData.languageType,\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\n  postLoading: state.otherExpensesData.postTestParameters.isFetching,\n  updateLoading: state.otherExpensesData.updateTestParameters.isFetching\n});\n\nconst mapDispatchToProps = {\n  postOtherExpensesAction: postOtherExpensesAction,\n  updateOtherExpensesAction: updateOtherExpensesAction,\n  getOtherExpensesAction: getOtherExpensesAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(OtherExpenseForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OtherExpenseForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/core/Protected/Finance/OtherExpense/ManageOtherExpenses/Form.tsx"],"names":["FormikValidationError","useFormik","React","Button","connect","postOtherExpensesAction","toast","updateOtherExpensesAction","getOtherExpensesAction","Yup","useTranslation","NepaliDatePicker","formatDate","EnglishDatePicker","StyledSelect","EXPENSE_CATTEGORY","CustomRadio","TooltipLabel","validationSchema","object","apply_date","string","required","title","yearly_expense","category","apply_for_specific_date","boolean","OtherExpenseForm","props","t","initialData","setInitialData","useState","one_time_cost","values","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","setFieldTouched","enableReinitialize","initialValues","onSubmit","resetForm","response","editData","language","id","status","success","useEffect","e","preventDefault","scheme","system_date_format","find","item","value","name","postLoading","updateLoading","mapStateToProps","state","i18nextData","languageType","waterSchemeData","waterSchemeDetailsData","data","otherExpensesData","postTestParameters","isFetching","updateTestParameters","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport { Form, useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { postOtherExpensesAction } from \"store/modules/otherExpenses/postOtherExpenses\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport { updateOtherExpensesAction } from \"store/modules/otherExpenses/updateOtherExpenses\";\r\nimport { getOtherExpensesAction } from \"store/modules/otherExpenses/getOtherExpenses\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport formatDate from \"utils/utilsFunction/date-converter\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\r\nimport { EXPENSE_CATTEGORY } from \"constants/constants\";\r\nimport CustomRadio from \"components/UI/CustomRadio\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\n\r\nconst validationSchema = Yup.object({\r\n  apply_date: Yup.string().required(\"This field is required\"),\r\n  title: Yup.string().required(\"This field is required\"),\r\n  yearly_expense: Yup.string().required(\"This field is required\"),\r\n  category: Yup.string().required(\"This field is required\"),\r\n  apply_for_specific_date: Yup.boolean().required(\"This field is required\"),\r\n});\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n}\r\n\r\nconst OtherExpenseForm = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [initialData, setInitialData] = React.useState({\r\n    apply_date: \"\",\r\n    category: \"\" as OptionType | string,\r\n    title: \"\",\r\n    yearly_expense: \"\",\r\n    apply_for_specific_date: true,\r\n    one_time_cost: true,\r\n  });\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    setFieldTouched,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      let response;\r\n\r\n      if (props.editData) {\r\n        response = await props.updateOtherExpensesAction(props.language, props.editData.id, values);\r\n      } else {\r\n        response = await props.postOtherExpensesAction(props.language, values);\r\n      }\r\n\r\n      if (response.status === 201 || response.status === 200) {\r\n        if (response.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n          props.getOtherExpensesAction(props.language);\r\n        } else {\r\n          setInitialData({\r\n            apply_date: \"\",\r\n            category: \"\",\r\n            title: \"\",\r\n            yearly_expense: \"\",\r\n            apply_for_specific_date: true,\r\n            one_time_cost: true,\r\n          });\r\n          props.getOtherExpensesAction(props.language);\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      setInitialData({\r\n        ...props.editData,\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row rate_form align-items-center\">\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:applyDate\")}{\" \"}\r\n              <TooltipLabel id={\"apd\"} text={`The date from which this record  should be applied to the system.`} />:\r\n            </label>\r\n\r\n            {props.scheme?.system_date_format === \"nep\" ? (\r\n              <>\r\n                <NepaliDatePicker\r\n                  value={values.apply_date}\r\n                  name=\"apply_date\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"apply_date\", e);\r\n                  }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <EnglishDatePicker\r\n                  name=\"apply_date\"\r\n                  value={values.apply_date}\r\n                  handleChange={(e) => {\r\n                    setFieldValue(\"apply_date\", formatDate(e));\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n            <FormikValidationError name=\"date\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:expenseHeading\")} :\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"title\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:yearlyExpnd\")} :\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"yearly_expense\"\r\n              type=\"number\"\r\n              value={values.yearly_expense}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"yearly_expense\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:transactionType\")} :\r\n            </label>\r\n\r\n            <StyledSelect\r\n              name=\"category\"\r\n              value={EXPENSE_CATTEGORY?.find((item) => item.value === values.category) || null}\r\n              options={EXPENSE_CATTEGORY}\r\n              onChange={({ name, value }: any) => {\r\n                setFieldValue(name, value?.value);\r\n              }}\r\n            />\r\n            <FormikValidationError name=\"yearly_expense\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:afsd\")} :\r\n            </label>\r\n\r\n            <div className=\"d-flex\">\r\n              <div className=\"mr-2\">\r\n                <CustomRadio\r\n                  label={\"Yes\"}\r\n                  id=\"yes\"\r\n                  name=\"apply_for_specific_date\"\r\n                  value={1}\r\n                  checked={values.apply_for_specific_date === true}\r\n                  onChange={(e) => setFieldValue(\"apply_for_specific_date\", true)}\r\n                  tooltipData = \"If yes, the transaction will not be distributed for months\"\r\n                />\r\n              </div>\r\n              <div className=\"ml-2\">\r\n                <CustomRadio\r\n                  label={\"No\"}\r\n                  id=\"no\"\r\n                  name=\"apply_for_specific_date\"\r\n                  value={2}\r\n                  checked={values.apply_for_specific_date === false}\r\n                  onChange={(e) => setFieldValue(\"apply_for_specific_date\", false)}\r\n                  tooltipData= \"If no, the transaction will be distributed every months\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <FormikValidationError name=\"yearly_expense\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:oneTimeCost\")} :\r\n            </label>\r\n\r\n            <div className=\"d-flex\">\r\n              <div className=\"mr-2\">\r\n                <CustomRadio\r\n                  label={\"Yes\"}\r\n                  id=\"yesOTC\"\r\n                  name=\"one_time_cost\"\r\n                  value={1}\r\n                  checked={values.one_time_cost === true}\r\n                  onChange={(e) => setFieldValue(\"one_time_cost\", true)}\r\n                />\r\n              </div>\r\n              <div className=\"ml-2\">\r\n                <CustomRadio\r\n                  label={\"No\"}\r\n                  id=\"noOTC\"\r\n                  name=\"one_time_cost\"\r\n                  value={2}\r\n                  checked={values.one_time_cost === false}\r\n                  onChange={(e) => setFieldValue(\"one_time_cost\", false)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <FormikValidationError name=\"yearly_expense\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12 mt-2 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn\"\r\n            text={t(\"home:save\")}\r\n            type=\"submit\"\r\n            disabled={props.postLoading || props.updateLoading}\r\n            loading={props.postLoading || props.updateLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  postLoading: state.otherExpensesData.postTestParameters.isFetching,\r\n  updateLoading: state.otherExpensesData.updateTestParameters.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postOtherExpensesAction: postOtherExpensesAction,\r\n  updateOtherExpensesAction: updateOtherExpensesAction,\r\n  getOtherExpensesAction: getOtherExpensesAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(OtherExpenseForm);\r\n"]},"metadata":{},"sourceType":"module"}