{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\src\\\\core\\\\Public\\\\Service\\\\WaterTestResults\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport classnames from \"classnames\";\nimport { GeneralCard } from \"components/UI/GeneralCard\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Col, Nav, NavItem, NavLink, Row, TabContent, TabPane } from \"reactstrap\";\nimport { getWaterTestResultsAction } from \"store/modules/report/waterTestResults\";\nimport { getTestParametersAction } from \"store/modules/testParamters/getTestParameters\";\nimport VisualizationGraph from \"./VisualizationGraph\";\nimport VisualizationGraphThisYear from \"./VisualizationGraphThisYear\";\nimport { useTranslation } from \"react-i18next\";\n\nconst WaterTestResults = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation([\"home\", \"sidebar\"]);\n  const [activeTab, setActiveTab] = React.useState(\"1\");\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  React.useEffect(() => {\n    if (props.schemeSlug) {\n      props.getTestParametersAction(props.schemeSlug);\n    }\n  }, [props.schemeSlug]);\n  React.useEffect(() => {\n    if (props.schemeSlug) {\n      if (activeTab === \"1\") {\n        props.getWaterTestResultsAction(props.schemeSlug);\n      } else {\n        props.getWaterTestResultsAction(props.schemeSlug, true);\n      }\n    }\n  }, [props.language, activeTab, props.schemeSlug]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container py-3 cash-book\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GeneralCard, {\n    title: t(\"sidebar:qualityTestResult\"),\n    print: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === \"1\"\n    }),\n    onClick: () => {\n      toggle(\"1\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, t(\"home:allTime\"))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === \"2\"\n    }),\n    onClick: () => {\n      toggle(\"2\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, t(\"home:thisYear\")))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"info-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, t(\"home:allAmountInRupee\"), \" \", props.currency)), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, activeTab === \"1\" && /*#__PURE__*/React.createElement(VisualizationGraph, {\n    compareKey: \"year_from\",\n    defaultSelected: ['ph'],\n    type: \"Year\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, activeTab === \"2\" && /*#__PURE__*/React.createElement(VisualizationGraphThisYear, {\n    compareKey: \"month\",\n    defaultSelected: ['ph'],\n    type: \"Month\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }))))))));\n};\n\n_s(WaterTestResults, \"HPbWHx9KxOpKBDY3M7B2PzD1Xeo=\", false, function () {\n  return [useTranslation];\n});\n\n_c = WaterTestResults;\n\nconst mapStateToProps = state => {\n  var _state$waterSchemeDat, _state$waterSchemeDat2;\n\n  return {\n    language: state.i18nextData.languageType,\n    schemeSlug: (_state$waterSchemeDat = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat === void 0 ? void 0 : _state$waterSchemeDat.slug,\n    currency: (_state$waterSchemeDat2 = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat2 === void 0 ? void 0 : _state$waterSchemeDat2.currency\n  };\n};\n\nconst mapDispatchToProps = {\n  getWaterTestResultsAction: getWaterTestResultsAction,\n  getTestParametersAction: getTestParametersAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(WaterTestResults);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WaterTestResults\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/core/Public/Service/WaterTestResults/index.tsx"],"names":["classnames","GeneralCard","React","connect","Col","Nav","NavItem","NavLink","Row","TabContent","TabPane","getWaterTestResultsAction","getTestParametersAction","VisualizationGraph","VisualizationGraphThisYear","useTranslation","WaterTestResults","props","t","activeTab","setActiveTab","useState","toggle","tab","useEffect","schemeSlug","language","active","currency","mapStateToProps","state","i18nextData","languageType","waterSchemeData","waterSchemeDetailsData","data","slug","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import classnames from \"classnames\";\r\nimport { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  Col,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\nimport { getWaterTestResultsAction } from \"store/modules/report/waterTestResults\";\r\nimport { getTestParametersAction } from \"store/modules/testParamters/getTestParameters\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport VisualizationGraph from \"./VisualizationGraph\";\r\nimport VisualizationGraphThisYear from \"./VisualizationGraphThisYear\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst WaterTestResults = (props: Props) => {\r\n  const { t } = useTranslation([\"home\", \"sidebar\"]);\r\n\r\n  const [activeTab, setActiveTab] = React.useState(\"1\");\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      props.getTestParametersAction(props.schemeSlug);\r\n    }\r\n  }, [props.schemeSlug]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      if (activeTab === \"1\") {\r\n        props.getWaterTestResultsAction(props.schemeSlug);\r\n      } else {\r\n        props.getWaterTestResultsAction(props.schemeSlug, true);\r\n      }\r\n    }\r\n  }, [props.language, activeTab, props.schemeSlug]);\r\n\r\n  return (\r\n    <div className=\"container py-3 cash-book\">\r\n      <GeneralCard title={t(\"sidebar:qualityTestResult\")} print={true}>\r\n        <div className=\"cash-content\">\r\n          <div className=\"flex-between\">\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"1\" })}\r\n                  onClick={() => {\r\n                    toggle(\"1\");\r\n                  }}\r\n                >\r\n                  {t(\"home:allTime\")}\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"2\" })}\r\n                  onClick={() => {\r\n                    toggle(\"2\");\r\n                  }}\r\n                >\r\n                  {t(\"home:thisYear\")}\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <span className=\"info-text\">{t(\"home:allAmountInRupee\")} {props.currency}</span>\r\n          </div>\r\n\r\n          <TabContent activeTab={activeTab} className=\"mt-2\">\r\n            <TabPane tabId=\"1\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {activeTab === \"1\" && (\r\n                    <VisualizationGraph\r\n                      compareKey=\"year_from\"\r\n                      defaultSelected={['ph']}\r\n                      type=\"Year\"\r\n                    />\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {activeTab === \"2\" && (\r\n                    <VisualizationGraphThisYear\r\n                      compareKey=\"month\"\r\n                      defaultSelected={['ph']}\r\n                      type=\"Month\"\r\n                    />\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n          </TabContent>\r\n        </div>\r\n      </GeneralCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  currency: state.waterSchemeData.waterSchemeDetailsData.data?.currency,\r\n\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getWaterTestResultsAction: getWaterTestResultsAction,\r\n  getTestParametersAction: getTestParametersAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(WaterTestResults);\r\n"]},"metadata":{},"sourceType":"module"}