{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\src\\\\core\\\\Protected\\\\Home\\\\Beneficiaries\\\\ManageBeneficiaries\\\\Form.tsx\",\n    _s = $RefreshSig$();\n\nimport NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport Button from \"components/UI/Forms/Buttons\";\nimport TooltipLabel from \"components/UI/TooltipLabel\";\nimport { useFormik } from \"formik\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { getSchemeDataAction } from \"store/modules/waterScheme/getWaterSchemeData\";\nimport { postWaterSchemeDataAction } from \"store/modules/waterScheme/postWaterSchemeData\";\nimport { updateWaterSchemeDataAction } from \"store/modules/waterScheme/updateWaterSchemeData\";\nimport formatDate from \"utils/utilsFunction/date-converter\";\nimport { supplyBeltInitialValues, supplyBeltValidationSchema } from \"./schema\";\n\nconst Form = props => {\n  _s();\n\n  var _props$scheme2;\n\n  const {\n    t\n  } = useTranslation([\"home\"]);\n  const [initialData, seetInitialData] = React.useState(supplyBeltInitialValues);\n  React.useEffect(() => {\n    if (props.language && props.schemeSlug) {\n      props.getSchemeDataAction(props.language);\n    }\n  }, [props.language, props.schemeSlug]);\n  React.useEffect(() => {\n    if (props.editData) {\n      seetInitialData({ ...props.editData\n      });\n    }\n  }, [props.editData]);\n  React.useEffect(() => {\n    if (props.scheme) {\n      var _props$scheme;\n\n      seetInitialData({ ...props.editData,\n        apply_date: (_props$scheme = props.scheme) === null || _props$scheme === void 0 ? void 0 : _props$scheme.tool_start_date\n      });\n    }\n  }, [props.scheme]);\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    setFieldValue,\n    handleSubmit\n  } = useFormik({\n    enableReinitialize: true,\n    initialValues: initialData,\n    validationSchema: supplyBeltValidationSchema,\n    onSubmit: async (submitValue, _ref) => {\n      let {\n        resetForm\n      } = _ref;\n      const requestData = { ...submitValue\n      };\n      let res;\n\n      if (props.editData) {\n        res = await props.updateWaterSchemeDataAction(props.language, props.editData.id, requestData);\n      } else {\n        res = await props.postWaterSchemeDataAction(props.language, requestData);\n      }\n\n      console.log(res, \"resss\");\n\n      if (res.status === 201 || res.status === 200) {\n        if (res.status === 201) {\n          resetForm();\n          toast.success(t(\"home:postSuccess\"));\n        } else {\n          seetInitialData(supplyBeltInitialValues);\n          toast.success(t(\"home:updateSuccess\"));\n        }\n\n        props.getSchemeDataAction(props.language);\n      } else {\n        var _Object$values;\n\n        const errors = (_Object$values = Object.values(res.data)) === null || _Object$values === void 0 ? void 0 : _Object$values.map(item => {\n          toast.error(item[0]);\n        });\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, t(\"home:instConn\"), \" \", \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"institutional_connection\",\n    value: values.institutional_connection,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"institutional_connection\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, t(\"home:commercialConn\"), \" \", \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"commercial_connection\",\n    value: values.commercial_connection,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"commercial_connection\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, t(\"home:houseConn\"), \" \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"household_connection\",\n    value: values.household_connection,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"household_connection\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, t(\"home:publicConn\"), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"public_connection\",\n    value: values.public_connection,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"public_connection\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, t(\"home:applyDate\"), \" \", /*#__PURE__*/React.createElement(TooltipLabel, {\n    id: \"tnohuws\",\n    text: `The date from which this record  should be applied to the system. `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }), \":\"), ((_props$scheme2 = props.scheme) === null || _props$scheme2 === void 0 ? void 0 : _props$scheme2.system_date_format) === \"nep\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NepaliDatePicker, {\n    value: values.apply_date,\n    name: \"apply_date\",\n    onChange: e => {\n      setFieldValue(\"apply_date\", e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EnglishDatePicker, {\n    name: \"apply_date\",\n    value: values.apply_date,\n    handleChange: e => {\n      setFieldValue(\"apply_date\", formatDate(e));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"belt_type\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn  mr-3\",\n    text: t(\"home:save\"),\n    loading: props.postLoading || props.updateLoading,\n    disabled: props.postLoading || props.updateLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn-outlined mr-3\",\n    text: t(\"home:cancel\"),\n    type: \"button\",\n    onClick: () => {\n      props.toggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(Form, \"BzP9deRT70E/sYGKjMJ/qql9D/Y=\", false, function () {\n  return [useTranslation, useFormik];\n});\n\n_c = Form;\n\nconst mapStateToProps = state => {\n  var _state$waterSchemeDat;\n\n  return {\n    language: state.i18nextData.languageType,\n    schemeSlug: (_state$waterSchemeDat = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat === void 0 ? void 0 : _state$waterSchemeDat.slug,\n    scheme: state.waterSchemeData.waterSchemeDetailsData.data,\n    supplySchedule: state.waterSupplyData.waterScheduleData.data,\n    supplyBelts: state.supplyBeltsData.getSupplyBeltData.data,\n    postLoading: state.waterSchemeData.postWaterSchemeData.isFetching,\n    updateLoading: state.waterSchemeData.updateWaterSchemeData.isFetching\n  };\n};\n\nconst mapDispatchToProps = {\n  getSchemeDataAction,\n  postWaterSchemeDataAction,\n  updateWaterSchemeDataAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(Form);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/core/Protected/Home/Beneficiaries/ManageBeneficiaries/Form.tsx"],"names":["NepaliDatePicker","EnglishDatePicker","FormikValidationError","toast","Button","TooltipLabel","useFormik","React","useTranslation","connect","getSchemeDataAction","postWaterSchemeDataAction","updateWaterSchemeDataAction","formatDate","supplyBeltInitialValues","supplyBeltValidationSchema","Form","props","t","initialData","seetInitialData","useState","useEffect","language","schemeSlug","editData","scheme","apply_date","tool_start_date","values","errors","touched","handleChange","setFieldValue","handleSubmit","enableReinitialize","initialValues","validationSchema","onSubmit","submitValue","resetForm","requestData","res","id","console","log","status","success","Object","data","map","item","error","e","preventDefault","institutional_connection","commercial_connection","household_connection","public_connection","system_date_format","postLoading","updateLoading","toggle","mapStateToProps","state","i18nextData","languageType","waterSchemeData","waterSchemeDetailsData","slug","supplySchedule","waterSupplyData","waterScheduleData","supplyBelts","supplyBeltsData","getSupplyBeltData","postWaterSchemeData","isFetching","updateWaterSchemeData","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getSchemeDataAction } from \"store/modules/waterScheme/getWaterSchemeData\";\r\nimport { postWaterSchemeDataAction } from \"store/modules/waterScheme/postWaterSchemeData\";\r\nimport { updateWaterSchemeDataAction } from \"store/modules/waterScheme/updateWaterSchemeData\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport formatDate from \"utils/utilsFunction/date-converter\";\r\nimport { supplyBeltInitialValues, supplyBeltValidationSchema } from \"./schema\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  toggle: any;\r\n}\r\n\r\nconst Form = (props: Props) => {\r\n  const { t } = useTranslation([\"home\"]);\r\n  const [initialData, seetInitialData] = React.useState(supplyBeltInitialValues);\r\n\r\n  React.useEffect(() => {\r\n    if (props.language && props.schemeSlug) {\r\n      props.getSchemeDataAction(props.language);\r\n    }\r\n  }, [props.language, props.schemeSlug]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      seetInitialData({\r\n        ...props.editData,\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.scheme) {\r\n      seetInitialData({\r\n        ...props.editData,\r\n        apply_date: props.scheme?.tool_start_date,\r\n      });\r\n    }\r\n  }, [props.scheme]);\r\n\r\n  const { values, errors, touched, handleChange, setFieldValue, handleSubmit } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: supplyBeltValidationSchema,\r\n    onSubmit: async (submitValue, { resetForm }) => {\r\n      const requestData = {\r\n        ...submitValue,\r\n      };\r\n\r\n      let res;\r\n      if (props.editData) {\r\n        res = await props.updateWaterSchemeDataAction(\r\n          props.language,\r\n          props.editData.id,\r\n          requestData\r\n        );\r\n      } else {\r\n        res = await props.postWaterSchemeDataAction(props.language, requestData);\r\n      }\r\n\r\n      console.log(res, \"resss\");\r\n\r\n      if (res.status === 201 || res.status === 200) {\r\n        if (res.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          seetInitialData(supplyBeltInitialValues);\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n\r\n        props.getSchemeDataAction(props.language);\r\n      } else {\r\n        const errors = Object.values(res.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:instConn\")}{\" \"}\r\n              {/* <TooltipLabel\r\n                id={\"tnoieocu\"}\r\n                text={`Total number of Institutional/ educational organization using water system`}\r\n              /> */}\r\n              :\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"institutional_connection\"\r\n              value={values.institutional_connection}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError\r\n              name=\"institutional_connection\"\r\n              errors={errors}\r\n              touched={touched}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:commercialConn\")}{\" \"}\r\n              {/* <TooltipLabel\r\n                id={\"tnocuws\"}\r\n                text={`Total number of commercials using water system`}\r\n              /> */}\r\n              :\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"commercial_connection\"\r\n              value={values.commercial_connection}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"commercial_connection\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:houseConn\")}{\" \"}\r\n              {/* <TooltipLabel id={\"tnohuws\"} text={`Total number of houses using water system`} />: */}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"household_connection\"\r\n              value={values.household_connection}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"household_connection\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:publicConn\")}:\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"public_connection\"\r\n              value={values.public_connection}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"public_connection\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:applyDate\")}{\" \"}\r\n              <TooltipLabel\r\n                id={\"tnohuws\"}\r\n                text={`The date from which this record  should be applied to the system. `}\r\n              />\r\n              :\r\n            </label>\r\n\r\n            {props.scheme?.system_date_format === \"nep\" ? (\r\n              <>\r\n                <NepaliDatePicker\r\n                  value={values.apply_date}\r\n                  name=\"apply_date\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"apply_date\", e);\r\n                  }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <EnglishDatePicker\r\n                  name=\"apply_date\"\r\n                  value={values.apply_date}\r\n                  handleChange={(e) => {\r\n                    setFieldValue(\"apply_date\", formatDate(e));\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n            <FormikValidationError name=\"belt_type\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn  mr-3\"\r\n            text={t(\"home:save\")}\r\n            loading={props.postLoading || props.updateLoading}\r\n            disabled={props.postLoading || props.updateLoading}\r\n          />\r\n          <Button\r\n            className=\"btn custom-btn-outlined mr-3\"\r\n            text={t(\"home:cancel\")}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              props.toggle();\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  supplySchedule: state.waterSupplyData.waterScheduleData.data,\r\n  supplyBelts: state.supplyBeltsData.getSupplyBeltData.data,\r\n  postLoading: state.waterSchemeData.postWaterSchemeData.isFetching,\r\n  updateLoading: state.waterSchemeData.updateWaterSchemeData.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getSchemeDataAction,\r\n  postWaterSchemeDataAction,\r\n  updateWaterSchemeDataAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Form);\r\n"]},"metadata":{},"sourceType":"module"}