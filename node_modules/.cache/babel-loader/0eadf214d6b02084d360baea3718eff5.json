{"ast":null,"code":"import { apiList } from \"../../actionNames\";\nimport initDefaultAction from \"../../helper/default-action\";\nimport initDefaultReducer from \"../../helper/default-reducer\";\nimport initialState from \"../../helper/default-state\";\nconst apiDetails = Object.freeze(apiList.notifications.getNotificationDetails);\nexport default function getNotificationDetailsReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const stateCopy = Object.assign({}, state);\n  const actionName = apiDetails.actionName;\n  return initDefaultReducer(actionName, action, stateCopy);\n}\nexport const getNotificationDetailsAction = water_scheme_slug => async dispatch => {\n  const variables = {\n    disableSuccessToast: true,\n    pathVariables: {\n      water_scheme_slug\n    }\n  };\n  return await initDefaultAction(apiDetails, dispatch, variables);\n};","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/store/modules/notifications/getNotifications.ts"],"names":["apiList","initDefaultAction","initDefaultReducer","initialState","apiDetails","Object","freeze","notifications","getNotificationDetails","getNotificationDetailsReducer","state","action","stateCopy","assign","actionName","getNotificationDetailsAction","water_scheme_slug","dispatch","variables","disableSuccessToast","pathVariables"],"mappings":"AAGA,SAASA,OAAT,QAAwB,mBAAxB;AACA,OAAOC,iBAAP,MAAqD,6BAArD;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAYA,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcN,OAAO,CAACO,aAAR,CAAsBC,sBAApC,CAAnB;AAEA,eAAe,SAASC,6BAAT,GAAuH;AAAA,MAAhFC,KAAgF,uEAAxEP,YAAwE;AAAA,MAA1DQ,MAA0D;AAClI,QAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAP,CAAc,EAAd,EAAkBH,KAAlB,CAAlB;AACA,QAAMI,UAAU,GAAGV,UAAU,CAACU,UAA9B;AAEA,SAAOZ,kBAAkB,CAACY,UAAD,EAAaH,MAAb,EAAqBC,SAArB,CAAzB;AACH;AAED,OAAO,MAAMG,4BAA4B,GAAIC,iBAAD,IAA0E,MAAOC,QAAP,IAA8B;AAChJ,QAAMC,SAAS,GAAG;AAAEC,IAAAA,mBAAmB,EAAE,IAAvB;AAA6BC,IAAAA,aAAa,EAAE;AAAEJ,MAAAA;AAAF;AAA5C,GAAlB;AACA,SAAO,MAAMf,iBAAiB,CAACG,UAAD,EAAaa,QAAb,EAAuBC,SAAvB,CAA9B;AACH,CAHM","sourcesContent":["import { Dispatch } from \"redux\";\r\nimport { AppThunk } from \"../..\";\r\n\r\nimport { apiList } from \"../../actionNames\";\r\nimport initDefaultAction, { APIResponseDetail } from \"../../helper/default-action\";\r\nimport initDefaultReducer from \"../../helper/default-reducer\";\r\nimport initialState from \"../../helper/default-state\";\r\n\r\n\r\nexport type NotificationDetails = {\r\n    \"id\": number,\r\n    \"initial_date\": string,\r\n    \"income_notification_period\": number,\r\n    \"expenditure_notification_period\": number,\r\n    \"test_result_notification_period\": number,\r\n    \"supply_record_notification_period\": number\r\n}[]\r\n\r\nconst apiDetails = Object.freeze(apiList.notifications.getNotificationDetails);\r\n\r\nexport default function getNotificationDetailsReducer(state = initialState, action: DefaultAction): DefaultState<NotificationDetails> {\r\n    const stateCopy = Object.assign({}, state);\r\n    const actionName = apiDetails.actionName;\r\n\r\n    return initDefaultReducer(actionName, action, stateCopy);\r\n}\r\n\r\nexport const getNotificationDetailsAction = (water_scheme_slug,): AppThunk<APIResponseDetail<NotificationDetails>> => async (dispatch: Dispatch) => {\r\n    const variables = { disableSuccessToast: true, pathVariables: { water_scheme_slug } }\r\n    return await initDefaultAction(apiDetails, dispatch, variables);\r\n};"]},"metadata":{},"sourceType":"module"}