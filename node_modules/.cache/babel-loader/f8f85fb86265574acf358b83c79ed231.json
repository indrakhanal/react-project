{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\src\\\\components\\\\React\\\\EnglishDatepicker\\\\EnglishDatepicker.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./EnglishDatepicker.scss\";\n\nconst EnglishDatePicker = props => {\n  _s();\n\n  const {\n    id,\n    name,\n    disabled = false,\n    className,\n    placement = \"bottom-start\",\n    popperModifiers,\n    wrapperClassName = \"\",\n    value,\n    dateFormat,\n    minDate,\n    maxDate,\n    minTime,\n    maxTime,\n    placeholder,\n    showYearPicker = false,\n    showMonthYearPicker = false,\n    showTimeSelectOnly = false,\n    handleChange,\n    showTimeSelect,\n    timeIntervals = 15\n  } = props;\n\n  const _calendar = useRef();\n\n  const [selectedDate, setselectedDate] = useState(null); // If invalid date\n\n  useEffect(() => {\n    try {\n      if (value) {\n        const date = new Date(value);\n        let currentValue = date.getTime() ? date : null;\n        setselectedDate(currentValue);\n      } else {\n        setselectedDate(null);\n      }\n    } catch (e) {\n      setselectedDate(null);\n    }\n  }, [value]);\n  return /*#__PURE__*/React.createElement(DatePicker, {\n    ref: _calendar,\n    id: id,\n    autoComplete: \"off\",\n    name: name,\n    wrapperClassName: `${wrapperClassName} d-block`,\n    className: className,\n    selected: selectedDate,\n    minDate: minDate ? new Date(minDate) : null,\n    maxDate: maxDate ? new Date(maxDate) : null,\n    minTime: minTime,\n    maxTime: maxTime,\n    onChange: handleChange,\n    onChangeRaw: e => e.preventDefault() //Disables input\n    ,\n    showTimeSelect: showTimeSelect,\n    timeFormat: \"HH:mm\",\n    timeIntervals: timeIntervals,\n    timeCaption: \"Time\",\n    popperPlacement: \"bottom-start\",\n    popperModifiers: popperModifiers,\n    dateFormat: dateFormat ? dateFormat : showTimeSelect ? \"yyyy-MM-dd h:mm aa\" : \"yyyy-MM-dd\",\n    showYearDropdown: true,\n    showMonthDropdown: true,\n    disabled: disabled,\n    showTimeSelectOnly: showTimeSelectOnly,\n    placeholderText: placeholder || \"\",\n    showYearPicker: showYearPicker,\n    showMonthYearPicker: showMonthYearPicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  });\n};\n\n_s(EnglishDatePicker, \"W/0NemS0RQGNYIt93A8mqSCRkEw=\");\n\n_c = EnglishDatePicker;\nexport default EnglishDatePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnglishDatePicker\");","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/components/React/EnglishDatepicker/EnglishDatepicker.tsx"],"names":["React","useEffect","useRef","useState","DatePicker","EnglishDatePicker","props","id","name","disabled","className","placement","popperModifiers","wrapperClassName","value","dateFormat","minDate","maxDate","minTime","maxTime","placeholder","showYearPicker","showMonthYearPicker","showTimeSelectOnly","handleChange","showTimeSelect","timeIntervals","_calendar","selectedDate","setselectedDate","date","Date","currentValue","getTime","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./EnglishDatepicker.scss\";\r\n\r\ninterface DateProps {\r\n  id?: string;\r\n  name?: string;\r\n  className?: string;\r\n  placement?: string;\r\n  popperModifiers?: { [key: string]: any };\r\n  wrapperClassName?: string;\r\n  handleChange: (date: any) => void;\r\n  value?: any;\r\n  minDate?: any;\r\n  maxDate?: any;\r\n  minTime?: any;\r\n  maxTime?: any;\r\n  showTimeSelect?: boolean;\r\n  disabled?: boolean;\r\n  placeholder?: string;\r\n  dateFormat?: string;\r\n  showYearPicker?: boolean;\r\n  showMonthYearPicker?: boolean;\r\n  showTimeSelectOnly?: boolean;\r\n  timeIntervals?: number;\r\n}\r\nconst EnglishDatePicker: React.SFC<DateProps> = (props) => {\r\n  const {\r\n    id,\r\n    name,\r\n    disabled = false,\r\n    className,\r\n    placement = \"bottom-start\",\r\n    popperModifiers,\r\n    wrapperClassName = \"\",\r\n    value,\r\n    dateFormat,\r\n    minDate,\r\n    maxDate,\r\n    minTime,\r\n    maxTime,\r\n    placeholder,\r\n    showYearPicker = false,\r\n    showMonthYearPicker = false,\r\n    showTimeSelectOnly = false,\r\n    handleChange,\r\n    showTimeSelect,\r\n    timeIntervals = 15,\r\n  } = props;\r\n  const _calendar: any = useRef<DatePicker>();\r\n\r\n  const [selectedDate, setselectedDate] = useState<Date | null | undefined>(null);\r\n  // If invalid date\r\n  useEffect(() => {\r\n    try {\r\n      if (value) {\r\n        const date = new Date(value);\r\n        let currentValue = date.getTime() ? date : null;\r\n        setselectedDate(currentValue);\r\n      } else {\r\n        setselectedDate(null);\r\n      }\r\n    } catch (e) {\r\n      setselectedDate(null);\r\n    }\r\n  }, [value]);\r\n\r\n  return (\r\n    <DatePicker\r\n      ref={_calendar}\r\n      id={id}\r\n      autoComplete={\"off\"}\r\n      name={name}\r\n      wrapperClassName={`${wrapperClassName} d-block`}\r\n      className={className}\r\n      selected={selectedDate}\r\n      minDate={minDate ? new Date(minDate) : null}\r\n      maxDate={maxDate ? new Date(maxDate) : null}\r\n      minTime={minTime}\r\n      maxTime={maxTime}\r\n      onChange={handleChange}\r\n      onChangeRaw={(e) => e.preventDefault()} //Disables input\r\n      showTimeSelect={showTimeSelect}\r\n      timeFormat=\"HH:mm\"\r\n      timeIntervals={timeIntervals}\r\n      timeCaption=\"Time\"\r\n      popperPlacement={\"bottom-start\"}\r\n      popperModifiers={popperModifiers}\r\n      dateFormat={dateFormat ? dateFormat : showTimeSelect ? \"yyyy-MM-dd h:mm aa\" : \"yyyy-MM-dd\"}\r\n      showYearDropdown\r\n      showMonthDropdown\r\n      disabled={disabled}\r\n      showTimeSelectOnly={showTimeSelectOnly}\r\n      placeholderText={placeholder || \"\"}\r\n      showYearPicker={showYearPicker}\r\n      showMonthYearPicker={showMonthYearPicker}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EnglishDatePicker;\r\n"]},"metadata":{},"sourceType":"module"}