{"ast":null,"code":"import { apiList } from \"../../actionNames\";\nimport initDefaultAction from \"../../helper/default-action\";\nimport initDefaultReducer from \"../../helper/default-reducer\";\nimport initialState from \"../../helper/default-state\";\nconst apiDetails = Object.freeze(apiList.report.waterSupply);\nexport default function waterSupplyReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const stateCopy = Object.assign({}, state);\n  const actionName = apiDetails.actionName;\n  return initDefaultReducer(actionName, action, stateCopy);\n}\nexport const getWaterSupplyReportAction = (water_scheme_slug, queryParams) => async dispatch => {\n  var _updatedDetails$contr;\n\n  let updatedDetails = { ...apiDetails\n  };\n  updatedDetails.controllerName = `${(_updatedDetails$contr = updatedDetails.controllerName) === null || _updatedDetails$contr === void 0 ? void 0 : _updatedDetails$contr.replace(\"{water_scheme_slug}\", water_scheme_slug)}${queryParams ? `?${queryParams}` : ``}`;\n  return await initDefaultAction(updatedDetails, dispatch, {\n    disableSuccessToast: true,\n    pathVariables: {\n      water_scheme_slug\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/store/modules/report/waterSupply.ts"],"names":["apiList","initDefaultAction","initDefaultReducer","initialState","apiDetails","Object","freeze","report","waterSupply","waterSupplyReducer","state","action","stateCopy","assign","actionName","getWaterSupplyReportAction","water_scheme_slug","queryParams","dispatch","updatedDetails","controllerName","replace","disableSuccessToast","pathVariables"],"mappings":"AAEA,SAASA,OAAT,QAAwB,mBAAxB;AACA,OAAOC,iBAAP,MAAqD,6BAArD;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AA2BA,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcN,OAAO,CAACO,MAAR,CAAeC,WAA7B,CAAnB;AAEA,eAAe,SAASC,kBAAT,GAAkH;AAAA,MAAtFC,KAAsF,uEAA9EP,YAA8E;AAAA,MAAhEQ,MAAgE;AAC7H,QAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAP,CAAc,EAAd,EAAkBH,KAAlB,CAAlB;AACA,QAAMI,UAAU,GAAGV,UAAU,CAACU,UAA9B;AAEA,SAAOZ,kBAAkB,CAACY,UAAD,EAAaH,MAAb,EAAqBC,SAArB,CAAzB;AACH;AAED,OAAO,MAAMG,0BAA0B,GAAG,CAACC,iBAAD,EAAoBC,WAApB,KAAkG,MAAOC,QAAP,IAA8B;AAAA;;AACtK,MAAIC,cAAc,GAAG,EAAE,GAAGf;AAAL,GAArB;AACAe,EAAAA,cAAc,CAACC,cAAf,GAAiC,GAAD,yBAAGD,cAAc,CAACC,cAAlB,0DAAG,sBAC7BC,OAD6B,CACrB,qBADqB,EACEL,iBADF,CACqB,GAAEC,WAAW,GAAI,IAAGA,WAAY,EAAnB,GAAwB,EAAE,EAD/F;AAGA,SAAO,MAAMhB,iBAAiB,CAACkB,cAAD,EAAiBD,QAAjB,EAA2B;AAAEI,IAAAA,mBAAmB,EAAE,IAAvB;AAA6BC,IAAAA,aAAa,EAAE;AAAEP,MAAAA;AAAF;AAA5C,GAA3B,CAA9B;AACH,CANM","sourcesContent":["import { Dispatch } from \"redux\";\r\nimport { AppThunk } from \"../..\";\r\nimport { apiList } from \"../../actionNames\";\r\nimport initDefaultAction, { APIResponseDetail } from \"../../helper/default-action\";\r\nimport initDefaultReducer from \"../../helper/default-reducer\";\r\nimport initialState from \"../../helper/default-state\";\r\n\r\n\r\nexport type SingleWaterSupply = {\r\n    \"data_count\": any\r\n    \"date__month\": any \r\n    \"date_from\": any\r\n    \"date_to\": any\r\n    \"total_supply\": any\r\n    \"total_supply_avg\": any\r\n\r\n    \"non_revenue_water\": any\r\n    \"supply_date__year\": any\r\n    \"supply_date__month\": any\r\n    \"supply_date\": any\r\n    \"daily_avg\": any\r\n}\r\n\r\n\r\nexport type WaterSupplyResultResponse = {\r\n    \"supply\": SingleWaterSupply[],\r\n    \"non_revenue\": SingleWaterSupply[]\r\n    \"daily_target\": number\r\n    \"daily_avg\": { \"daily_avg\": number }\r\n\r\n}\r\n\r\nconst apiDetails = Object.freeze(apiList.report.waterSupply);\r\n\r\nexport default function waterSupplyReducer(state = initialState, action: DefaultAction): DefaultState<WaterSupplyResultResponse> {\r\n    const stateCopy = Object.assign({}, state);\r\n    const actionName = apiDetails.actionName;\r\n\r\n    return initDefaultReducer(actionName, action, stateCopy);\r\n}\r\n\r\nexport const getWaterSupplyReportAction = (water_scheme_slug, queryParams?: any): AppThunk<APIResponseDetail<WaterSupplyResultResponse>> => async (dispatch: Dispatch) => {\r\n    let updatedDetails = { ...apiDetails }\r\n    updatedDetails.controllerName = `${updatedDetails.controllerName \r\n        ?.replace(\"{water_scheme_slug}\", water_scheme_slug)}${queryParams ? `?${queryParams}` : ``}`\r\n\r\n    return await initDefaultAction(updatedDetails, dispatch, { disableSuccessToast: true, pathVariables: { water_scheme_slug } });\r\n};"]},"metadata":{},"sourceType":"module"}