{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\src\\\\core\\\\Protected\\\\Finance\\\\CashBook\\\\Income\\\\CashbookTable.tsx\",\n    _s = $RefreshSig$();\n\nimport { DeleteIcon, EditIconDark } from \"assets/images/xd\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\nimport Button from \"components/UI/Forms/Buttons\";\nimport GeneralModal from \"components/UI/GeneralModal\";\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { deleteIncomeAction } from \"store/modules/income/deleteIncome\";\nimport { getIncomeAction } from \"store/modules/income/getIcome\";\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\nimport { getPreviousIncomeTotalAction } from \"store/modules/income/getPreviousIncomeTotal\";\nimport { getDefaultDate } from \"utils/utilsFunction/date-converter\";\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\nimport IncomeModal from \"./IncomeForm\";\nimport ManageIncomeCatagories from \"./ManageIncomeCategories\";\n\nconst CashbookTable = props => {\n  _s();\n\n  var _sortAplabetically, _sortAplabetically2, _sortAplabetically4;\n\n  const {\n    incomeData,\n    incomeCategories,\n    language,\n    schemeSlug,\n    schemeDetails,\n    previousIncomeTotal,\n    getIncomeAction,\n    getIncomeCategoryAction,\n    getPreviousIncomeTotalAction\n  } = props;\n  const {\n    editId,\n    modal,\n    handleDeleteClick,\n    resetDeleteData,\n    toggleModal\n  } = useDeleteConfirmation();\n  const [editData, setEditData] = useState();\n  const [categoriesModal, CategoriesModal] = useState(false);\n  const [incomeModal, setIncomeModal] = useState(false);\n\n  const toggle = () => CategoriesModal(!categoriesModal);\n\n  const toggleIncomeModal = () => setIncomeModal(!incomeModal);\n\n  useEffect(() => {\n    if (language && schemeSlug && schemeDetails && props.activeTab) {\n      if (props.activeTab === \"1\") {\n        var _props$activeDate, _getDefaultDate, _props$activeDate2, _getDefaultDate2, _props$activeDate3, _getDefaultDate3, _props$activeDate4, _getDefaultDate4;\n\n        getIncomeAction(language, schemeSlug, ((_props$activeDate = props.activeDate) === null || _props$activeDate === void 0 ? void 0 : _props$activeDate.split(\"-\")[0]) || ((_getDefaultDate = getDefaultDate(schemeDetails === null || schemeDetails === void 0 ? void 0 : schemeDetails.system_date_format)) === null || _getDefaultDate === void 0 ? void 0 : _getDefaultDate.split(\"-\")[0]), ((_props$activeDate2 = props.activeDate) === null || _props$activeDate2 === void 0 ? void 0 : _props$activeDate2.split(\"-\")[1]) || ((_getDefaultDate2 = getDefaultDate(schemeDetails === null || schemeDetails === void 0 ? void 0 : schemeDetails.system_date_format)) === null || _getDefaultDate2 === void 0 ? void 0 : _getDefaultDate2.split(\"-\")[1]));\n        getIncomeCategoryAction(schemeSlug);\n        getPreviousIncomeTotalAction(language, schemeSlug, ((_props$activeDate3 = props.activeDate) === null || _props$activeDate3 === void 0 ? void 0 : _props$activeDate3.split(\"-\")[0]) || ((_getDefaultDate3 = getDefaultDate(schemeDetails === null || schemeDetails === void 0 ? void 0 : schemeDetails.system_date_format)) === null || _getDefaultDate3 === void 0 ? void 0 : _getDefaultDate3.split(\"-\")[0]), ((_props$activeDate4 = props.activeDate) === null || _props$activeDate4 === void 0 ? void 0 : _props$activeDate4.split(\"-\")[1]) || ((_getDefaultDate4 = getDefaultDate(schemeDetails === null || schemeDetails === void 0 ? void 0 : schemeDetails.system_date_format)) === null || _getDefaultDate4 === void 0 ? void 0 : _getDefaultDate4.split(\"-\")[1]));\n      }\n    }\n  }, [language, schemeSlug, props.activeDate, schemeDetails, props.activeTab]);\n  const {\n    t\n  } = useTranslation();\n\n  const handleDelete = async () => {\n    try {\n      const response = await props.deleteIncomeAction(editId);\n\n      if (response.status === 204) {\n        toast.success(t(\"home:deleteSuccess\"));\n        props.getIncomeAction(props.language, props.schemeSlug);\n        resetDeleteData();\n      } else {\n        toast.error(t(\"home:deleteError\"));\n        resetDeleteData();\n      }\n    } catch (error) {\n      console.log(error, \"error\");\n    }\n  };\n\n  const handleEdit = data => {\n    setEditData(data);\n    toggleIncomeModal();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn  mr-3\",\n    text: t(\"finance:addTxn\"),\n    onClick: toggleIncomeModal // disabled={authorizing}\n    // loading={authorizing}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn  mr-3\",\n    text: t(\"finance:manageIC\") // disabled={authorizing}\n    // loading={authorizing}\n    ,\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-table table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, t(\"cashbook:date\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, t(\"cashbook:description\")), (_sortAplabetically = sortAplabetically(incomeCategories, \"name\")) === null || _sortAplabetically === void 0 ? void 0 : _sortAplabetically.map((incomeCategory, index) => /*#__PURE__*/React.createElement(\"th\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, incomeCategory.name)), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, t(\"home:action\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    role: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, t(\"cashbook:previous-month-data\")), (_sortAplabetically2 = sortAplabetically(incomeCategories, \"name\")) === null || _sortAplabetically2 === void 0 ? void 0 : _sortAplabetically2.map((incomeCategory, index) => {\n    var _previousIncomeTotal$;\n\n    const findData = previousIncomeTotal === null || previousIncomeTotal === void 0 ? void 0 : (_previousIncomeTotal$ = previousIncomeTotal.previous_month_data) === null || _previousIncomeTotal$ === void 0 ? void 0 : _previousIncomeTotal$.find(prev => prev.income_category_name === incomeCategory.name);\n\n    if (findData) {\n      var _props$schemeDetails;\n\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 23\n        }\n      }, (_props$schemeDetails = props.schemeDetails) === null || _props$schemeDetails === void 0 ? void 0 : _props$schemeDetails.currency, \" \", findData.total_income_amount);\n    } else {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 28\n        }\n      }, \"-\");\n    }\n  })), incomeData === null || incomeData === void 0 ? void 0 : incomeData.map((income, index) => {\n    var _sortAplabetically3;\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      role: \"button\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, language === \"en\" ? income.date : income.date_np), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, income.title), (_sortAplabetically3 = sortAplabetically(incomeCategories, \"name\")) === null || _sortAplabetically3 === void 0 ? void 0 : _sortAplabetically3.map((incomeCategory, index) => {\n      if (income.category.name === incomeCategory.name) {\n        var _props$schemeDetails2;\n\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }\n        }, (_props$schemeDetails2 = props.schemeDetails) === null || _props$schemeDetails2 === void 0 ? void 0 : _props$schemeDetails2.currency, \" \", income.income_amount);\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 30\n          }\n        }, \"-\");\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"button\",\n      onClick: e => {\n        e.stopPropagation();\n        handleEdit(income);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: EditIconDark,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      role: \"button\",\n      onClick: e => {\n        e.stopPropagation();\n        handleDeleteClick(income.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: DeleteIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 23\n      }\n    }))));\n  }), /*#__PURE__*/React.createElement(\"tr\", {\n    role: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, t(\"cashbook:total\")), (_sortAplabetically4 = sortAplabetically(incomeCategories, \"name\")) === null || _sortAplabetically4 === void 0 ? void 0 : _sortAplabetically4.map((incomeCategory, index) => {\n    var _previousIncomeTotal$2;\n\n    const findData = previousIncomeTotal === null || previousIncomeTotal === void 0 ? void 0 : (_previousIncomeTotal$2 = previousIncomeTotal.present_month_data) === null || _previousIncomeTotal$2 === void 0 ? void 0 : _previousIncomeTotal$2.find(prev => prev.income_category_name === incomeCategory.name);\n\n    if (findData) {\n      var _props$schemeDetails3;\n\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 23\n        }\n      }, (_props$schemeDetails3 = props.schemeDetails) === null || _props$schemeDetails3 === void 0 ? void 0 : _props$schemeDetails3.currency, \" \", findData.total_income_amount);\n    } else {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 28\n        }\n      }, \"-\");\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(GeneralModal, {\n    title: t(\"home:addEdit\") + \" \" + t(\"finance:incomeCategories\"),\n    size: \"lg\",\n    open: categoriesModal,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ManageIncomeCatagories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(GeneralModal, {\n    title: t(\"home:addEdit\") + \" \" + t(\"home:income\"),\n    size: \"lg\",\n    open: incomeModal,\n    toggle: () => {\n      if (incomeModal) {\n        setEditData(null);\n      }\n\n      toggleIncomeModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IncomeModal, {\n    editData: editData,\n    setEditData: setEditData,\n    toggle: setIncomeModal,\n    activeDate: props.activeDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ConfirmationModal, {\n    open: modal,\n    handleModal: () => {\n      toggleModal();\n    },\n    handleConfirmClick: () => handleDelete(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(CashbookTable, \"hacItuGVWKGB5qaOxctFqFfWweQ=\", false, function () {\n  return [useDeleteConfirmation, useTranslation];\n});\n\n_c = CashbookTable;\n\nconst mapStateToProps = state => {\n  var _state$waterSchemeDat;\n\n  return {\n    language: state.i18nextData.languageType,\n    schemeSlug: (_state$waterSchemeDat = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat === void 0 ? void 0 : _state$waterSchemeDat.slug,\n    schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\n    incomeData: state.incomeData.getIncomeData.data,\n    incomeCategories: state.incomeData.getIncomeCategory.data,\n    previousIncomeTotal: state.incomeData.getPreviousIncomeTotal.data\n  };\n};\n\nconst mapDispatchToProps = {\n  getIncomeAction: getIncomeAction,\n  deleteIncomeAction: deleteIncomeAction,\n  getIncomeCategoryAction: getIncomeCategoryAction,\n  getPreviousIncomeTotalAction: getPreviousIncomeTotalAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(CashbookTable);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CashbookTable\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/core/Protected/Finance/CashBook/Income/CashbookTable.tsx"],"names":["DeleteIcon","EditIconDark","toast","ConfirmationModal","Button","GeneralModal","useDeleteConfirmation","React","useEffect","useState","useTranslation","connect","deleteIncomeAction","getIncomeAction","getIncomeCategoryAction","getPreviousIncomeTotalAction","getDefaultDate","sortAplabetically","IncomeModal","ManageIncomeCatagories","CashbookTable","props","incomeData","incomeCategories","language","schemeSlug","schemeDetails","previousIncomeTotal","editId","modal","handleDeleteClick","resetDeleteData","toggleModal","editData","setEditData","categoriesModal","CategoriesModal","incomeModal","setIncomeModal","toggle","toggleIncomeModal","activeTab","activeDate","split","system_date_format","t","handleDelete","response","status","success","error","console","log","handleEdit","data","map","incomeCategory","index","name","findData","previous_month_data","find","prev","income_category_name","currency","total_income_amount","income","date","date_np","title","category","income_amount","e","stopPropagation","id","present_month_data","mapStateToProps","state","i18nextData","languageType","waterSchemeData","waterSchemeDetailsData","slug","getIncomeData","getIncomeCategory","getPreviousIncomeTotal","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import { DeleteIcon, EditIconDark } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { deleteIncomeAction } from \"store/modules/income/deleteIncome\";\r\nimport { getIncomeAction } from \"store/modules/income/getIcome\";\r\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\r\nimport { getPreviousIncomeTotalAction } from \"store/modules/income/getPreviousIncomeTotal\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\r\nimport IncomeModal from \"./IncomeForm\";\r\nimport ManageIncomeCatagories from \"./ManageIncomeCategories\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  activeDate: string;\r\n  activeTab: string;\r\n}\r\n\r\nconst CashbookTable = (props: Props) => {\r\n  const {\r\n    incomeData,\r\n    incomeCategories,\r\n    language,\r\n    schemeSlug,\r\n    schemeDetails,\r\n    previousIncomeTotal,\r\n    getIncomeAction,\r\n    getIncomeCategoryAction,\r\n    getPreviousIncomeTotalAction,\r\n  } = props;\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } =\r\n    useDeleteConfirmation();\r\n\r\n  const [editData, setEditData] = useState<any>();\r\n  const [categoriesModal, CategoriesModal] = useState(false);\r\n  const [incomeModal, setIncomeModal] = useState(false);\r\n  const toggle = () => CategoriesModal(!categoriesModal);\r\n\r\n  const toggleIncomeModal = () => setIncomeModal(!incomeModal);\r\n\r\n  useEffect(() => {\r\n    if (language && schemeSlug && schemeDetails && props.activeTab) {\r\n      if (props.activeTab === \"1\") {\r\n        getIncomeAction(\r\n          language,\r\n          schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n        getIncomeCategoryAction(schemeSlug);\r\n        getPreviousIncomeTotalAction(\r\n          language,\r\n          schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n      }\r\n    }\r\n  }, [language, schemeSlug, props.activeDate, schemeDetails, props.activeTab]);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      const response = await props.deleteIncomeAction(editId);\r\n      if (response.status === 204) {\r\n        toast.success(t(\"home:deleteSuccess\"));\r\n        props.getIncomeAction(props.language, props.schemeSlug);\r\n        resetDeleteData();\r\n      } else {\r\n        toast.error(t(\"home:deleteError\"));\r\n        resetDeleteData();\r\n      }\r\n    } catch (error) {\r\n      console.log(error, \"error\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (data) => {\r\n    setEditData(data);\r\n    toggleIncomeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        <div className=\"row my-3\">\r\n          <div className=\"col-6 text-left\">\r\n            <Button\r\n              className=\"btn custom-btn  mr-3\"\r\n              text={t(\"finance:addTxn\")}\r\n              onClick={toggleIncomeModal}\r\n              // disabled={authorizing}\r\n              // loading={authorizing}\r\n            />\r\n          </div>\r\n          <div className=\"col-6 text-right\">\r\n            <Button\r\n              className=\"btn custom-btn  mr-3\"\r\n              text={t(\"finance:manageIC\")}\r\n              // disabled={authorizing}\r\n              // loading={authorizing}\r\n              onClick={toggle}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"data-table table-responsive\">\r\n          <table className=\"table mt-2\">\r\n            <thead>\r\n              <tr>\r\n                <th>{t(\"cashbook:date\")}</th>\r\n                <th>{t(\"cashbook:description\")}</th>\r\n                {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => (\r\n                  <th key={index}>{incomeCategory.name}</th>\r\n                ))}\r\n                <th className=\"text-center\">{t(\"home:action\")}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr role=\"button\">\r\n                <td></td>\r\n                <td>{t(\"cashbook:previous-month-data\")}</td>\r\n                {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  const findData = previousIncomeTotal?.previous_month_data?.find(\r\n                    (prev) => prev.income_category_name === incomeCategory.name\r\n                  );\r\n                  if (findData) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {findData.total_income_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n              </tr>\r\n\r\n              {incomeData?.map((income, index) => (\r\n                <tr role=\"button\" key={index}>\r\n                  <td>{language === \"en\" ? income.date : income.date_np}</td>\r\n                  <td>{income.title}</td>\r\n                  {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                    if (income.category.name === incomeCategory.name) {\r\n                      return (\r\n                        <td key={index}>\r\n                          {props.schemeDetails?.currency} {income.income_amount}\r\n                        </td>\r\n                      );\r\n                    } else {\r\n                      return <td key={index}>-</td>;\r\n                    }\r\n                  })}\r\n                  <td className=\"action\">\r\n                    <div\r\n                      role=\"button\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleEdit(income);\r\n                      }}\r\n                    >\r\n                      <img src={EditIconDark} alt=\"\" />\r\n                    </div>\r\n                    <div\r\n                      role=\"button\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleDeleteClick(income.id);\r\n                      }}\r\n                    >\r\n                      <img src={DeleteIcon} alt=\"\" />\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n\r\n              <tr role=\"button\">\r\n                <td></td>\r\n                <td>{t(\"cashbook:total\")}</td>\r\n                {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  const findData = previousIncomeTotal?.present_month_data?.find(\r\n                    (prev) => prev.income_category_name === incomeCategory.name\r\n                  );\r\n                  if (findData) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {findData.total_income_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n                <td></td>\r\n              </tr>\r\n\r\n              {/* <tr role=\"button\" onClick={() => setModal(true)}>\r\n              <td>\r\n                <img src={CameraIcon} alt=\"\" /> &nbsp;&nbsp; Paper Cashbook Image\r\n              </td>\r\n            </tr> */}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <GeneralModal\r\n          title={t(\"home:addEdit\") + \" \" + t(\"finance:incomeCategories\")}\r\n          size=\"lg\"\r\n          open={categoriesModal}\r\n          toggle={toggle}\r\n        >\r\n          <ManageIncomeCatagories />\r\n        </GeneralModal>\r\n        <GeneralModal\r\n          title={t(\"home:addEdit\") + \" \" + t(\"home:income\")}\r\n          size=\"lg\"\r\n          open={incomeModal}\r\n          toggle={() => {\r\n            if (incomeModal) {\r\n              setEditData(null);\r\n            }\r\n            toggleIncomeModal();\r\n          }}\r\n        >\r\n          <IncomeModal\r\n            editData={editData}\r\n            setEditData={setEditData}\r\n            toggle={setIncomeModal}\r\n            activeDate={props.activeDate}\r\n          />\r\n        </GeneralModal>\r\n\r\n        <ConfirmationModal\r\n          open={modal}\r\n          handleModal={() => {\r\n            toggleModal();\r\n          }}\r\n          handleConfirmClick={() => handleDelete()}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  incomeData: state.incomeData.getIncomeData.data,\r\n  incomeCategories: state.incomeData.getIncomeCategory.data,\r\n  previousIncomeTotal: state.incomeData.getPreviousIncomeTotal.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getIncomeAction: getIncomeAction,\r\n  deleteIncomeAction: deleteIncomeAction,\r\n  getIncomeCategoryAction: getIncomeCategoryAction,\r\n  getPreviousIncomeTotalAction: getPreviousIncomeTotalAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CashbookTable);\r\n"]},"metadata":{},"sourceType":"module"}