{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\src\\\\core\\\\Public\\\\Service\\\\SupplyVisualization\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Col, Nav, NavItem, NavLink, Row, TabContent, TabPane } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\nimport { GeneralCard } from \"components/UI/GeneralCard\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { getWaterSupplyReportAction } from \"store/modules/report/waterSupply\";\nimport { getSchemeYearIntervalsAction } from \"store/modules/waterScheme/getYearIntervals\";\nimport { allTimeOptions, thisYearOptions, thisMonthOptions, thisWeekOptions } from \"./datas\";\nimport VisualizationBarGraph from \"./VisualizationBarGraph\";\nimport VisualizationBarGraphThisWeek from \"./VisualizationBarGraphThisWeek\";\nimport VisualizationGraph from \"./VisualizationGraph\";\nimport VisualizationGraphThisYear from \"./VisualizationGraphThisYear\";\nimport formatDate, { getDefaultDate } from \"utils/utilsFunction/date-converter\";\n\nconst SupplyVIsualization = props => {\n  _s();\n\n  var _props$schemeDetails3;\n\n  const {\n    t\n  } = useTranslation([\"home\"]);\n  const [yearOptions, setYearOptions] = React.useState([]);\n  const [selectedYear, setSelectedYear] = React.useState(\"\");\n  const [activeTab, setActiveTab] = React.useState(\"1\");\n  const [activeDate, setActiveDate] = React.useState(\"\");\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  React.useEffect(() => {\n    if (props.language && props.schemeSlug) {\n      props.getSchemeYearIntervalsAction(props.language, props.schemeSlug);\n    }\n  }, [props.language, props.schemeSlug]);\n  React.useEffect(() => {\n    if (props.intervalData) {\n      const intervalData = props.intervalData.map(item => ({\n        value: item.id,\n        label: `${item.start_date} - ${item.end_date}`\n      }));\n      setYearOptions(intervalData);\n    }\n  }, [props.intervalData]);\n  React.useEffect(() => {\n    if (props.schemeSlug && props.schemeDetails) {\n      if (activeTab === \"1\") {\n        props.getWaterSupplyReportAction(props.schemeSlug);\n      } else if (activeTab === \"2\") {\n        props.getWaterSupplyReportAction(props.schemeSlug, `this_year=${selectedYear || 1}`);\n      } else if (activeTab === \"3\") {\n        var _getDefaultDate, _props$schemeDetails, _getDefaultDate2, _props$schemeDetails2;\n\n        props.getWaterSupplyReportAction(props.schemeSlug, `year=${(activeDate === null || activeDate === void 0 ? void 0 : activeDate.split(\"-\")[0]) || ((_getDefaultDate = getDefaultDate((_props$schemeDetails = props.schemeDetails) === null || _props$schemeDetails === void 0 ? void 0 : _props$schemeDetails.system_date_format)) === null || _getDefaultDate === void 0 ? void 0 : _getDefaultDate.split(\"-\")[0])}&this_month=${(activeDate === null || activeDate === void 0 ? void 0 : activeDate.split(\"-\")[1]) || ((_getDefaultDate2 = getDefaultDate((_props$schemeDetails2 = props.schemeDetails) === null || _props$schemeDetails2 === void 0 ? void 0 : _props$schemeDetails2.system_date_format)) === null || _getDefaultDate2 === void 0 ? void 0 : _getDefaultDate2.split(\"-\")[1])}`);\n      } else if (activeTab === \"4\") {\n        props.getWaterSupplyReportAction(props.schemeSlug, `this_week=true&date_from=${formatDate(activeDate || new Date())}&date_to=${formatDate(new Date(new Date(activeDate || new Date()).getTime() + 7 * 24 * 60 * 60 * 1000))}`);\n      }\n    }\n  }, [props.language, activeTab, props.schemeSlug, selectedYear, activeDate, props.schemeDetails]);\n  console.log(activeDate, \"asdasdasdasdasdasd\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container py-3 cash-book customCase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GeneralCard, {\n    title: t(\"sidebar:supplyVisualization\"),\n    print: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cash-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === \"1\"\n    }),\n    onClick: () => {\n      toggle(\"1\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, t(\"home:allTime\"))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === \"2\"\n    }),\n    onClick: () => {\n      toggle(\"2\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, t(\"home:thisYear\"))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === \"3\"\n    }),\n    onClick: () => {\n      toggle(\"3\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, t(\"home:thisMonth\"))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === \"4\"\n    }),\n    onClick: () => {\n      toggle(\"4\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, t(\"home:thisWeek\"))), activeTab !== \"1\" && /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group my-0 py-0 pl-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, activeTab === \"2\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-grow-1\",\n    style: {\n      width: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(StyledSelect, {\n    name: \"this_year\",\n    options: yearOptions,\n    value: yearOptions === null || yearOptions === void 0 ? void 0 : yearOptions.find(item => item.value === selectedYear),\n    onChange: e => {\n      var _e$value;\n\n      setSelectedYear((_e$value = e.value) === null || _e$value === void 0 ? void 0 : _e$value.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, ((_props$schemeDetails3 = props.schemeDetails) === null || _props$schemeDetails3 === void 0 ? void 0 : _props$schemeDetails3.system_date_format) === \"nep\" ? /*#__PURE__*/React.createElement(NepaliDatePicker, {\n    className: \"form-control\",\n    name: \"name_en\",\n    value: activeDate,\n    onChange: e => {\n      setActiveDate(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(EnglishDatePicker, {\n    name: \"eng\",\n    value: activeDate || new Date(),\n    handleChange: e => {\n      setActiveDate(formatDate(e));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 27\n    }\n  }))))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"info-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, t(\"home:allAmountInRupee\"), \" \", props.currency)), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, activeTab === \"1\" && /*#__PURE__*/React.createElement(VisualizationGraph, {\n    type: \"Year\",\n    compareKey: \"date_from\",\n    defaultSelected: [\"total_supply_avg\"],\n    options: allTimeOptions,\n    key: \"allTimeGraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, activeTab === \"2\" && /*#__PURE__*/React.createElement(VisualizationGraphThisYear, {\n    type: \"Month\",\n    defaultSelected: [\"total_supply_avg\"],\n    options: thisYearOptions,\n    selectedYear: selectedYear,\n    key: \"yearGraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  })), \" \")), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, activeTab === \"3\" && /*#__PURE__*/React.createElement(VisualizationBarGraph, {\n    compareKey: \"supply_date\",\n    defaultSelected: [\"total_supply\", \"daily_target\"],\n    options: thisMonthOptions,\n    key: \"thisMonthGraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  })), \" \")), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, activeTab === \"4\" && /*#__PURE__*/React.createElement(VisualizationBarGraphThisWeek, {\n    compareKey: \"supply_date\",\n    defaultSelected: [\"total_supply_avg\"],\n    options: thisWeekOptions,\n    key: \"thisWeek\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  })), \" \"))))));\n};\n\n_s(SupplyVIsualization, \"LaDYY3i3HTsG6DFgXcdMao6JXvc=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SupplyVIsualization;\n\nconst mapStateToProps = state => {\n  var _state$waterSchemeDat, _state$waterSchemeDat2;\n\n  return {\n    language: state.i18nextData.languageType,\n    schemeSlug: (_state$waterSchemeDat = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat === void 0 ? void 0 : _state$waterSchemeDat.slug,\n    schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\n    intervalData: state.waterSchemeData.getYearIntervals.data,\n    currency: (_state$waterSchemeDat2 = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat2 === void 0 ? void 0 : _state$waterSchemeDat2.currency\n  };\n};\n\nconst mapDispatchToProps = {\n  getWaterSupplyReportAction: getWaterSupplyReportAction,\n  getSchemeYearIntervalsAction: getSchemeYearIntervalsAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(SupplyVIsualization);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SupplyVIsualization\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/core/Public/Service/SupplyVisualization/index.tsx"],"names":["React","Col","Nav","NavItem","NavLink","Row","TabContent","TabPane","classnames","NepaliDatePicker","EnglishDatePicker","StyledSelect","GeneralCard","useTranslation","connect","getWaterSupplyReportAction","getSchemeYearIntervalsAction","allTimeOptions","thisYearOptions","thisMonthOptions","thisWeekOptions","VisualizationBarGraph","VisualizationBarGraphThisWeek","VisualizationGraph","VisualizationGraphThisYear","formatDate","getDefaultDate","SupplyVIsualization","props","t","yearOptions","setYearOptions","useState","selectedYear","setSelectedYear","activeTab","setActiveTab","activeDate","setActiveDate","toggle","tab","useEffect","language","schemeSlug","intervalData","map","item","value","id","label","start_date","end_date","schemeDetails","split","system_date_format","Date","getTime","console","log","active","width","find","e","currency","mapStateToProps","state","i18nextData","languageType","waterSchemeData","waterSchemeDetailsData","data","slug","getYearIntervals","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Col, Nav, NavItem, NavLink, Row, TabContent, TabPane } from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport { ADToBS, BSToAD } from \"components/React/Datepicker/Datepickerutils\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\r\nimport { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getWaterSupplyReportAction } from \"store/modules/report/waterSupply\";\r\nimport { getSchemeYearIntervalsAction } from \"store/modules/waterScheme/getYearIntervals\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { allTimeOptions, thisYearOptions, thisMonthOptions, thisWeekOptions } from \"./datas\";\r\nimport VisualizationBarGraph from \"./VisualizationBarGraph\";\r\nimport VisualizationBarGraphThisWeek from \"./VisualizationBarGraphThisWeek\";\r\nimport VisualizationGraph from \"./VisualizationGraph\";\r\nimport VisualizationGraphThisYear from \"./VisualizationGraphThisYear\";\r\nimport formatDate, { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst SupplyVIsualization = (props: Props) => {\r\n  const { t } = useTranslation([\"home\"]);\r\n\r\n  const [yearOptions, setYearOptions] = React.useState<any>([]);\r\n  const [selectedYear, setSelectedYear] = React.useState<any>(\"\");\r\n\r\n  const [activeTab, setActiveTab] = React.useState(\"1\");\r\n  const [activeDate, setActiveDate] = React.useState<any>(\"\");\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.language && props.schemeSlug) {\r\n      props.getSchemeYearIntervalsAction(props.language, props.schemeSlug);\r\n    }\r\n  }, [props.language, props.schemeSlug]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.intervalData) {\r\n      const intervalData = props.intervalData.map((item) => ({\r\n        value: item.id,\r\n        label: `${item.start_date} - ${item.end_date}`,\r\n      }));\r\n      setYearOptions(intervalData);\r\n    }\r\n  }, [props.intervalData]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug && props.schemeDetails) {\r\n      if (activeTab === \"1\") {\r\n        props.getWaterSupplyReportAction(props.schemeSlug);\r\n      } else if (activeTab === \"2\") {\r\n        props.getWaterSupplyReportAction(props.schemeSlug, `this_year=${selectedYear || 1}`);\r\n      } else if (activeTab === \"3\") {\r\n        props.getWaterSupplyReportAction(\r\n          props.schemeSlug,\r\n          `year=${\r\n            activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(props.schemeDetails?.system_date_format)?.split(\"-\")[0]\r\n          }&this_month=${\r\n            activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(props.schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n          }`\r\n        );\r\n      } else if (activeTab === \"4\") {\r\n        props.getWaterSupplyReportAction(\r\n          props.schemeSlug,\r\n          `this_week=true&date_from=${formatDate(activeDate || new Date())}&date_to=${formatDate(\r\n            new Date(new Date(activeDate || new Date()).getTime() + 7 * 24 * 60 * 60 * 1000)\r\n          )}`\r\n        );\r\n      }\r\n    }\r\n  }, [props.language, activeTab, props.schemeSlug, selectedYear, activeDate, props.schemeDetails]);\r\n\r\n  console.log(activeDate, \"asdasdasdasdasdasd\");\r\n  return (\r\n    <div className=\"container py-3 cash-book customCase\">\r\n      <GeneralCard title={t(\"sidebar:supplyVisualization\")} print={true}>\r\n        <div className=\"cash-content\">\r\n          <div className=\"flex-between\">\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"1\" })}\r\n                  onClick={() => {\r\n                    toggle(\"1\");\r\n                  }}\r\n                >\r\n                  {t(\"home:allTime\")}\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"2\" })}\r\n                  onClick={() => {\r\n                    toggle(\"2\");\r\n                  }}\r\n                >\r\n                  {t(\"home:thisYear\")}\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"3\" })}\r\n                  onClick={() => {\r\n                    toggle(\"3\");\r\n                  }}\r\n                >\r\n                  {t(\"home:thisMonth\")}\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"4\" })}\r\n                  onClick={() => {\r\n                    toggle(\"4\");\r\n                  }}\r\n                >\r\n                  {t(\"home:thisWeek\")}\r\n                </NavLink>\r\n              </NavItem>\r\n              {activeTab !== \"1\" && (\r\n                <NavItem>\r\n                  <div className=\"form-group my-0 py-0 pl-4\">\r\n                    {activeTab === \"2\" ? (\r\n                      <div className=\"flex-grow-1\" style={{ width: 200 }}>\r\n                        <StyledSelect\r\n                          name=\"this_year\"\r\n                          options={yearOptions}\r\n                          value={yearOptions?.find((item) => item.value === selectedYear)}\r\n                          onChange={(e: any) => {\r\n                            setSelectedYear(e.value?.value);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <>\r\n                        {props.schemeDetails?.system_date_format === \"nep\" ? (\r\n                          <NepaliDatePicker\r\n                            className=\"form-control\"\r\n                            name=\"name_en\"\r\n                            value={activeDate}\r\n                            onChange={(e) => {\r\n                              setActiveDate(e);\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          <EnglishDatePicker\r\n                            name=\"eng\"\r\n                            value={activeDate || new Date()}\r\n                            handleChange={(e) => {\r\n                              setActiveDate(formatDate(e));\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </NavItem>\r\n              )}\r\n            </Nav>\r\n            <span className=\"info-text\">\r\n              {t(\"home:allAmountInRupee\")} {props.currency}\r\n            </span>\r\n          </div>\r\n\r\n          <TabContent activeTab={activeTab} className=\"mt-2\">\r\n            <TabPane tabId=\"1\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {activeTab === \"1\" && (\r\n                    <VisualizationGraph\r\n                      type=\"Year\"\r\n                      compareKey=\"date_from\"\r\n                      defaultSelected={[\"total_supply_avg\"]}\r\n                      options={allTimeOptions}\r\n                      key=\"allTimeGraph\"\r\n                    />\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {activeTab === \"2\" && (\r\n                    <VisualizationGraphThisYear\r\n                      type=\"Month\"\r\n                      defaultSelected={[\"total_supply_avg\"]}\r\n                      options={thisYearOptions}\r\n                      selectedYear={selectedYear}\r\n                      key=\"yearGraph\"\r\n                    />\r\n                  )}\r\n                </Col>{\" \"}\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"3\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {activeTab === \"3\" && (\r\n                    <VisualizationBarGraph\r\n                      compareKey=\"supply_date\"\r\n                      defaultSelected={[\"total_supply\", \"daily_target\"]}\r\n                      options={thisMonthOptions}\r\n                      key=\"thisMonthGraph\"\r\n                    />\r\n                  )}\r\n                </Col>{\" \"}\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"4\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {activeTab === \"4\" && (\r\n                    <VisualizationBarGraphThisWeek\r\n                      compareKey=\"supply_date\"\r\n                      defaultSelected={[\"total_supply_avg\"]}\r\n                      options={thisWeekOptions}\r\n                      key={\"thisWeek\"}\r\n                    />\r\n                  )}\r\n                </Col>{\" \"}\r\n              </Row>\r\n            </TabPane>\r\n          </TabContent>\r\n        </div>\r\n      </GeneralCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  intervalData: state.waterSchemeData.getYearIntervals.data,\r\n  currency: state.waterSchemeData.waterSchemeDetailsData.data?.currency,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getWaterSupplyReportAction: getWaterSupplyReportAction,\r\n  getSchemeYearIntervalsAction: getSchemeYearIntervalsAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(SupplyVIsualization);\r\n"]},"metadata":{},"sourceType":"module"}