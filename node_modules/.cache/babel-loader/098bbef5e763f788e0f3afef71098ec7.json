{"ast":null,"code":"var _jsxFileName = \"E:\\\\Smart Tech Solution\\\\React JS\\\\react-project\\\\src\\\\core\\\\Protected\\\\Finance\\\\CashBook\\\\Income\\\\ManageIncomeCategories\\\\Form.tsx\",\n    _s = $RefreshSig$();\n\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport Button from \"components/UI/Forms/Buttons\";\nimport { useFormik } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\nimport { postIncomeCategoriesAction } from \"store/modules/income/postIncomeCategories\";\nimport { updateIncomeCategoriesAction } from \"store/modules/income/updateIncomeCategories\";\nimport * as Yup from \"yup\";\nimport { useTranslation } from \"react-i18next\";\nconst validationScheme = Yup.object({\n  name: Yup.string().required(\"Name is required\")\n});\n\nconst Form = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [initialData, setInitialData] = React.useState({\n    name: \"\"\n  });\n  React.useEffect(() => {\n    if (props.editData) {\n      setInitialData({ ...props.editData\n      });\n    }\n  }, [props.editData]);\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = useFormik({\n    enableReinitialize: true,\n    initialValues: initialData,\n    validationSchema: validationScheme,\n    onSubmit: async (submitValue, _ref) => {\n      let {\n        resetForm\n      } = _ref;\n      const requestData = submitValue;\n      let res;\n\n      if (props.editData) {\n        res = await props.updateIncomeCategoriesAction(props.editData.id, requestData);\n      } else {\n        res = await props.postIncomeCategoriesAction(requestData);\n      }\n\n      if (res.status === 201 || res.status === 200) {\n        if (res.status === 201) {\n          resetForm();\n          toast.success(t(\"home:postSuccess\"));\n        } else {\n          setInitialData({\n            name: \"\"\n          });\n          toast.success(t(\"home:updateSuccess\"));\n        }\n\n        props.setEditData(null);\n        props.getIncomeCategoryAction(props.schemeSlug);\n      } else {\n        var _Object$values;\n\n        const errors = (_Object$values = Object.values(res.data)) === null || _Object$values === void 0 ? void 0 : _Object$values.map(item => {\n          toast.error(item[0]);\n        });\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, t(\"finance:categoryName\")), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"name\",\n    value: values.name,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"name\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn  mr-3\",\n    text: t(\"home:save\"),\n    type: \"submit\",\n    disabled: props.postLoading || props.updateLoading,\n    loading: props.postLoading || props.updateLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(Form, \"hLGQQhe+ab/epvFfL8+ckys0VSU=\", false, function () {\n  return [useTranslation, useFormik];\n});\n\n_c = Form;\n\nconst mapStateToProps = state => {\n  var _state$waterSchemeDat;\n\n  return {\n    language: state.i18nextData.languageType,\n    schemeSlug: (_state$waterSchemeDat = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat === void 0 ? void 0 : _state$waterSchemeDat.slug,\n    supplySchedule: state.waterSupplyData.waterScheduleData.data,\n    supplyBelts: state.supplyBeltsData.getSupplyBeltData.data,\n    postLoading: state.incomeData.postIncome.isFetching,\n    updateLoading: state.incomeData.updateIncome.isFetching\n  };\n};\n\nconst mapDispatchToProps = {\n  updateIncomeCategoriesAction,\n  postIncomeCategoriesAction,\n  getIncomeCategoryAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(Form);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/core/Protected/Finance/CashBook/Income/ManageIncomeCategories/Form.tsx"],"names":["FormikValidationError","toast","Button","useFormik","React","connect","getIncomeCategoryAction","postIncomeCategoriesAction","updateIncomeCategoriesAction","Yup","useTranslation","validationScheme","object","name","string","required","Form","props","t","initialData","setInitialData","useState","useEffect","editData","values","errors","touched","handleChange","handleBlur","handleSubmit","enableReinitialize","initialValues","validationSchema","onSubmit","submitValue","resetForm","requestData","res","id","status","success","setEditData","schemeSlug","Object","data","map","item","error","e","preventDefault","postLoading","updateLoading","mapStateToProps","state","language","i18nextData","languageType","waterSchemeData","waterSchemeDetailsData","slug","supplySchedule","waterSupplyData","waterScheduleData","supplyBelts","supplyBeltsData","getSupplyBeltData","incomeData","postIncome","isFetching","updateIncome","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\r\nimport { postIncomeCategoriesAction } from \"store/modules/income/postIncomeCategories\";\r\nimport { updateIncomeCategoriesAction } from \"store/modules/income/updateIncomeCategories\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst validationScheme = Yup.object({\r\n  name: Yup.string().required(\"Name is required\"),\r\n});\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  toggle: any;\r\n  setEditData: any;\r\n}\r\n\r\nconst Form = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [initialData, setInitialData] = React.useState({\r\n    name: \"\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      setInitialData({\r\n        ...props.editData,\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  const { values, errors, touched, handleChange, handleBlur, handleSubmit } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationScheme,\r\n    onSubmit: async (submitValue, { resetForm }) => {\r\n      const requestData = submitValue;\r\n\r\n      let res;\r\n      if (props.editData) {\r\n        res = await props.updateIncomeCategoriesAction(props.editData.id, requestData);\r\n      } else {\r\n        res = await props.postIncomeCategoriesAction(requestData);\r\n      }\r\n\r\n      if (res.status === 201 || res.status === 200) {\r\n        if (res.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          setInitialData({\r\n            name: \"\",\r\n          });\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n        props.setEditData(null);\r\n        props.getIncomeCategoryAction(props.schemeSlug);\r\n      } else {\r\n        const errors = Object.values(res.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:categoryName\")}\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"name\"\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"name\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-4 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn  mr-3\"\r\n            text={t(\"home:save\")}\r\n            type=\"submit\"\r\n            disabled={props.postLoading || props.updateLoading}\r\n            loading={props.postLoading || props.updateLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  supplySchedule: state.waterSupplyData.waterScheduleData.data,\r\n  supplyBelts: state.supplyBeltsData.getSupplyBeltData.data,\r\n  postLoading: state.incomeData.postIncome.isFetching,\r\n  updateLoading: state.incomeData.updateIncome.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateIncomeCategoriesAction,\r\n  postIncomeCategoriesAction,\r\n  getIncomeCategoryAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Form);\r\n"]},"metadata":{},"sourceType":"module"}