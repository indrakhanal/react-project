{"ast":null,"code":"var _jsxFileName = \"E:\\\\Smart Tech Solution\\\\React JS\\\\react-project\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport appRoutes from \"routes/routes\";\nimport PrivateRoute from \"routes/PrivateRoute/PrivateRoute\";\nimport useAuthentication from \"services/authentication/AuthenticationService\";\nimport TokenService from \"services/jwt-token/jwt-token\";\nimport { geti18nLanguage, switchI18nLanguage } from \"store/modules/i18n/i18n\";\nimport { addUserDetails } from \"store/modules/userDetails\";\nimport \"./App.scss\"; // Initialize Notification Toaster\n\ntoast.configure({\n  position: \"top-right\",\n  autoClose: 5000,\n  closeButton: false,\n  draggable: false\n});\n\nfunction App() {\n  _s();\n\n  const {\n    i18nextData: {\n      languageType\n    }\n  } = useSelector(state => ({\n    i18nextData: state.i18nextData\n  }));\n  const dispatch = useDispatch();\n  const {\n    isAuthenticated\n  } = useAuthentication();\n  useEffect(() => {\n    // Initialize i18n during mount as dynamic import\n    // Synchronizing i18 state with redux state\n    import(\"./i18n/i18n\").then(i18n => {\n      const persistedLanguage = geti18nLanguage();\n\n      if (persistedLanguage && persistedLanguage !== languageType) {\n        dispatch(switchI18nLanguage(persistedLanguage));\n        i18n.default.changeLanguage(persistedLanguage);\n      } else if (i18n.default.language !== languageType) {\n        i18n.default.changeLanguage(languageType);\n      }\n    });\n  }, [languageType, dispatch]); // Disable Console\n\n  useEffect(() => {\n    // Disable Console during production\n    if (process.env.NODE_ENV === \"production\") {\n      console.log = function () {};\n\n      window.console.log = window.console.debug = window.console.info = window.console.error = function () {\n        return false;\n      };\n    }\n  }, []); //fetch token from localstorage and set details on reducer\n\n  useEffect(() => {\n    const userDetails = TokenService.getAccessToken();\n    dispatch(addUserDetails(userDetails));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isAuthenticated() ? /*#__PURE__*/React.createElement(PrivateRoute, {\n    appRoutes: appRoutes.filter(route => route.type !== \"login\"),\n    redirectPath: [{\n      from: \"*\",\n      to: \"/auth/home\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(PrivateRoute, {\n    appRoutes: appRoutes.filter(route => {\n      var _route$children;\n\n      return ((_route$children = route.children) === null || _route$children === void 0 ? void 0 : _route$children.filter(item => item.type !== \"authorized\")) || route.type === \"login\";\n    }),\n    redirectPath: [{\n      from: \"*\",\n      to: \"/welcome\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(App, \"ZMUnBpW7RiHZh7oSjiKyF8/0IT0=\", false, function () {\n  return [useSelector, useDispatch, useAuthentication];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/App.tsx"],"names":["toast","React","useEffect","useDispatch","useSelector","appRoutes","PrivateRoute","useAuthentication","TokenService","geti18nLanguage","switchI18nLanguage","addUserDetails","configure","position","autoClose","closeButton","draggable","App","i18nextData","languageType","state","dispatch","isAuthenticated","then","i18n","persistedLanguage","default","changeLanguage","language","process","env","NODE_ENV","console","log","window","debug","info","error","userDetails","getAccessToken","filter","route","type","from","to","children","item"],"mappings":"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","sourcesContent":["import toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport appRoutes from \"routes/routes\";\r\nimport PrivateRoute from \"routes/PrivateRoute/PrivateRoute\";\r\nimport useAuthentication from \"services/authentication/AuthenticationService\";\r\nimport TokenService from \"services/jwt-token/jwt-token\";\r\nimport { geti18nLanguage, switchI18nLanguage } from \"store/modules/i18n/i18n\";\r\nimport { addUserDetails } from \"store/modules/userDetails\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport \"./App.scss\";\r\n\r\n// Initialize Notification Toaster\r\ntoast.configure({\r\n  position: \"top-right\",\r\n  autoClose: 5000,\r\n  closeButton: false,\r\n  draggable: false,\r\n});\r\n\r\nfunction App() {\r\n  const {\r\n    i18nextData: { languageType },\r\n  } = useSelector((state: RootState) => ({ i18nextData: state.i18nextData }));\r\n  const dispatch = useDispatch();\r\n\r\n  const { isAuthenticated } = useAuthentication();\r\n\r\n  useEffect(() => {\r\n    // Initialize i18n during mount as dynamic import\r\n    // Synchronizing i18 state with redux state\r\n    import(\"./i18n/i18n\").then((i18n) => {\r\n      const persistedLanguage = geti18nLanguage();\r\n\r\n      if (persistedLanguage && persistedLanguage !== languageType) {\r\n        dispatch(switchI18nLanguage(persistedLanguage));\r\n        i18n.default.changeLanguage(persistedLanguage);\r\n      } else if (i18n.default.language !== languageType) {\r\n        i18n.default.changeLanguage(languageType);\r\n      }\r\n    });\r\n  }, [languageType, dispatch]);\r\n\r\n  // Disable Console\r\n  useEffect(() => {\r\n    // Disable Console during production\r\n    if (process.env.NODE_ENV === \"production\") {\r\n      console.log = function () {};\r\n      window.console.log =\r\n        window.console.debug =\r\n        window.console.info =\r\n        window.console.error =\r\n          function () {\r\n            return false;\r\n          };\r\n    }\r\n  }, []);\r\n\r\n  //fetch token from localstorage and set details on reducer\r\n  useEffect(() => {\r\n    const userDetails = TokenService.getAccessToken();\r\n    dispatch(addUserDetails(userDetails));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated() ? (\r\n        <PrivateRoute\r\n          appRoutes={appRoutes.filter((route) => route.type !== \"login\")}\r\n          redirectPath={[{ from: \"*\", to: \"/auth/home\" }]}\r\n        />\r\n      ) : (\r\n        <PrivateRoute\r\n          appRoutes={appRoutes.filter((route) => {\r\n            return (\r\n              route.children?.filter((item) => item.type !== \"authorized\") ||\r\n              route.type === \"login\"\r\n            );\r\n          })}\r\n          redirectPath={[{ from: \"*\", to: \"/welcome\" }]}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}