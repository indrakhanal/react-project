{"ast":null,"code":"var _jsxFileName = \"E:\\\\Smart Tech Solution\\\\React JS\\\\react-project\\\\src\\\\core\\\\Public\\\\Login\\\\Login.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport Button from \"components/UI/Forms/Buttons\";\nimport { useFormik } from \"formik\";\nimport React, { useCallback, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect, shallowEqual, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { switchI18nLanguage } from \"store/modules/i18n/i18n\";\nimport { loginUser } from \"store/modules/login/login\";\nimport { addUserDetails } from \"store/modules/userDetails\";\nimport { object as YupObject, string as YupString } from \"yup\";\n\nfunction Login(props) {\n  _s();\n\n  const {\n    loginData,\n    loginUser,\n    switchI18nLanguage\n  } = props;\n  const history = useHistory();\n  const i18nextData = useSelector(state => state.i18nextData, shallowEqual);\n  const handleLogin = useCallback(async userDetails => {\n    var _loginres$data, _loginres$data$tokens;\n\n    const loginres = await loginUser(userDetails);\n\n    if (loginres !== null && loginres !== void 0 && (_loginres$data = loginres.data) !== null && _loginres$data !== void 0 && (_loginres$data$tokens = _loginres$data.tokens) !== null && _loginres$data$tokens !== void 0 && _loginres$data$tokens.access) {\n      props.addUserDetails(loginres.data);\n      history.push(\"/auth/home\");\n    } else {\n      var _loginres$data2;\n\n      toast.error(loginres === null || loginres === void 0 ? void 0 : (_loginres$data2 = loginres.data) === null || _loginres$data2 === void 0 ? void 0 : _loginres$data2.detail); // toast.error(loginres)\n    }\n  }, [loginUser, history]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoginForm, {\n    handleLogin: handleLogin,\n    authorizing: loginData.isFetching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))));\n}\n\n_s(Login, \"hy8HgaoEnB4kM3cbo1NwTPygOPA=\", false, function () {\n  return [useHistory, useSelector];\n});\n\n_c = Login;\n\nconst mapStateToProps = state => ({\n  loginData: state.loginData\n});\n\nconst mapDispatchToProps = {\n  loginUser: loginUser,\n  switchI18nLanguage: switchI18nLanguage,\n  addUserDetails: addUserDetails\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(Login);\n\nconst LoginForm = _ref => {\n  _s2();\n\n  let {\n    authorizing,\n    handleLogin\n  } = _ref;\n  const {\n    t\n  } = useTranslation([\"login\", \"register\"]);\n  const [passwordView, showPassword] = useState(false);\n\n  const togglePassword = () => showPassword(!passwordView);\n\n  const [initialValue] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const loginValidationSchema = YupObject().shape({\n    username: YupString().required(\"login:input.username.error-required\"),\n    password: YupString().required(\"login:input.password.error-required\")\n  });\n  const {\n    values,\n    handleChange,\n    handleSubmit,\n    errors,\n    touched\n  } = useFormik({\n    initialValues: initialValue,\n    validationSchema: loginValidationSchema,\n    onSubmit: (values, _ref2) => {\n      let {\n        setSubmitting\n      } = _ref2;\n      setSubmitting(false);\n      handleLogin(values);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"\",\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Water Asset Management System\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-2 font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"CONFIGURATIONS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group align-vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-4 label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, t(\"login:input.username.title\")), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"username\",\n    value: values.username,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"username\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group align-vertical mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"mr-4 label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, t(\"login:input.password.title\")), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"password\",\n    name: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: `${passwordView ? \"ic-view\" : \"ic-hidden\"} text-coolGray600`,\n    role: \"button\",\n    onClick: togglePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikValidationError, {\n    name: \"password\",\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-outlined-primary\",\n    text: t(\"login:title\"),\n    disabled: authorizing,\n    loading: authorizing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s2(LoginForm, \"0fXJTi0DIeVRJUGjCJjViCItp6o=\", false, function () {\n  return [useTranslation, useFormik];\n});\n\n_c3 = LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/core/Public/Login/Login.tsx"],"names":["FormikValidationError","toast","Button","useFormik","React","useCallback","useState","useTranslation","connect","shallowEqual","useSelector","useHistory","switchI18nLanguage","loginUser","addUserDetails","object","YupObject","string","YupString","Login","props","loginData","history","i18nextData","state","handleLogin","userDetails","loginres","data","tokens","access","push","error","detail","isFetching","mapStateToProps","mapDispatchToProps","connector","LoginForm","authorizing","t","passwordView","showPassword","togglePassword","initialValue","username","password","loginValidationSchema","shape","required","values","handleChange","handleSubmit","errors","touched","initialValues","validationSchema","onSubmit","setSubmitting"],"mappings":"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","sourcesContent":["import FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { ReactElement, useCallback, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps, shallowEqual, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { switchI18nLanguage } from \"store/modules/i18n/i18n\";\r\nimport { loginUser } from \"store/modules/login/login\";\r\nimport { addUserDetails } from \"store/modules/userDetails\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { object as YupObject, string as YupString } from \"yup\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\nexport interface UserCredentials {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nfunction Login(props: Props): ReactElement {\r\n  const { loginData, loginUser, switchI18nLanguage } = props;\r\n\r\n  const history = useHistory();\r\n  const i18nextData = useSelector((state: RootState) => state.i18nextData, shallowEqual);\r\n\r\n  const handleLogin = useCallback(\r\n    async (userDetails: UserCredentials) => {\r\n      const loginres: any = await loginUser(userDetails);\r\n \r\n      if (loginres?.data?.tokens?.access) {\r\n        props.addUserDetails(loginres.data);\r\n        history.push(\"/auth/home\");\r\n      } else {\r\n        toast.error(loginres?.data?.detail);\r\n        // toast.error(loginres)\r\n      }\r\n    },\r\n    [loginUser, history]\r\n  );\r\n\r\n  return (\r\n    <div className=\"app bg-white\">\r\n      <div className=\"container\">\r\n        <div className=\"auth-wrapper\">\r\n          <LoginForm handleLogin={handleLogin} authorizing={loginData.isFetching} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  loginData: state.loginData,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loginUser: loginUser,\r\n  switchI18nLanguage: switchI18nLanguage,\r\n  addUserDetails: addUserDetails,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\nexport default connector(Login);\r\n\r\ninterface LoginFormProps {\r\n  handleLogin: (credentials: UserCredentials) => void;\r\n  /**Status indicating if login is initiating */\r\n  authorizing: boolean;\r\n}\r\nconst LoginForm = ({ authorizing, handleLogin }: LoginFormProps) => {\r\n  const { t } = useTranslation([\"login\", \"register\"]);\r\n\r\n  const [passwordView, showPassword] = useState(false);\r\n  const togglePassword = () => showPassword(!passwordView);\r\n  const [initialValue] = useState({ username: \"\", password: \"\" });\r\n\r\n  const loginValidationSchema = YupObject().shape({\r\n    username: YupString().required(\"login:input.username.error-required\"),\r\n    password: YupString().required(\"login:input.password.error-required\"),\r\n  });\r\n\r\n  const { values, handleChange, handleSubmit, errors, touched } = useFormik({\r\n    initialValues: initialValue,\r\n    validationSchema: loginValidationSchema,\r\n    onSubmit: (values, { setSubmitting }) => {\r\n      setSubmitting(false);\r\n      handleLogin(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"auth-body\">\r\n      <form className=\"\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n        {/* <h5 className=\"mb-2 font-bold\">Water</h5> */}\r\n        <p className=\"\">Water Asset Management System</p>\r\n\r\n        <h6 className=\"mb-2 font-bold\">CONFIGURATIONS</h6>\r\n\r\n        <div className=\"auth-form\">\r\n          <div className=\"form-group align-vertical\">\r\n            <label htmlFor=\"\" className=\"mr-4 label\">\r\n              {t(\"login:input.username.title\")}\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              value={values.username}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <FormikValidationError name=\"username\" errors={errors} touched={touched} />\r\n          </div>\r\n\r\n          <div className=\"form-group align-vertical mt-4\">\r\n            <label htmlFor=\"\" className=\"mr-4 label\">\r\n              {t(\"login:input.password.title\")}\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n\r\n            <span\r\n              className={`${passwordView ? \"ic-view\" : \"ic-hidden\"} text-coolGray600`}\r\n              role=\"button\"\r\n              onClick={togglePassword}\r\n            ></span>\r\n            <FormikValidationError name=\"password\" errors={errors} touched={touched} />\r\n          </div>\r\n\r\n          <div className=\"auth-footer\">\r\n            {/* <div className=\"flex-grow-1 des\">\r\n                    <span className=\"text-coolGray600\">{t(\"login:dontHaveAnAccount.title\")} </span>\r\n                    <Link to=\"/register\" className=\"text-blue\">{t(\"register:title\")}</Link>\r\n                </div> */}\r\n            <Button\r\n              className=\"btn btn-outlined-primary\"\r\n              text={t(\"login:title\")}\r\n              disabled={authorizing}\r\n              loading={authorizing}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}