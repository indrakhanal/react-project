{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{apiList}from\"../../actionNames\";import initDefaultAction from\"../../helper/default-action\";import initDispatchTypes from\"../../helper/default-action-type\";import initDefaultReducer from\"../../helper/default-reducer\";import initialState from\"../../helper/default-state\";import TokenService from\"../../../services/jwt-token/jwt-token\";var initialLoginState=initialState;var apiDetails=Object.freeze(apiList.oauth.login);export default function loginReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialLoginState;var action=arguments.length>1?arguments[1]:undefined;var stateCopy=Object.assign({},state);var actionName=apiDetails.actionName;return initDefaultReducer(actionName,action,stateCopy);}export var loginUser=function loginUser(requestData){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _loginData$data,_loginData$data$token,_loginData$data2,_loginData$data2$toke;var loginData,dispatchTypes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return initDefaultAction(apiDetails,dispatch,{requestData:requestData,disableSuccessToast:true});case 2:loginData=_context.sent;if(loginData&&loginData.data&&loginData!==null&&loginData!==void 0&&(_loginData$data=loginData.data)!==null&&_loginData$data!==void 0&&(_loginData$data$token=_loginData$data.tokens)!==null&&_loginData$data$token!==void 0&&_loginData$data$token.access&&typeof(loginData===null||loginData===void 0?void 0:(_loginData$data2=loginData.data)===null||_loginData$data2===void 0?void 0:(_loginData$data2$toke=_loginData$data2.tokens)===null||_loginData$data2$toke===void 0?void 0:_loginData$data2$toke.access)===\"string\"){dispatchTypes=initDispatchTypes(apiDetails.actionName);// Override login dispatch to remove data except tokens.access\ndispatch({type:dispatchTypes.successDispatch,payload:{status:1,data:loginData.data.tokens.access}});TokenService.setToken(loginData.data);}return _context.abrupt(\"return\",loginData);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":null,"metadata":{},"sourceType":"module"}