{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\src\\\\core\\\\Protected\\\\Finance\\\\CashBook\\\\Expenditure\\\\CashbookExpenditureTable.tsx\",\n    _s = $RefreshSig$();\n\nimport { DeleteIcon, EditIconDark } from \"assets/images/xd\";\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\nimport Button from \"components/UI/Forms/Buttons\";\nimport GeneralModal from \"components/UI/GeneralModal\";\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { deleteExpenditureAction } from \"store/modules/expenditure/deleteExpense\";\nimport { getExpenditureAction } from \"store/modules/expenditure/getExpenditure\";\nimport { getExpenditureCategoryAction } from \"store/modules/expenditure/getExpenditureCategory\";\nimport { getPreviousExpenditureTotalAction } from \"store/modules/expenditure/getPreviousExpenditureTotal\";\nimport { getDefaultDate } from \"utils/utilsFunction/date-converter\";\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport ManageExpenditureCatagories from \"./ManageExpenditureCategories\";\n\nconst CashbookExpenditureTable = props => {\n  _s();\n\n  var _sortAplabetically, _sortAplabetically2, _sortAplabetically4;\n\n  const [editData, setEditData] = useState();\n  const [categoriesModal, setCategoriesModal] = useState(false);\n  const [expenseModal, setExpenseModal] = useState(false);\n\n  const toggle = () => setCategoriesModal(!categoriesModal);\n\n  const toggleIncomeModal = () => {\n    setExpenseModal(!expenseModal);\n  };\n\n  const {\n    expenditureData,\n    expenditureCategories,\n    language,\n    schemeSlug,\n    schemeDetails,\n    previousExpenditureTotal,\n    getExpenditureAction,\n    getExpenditureCategoryAction,\n    getPreviousExpenditureTotalAction\n  } = props;\n  const {\n    editId,\n    modal,\n    handleDeleteClick,\n    resetDeleteData,\n    toggleModal\n  } = useDeleteConfirmation(); // 2020 = 2020\n  // props.activeDate?.split(\"-\")[1] =9\n\n  useEffect(() => {\n    if (language && schemeSlug && schemeDetails && props.activeTab) {\n      if (props.activeTab === \"2\") {\n        var _props$activeDate, _getDefaultDate, _props$activeDate2, _getDefaultDate2, _props$activeDate3, _getDefaultDate3, _props$activeDate4, _getDefaultDate4;\n\n        getExpenditureAction(language, schemeSlug, ((_props$activeDate = props.activeDate) === null || _props$activeDate === void 0 ? void 0 : _props$activeDate.split(\"-\")[0]) || ((_getDefaultDate = getDefaultDate(schemeDetails === null || schemeDetails === void 0 ? void 0 : schemeDetails.system_date_format)) === null || _getDefaultDate === void 0 ? void 0 : _getDefaultDate.split(\"-\")[0]), ((_props$activeDate2 = props.activeDate) === null || _props$activeDate2 === void 0 ? void 0 : _props$activeDate2.split(\"-\")[1]) || ((_getDefaultDate2 = getDefaultDate(schemeDetails === null || schemeDetails === void 0 ? void 0 : schemeDetails.system_date_format)) === null || _getDefaultDate2 === void 0 ? void 0 : _getDefaultDate2.split(\"-\")[1]));\n        getExpenditureCategoryAction(schemeSlug);\n        getPreviousExpenditureTotalAction(language, schemeSlug, ((_props$activeDate3 = props.activeDate) === null || _props$activeDate3 === void 0 ? void 0 : _props$activeDate3.split(\"-\")[0]) || ((_getDefaultDate3 = getDefaultDate(schemeDetails === null || schemeDetails === void 0 ? void 0 : schemeDetails.system_date_format)) === null || _getDefaultDate3 === void 0 ? void 0 : _getDefaultDate3.split(\"-\")[0]), ((_props$activeDate4 = props.activeDate) === null || _props$activeDate4 === void 0 ? void 0 : _props$activeDate4.split(\"-\")[1]) || ((_getDefaultDate4 = getDefaultDate(schemeDetails === null || schemeDetails === void 0 ? void 0 : schemeDetails.system_date_format)) === null || _getDefaultDate4 === void 0 ? void 0 : _getDefaultDate4.split(\"-\")[1]));\n      }\n    }\n  }, [language, props.activeDate, schemeSlug, schemeDetails, props.activeTab]);\n  const {\n    t\n  } = useTranslation();\n\n  const handleDelete = async () => {\n    try {\n      const response = await props.deleteExpenditureAction(editId);\n\n      if (response.status === 204) {\n        toast.success(t(\"home:deleteSuccess\"));\n        props.getExpenditureAction(props.language, props.schemeSlug);\n        resetDeleteData();\n      } else {\n        toast.error(t(\"home:deleteError\"));\n        resetDeleteData();\n      }\n    } catch (error) {\n      console.log(error, \"error\");\n    }\n  };\n\n  const handleEdit = data => {\n    setEditData(data);\n    toggleIncomeModal();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn  mr-3\",\n    text: t(\"finance:addTxn\"),\n    onClick: toggleIncomeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn custom-btn  mr-3\",\n    text: t(\"finance:manageEC\") // disabled={authorizing}\n    // loading={authorizing}\n    ,\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-table table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, t(\"cashbook:date\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, t(\"cashbook:description\")), (_sortAplabetically = sortAplabetically(expenditureCategories, \"name\")) === null || _sortAplabetically === void 0 ? void 0 : _sortAplabetically.map((category, index) => /*#__PURE__*/React.createElement(\"th\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, category.name)), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, t(\"cashbook:from-prev-month\")), (_sortAplabetically2 = sortAplabetically(expenditureCategories, \"name\")) === null || _sortAplabetically2 === void 0 ? void 0 : _sortAplabetically2.map((incomeCategory, index) => {\n    var _previousExpenditureT;\n\n    const findData = previousExpenditureTotal === null || previousExpenditureTotal === void 0 ? void 0 : (_previousExpenditureT = previousExpenditureTotal.previous_month_data) === null || _previousExpenditureT === void 0 ? void 0 : _previousExpenditureT.find(prev => prev.expense_category_name === incomeCategory.name);\n\n    if (findData) {\n      var _props$schemeDetails;\n\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 23\n        }\n      }, (_props$schemeDetails = props.schemeDetails) === null || _props$schemeDetails === void 0 ? void 0 : _props$schemeDetails.currency, \" \", findData.total_expense_amount);\n    } else {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 28\n        }\n      }, \"-\");\n    }\n  })), expenditureData === null || expenditureData === void 0 ? void 0 : expenditureData.map((income, index) => {\n    var _sortAplabetically3;\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, language === \"en\" ? income.date : income.date_np), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, income.title), (_sortAplabetically3 = sortAplabetically(expenditureCategories, \"name\")) === null || _sortAplabetically3 === void 0 ? void 0 : _sortAplabetically3.map((incomeCategory, index) => {\n      if (income.category.name === incomeCategory.name) {\n        var _props$schemeDetails2;\n\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 27\n          }\n        }, (_props$schemeDetails2 = props.schemeDetails) === null || _props$schemeDetails2 === void 0 ? void 0 : _props$schemeDetails2.currency, \" \", income.income_amount);\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 32\n          }\n        }, \"-\");\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"button\",\n      onClick: e => {\n        e.stopPropagation();\n        handleEdit(income);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: EditIconDark,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      role: \"button\",\n      onClick: e => {\n        e.stopPropagation();\n        handleDeleteClick(income.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: DeleteIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    }))));\n  }), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, t(\"cashbook:total\")), (_sortAplabetically4 = sortAplabetically(expenditureCategories, \"name\")) === null || _sortAplabetically4 === void 0 ? void 0 : _sortAplabetically4.map((incomeCategory, index) => {\n    var _previousExpenditureT2;\n\n    const findData = previousExpenditureTotal === null || previousExpenditureTotal === void 0 ? void 0 : (_previousExpenditureT2 = previousExpenditureTotal.present_month_data) === null || _previousExpenditureT2 === void 0 ? void 0 : _previousExpenditureT2.find(prev => prev.expense_category_name === incomeCategory.name);\n\n    if (findData) {\n      var _props$schemeDetails3;\n\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 23\n        }\n      }, (_props$schemeDetails3 = props.schemeDetails) === null || _props$schemeDetails3 === void 0 ? void 0 : _props$schemeDetails3.currency, \" \", findData.total_expense_amount);\n    } else {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 28\n        }\n      }, \"-\");\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(GeneralModal, {\n    title: t(\"finance:manageEC\"),\n    open: categoriesModal,\n    toggle: toggle,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ManageExpenditureCatagories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(GeneralModal, {\n    title: t(\"home:addEdit\") + \" \" + t(\"home:expense\"),\n    size: \"lg\",\n    open: expenseModal,\n    toggle: () => {\n      if (expenseModal) {\n        setEditData(null);\n      }\n\n      toggleIncomeModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ExpenseForm, {\n    editData: editData,\n    setEditData: setEditData,\n    toggle: setExpenseModal,\n    activeDate: props.activeDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ConfirmationModal, {\n    open: modal,\n    handleModal: () => toggleModal(),\n    handleConfirmClick: () => handleDelete(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(CashbookExpenditureTable, \"JpJILkC6ojOwK/d1xKRzXt4wd/k=\", false, function () {\n  return [useDeleteConfirmation, useTranslation];\n});\n\n_c = CashbookExpenditureTable;\n\nconst mapStateToProps = state => {\n  var _state$waterSchemeDat;\n\n  return {\n    language: state.i18nextData.languageType,\n    sliderImages: state.incomeData.getIncomeExpenseImgae.data,\n    schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\n    schemeSlug: (_state$waterSchemeDat = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat === void 0 ? void 0 : _state$waterSchemeDat.slug,\n    expenditureData: state.expenditureData.getExpenditureData.data,\n    expenditureCategories: state.expenditureData.getExpenditureCategory.data,\n    previousExpenditureTotal: state.expenditureData.getPreviousExpenditureTotal.data\n  };\n};\n\nconst mapDispatchToProps = {\n  getExpenditureAction: getExpenditureAction,\n  deleteExpenditureAction: deleteExpenditureAction,\n  getExpenditureCategoryAction: getExpenditureCategoryAction,\n  getPreviousExpenditureTotalAction: getPreviousExpenditureTotalAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(CashbookExpenditureTable);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CashbookExpenditureTable\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/core/Protected/Finance/CashBook/Expenditure/CashbookExpenditureTable.tsx"],"names":["DeleteIcon","EditIconDark","toast","ConfirmationModal","Button","GeneralModal","useDeleteConfirmation","React","useEffect","useState","useTranslation","connect","deleteExpenditureAction","getExpenditureAction","getExpenditureCategoryAction","getPreviousExpenditureTotalAction","getDefaultDate","sortAplabetically","ExpenseForm","ManageExpenditureCatagories","CashbookExpenditureTable","props","editData","setEditData","categoriesModal","setCategoriesModal","expenseModal","setExpenseModal","toggle","toggleIncomeModal","expenditureData","expenditureCategories","language","schemeSlug","schemeDetails","previousExpenditureTotal","editId","modal","handleDeleteClick","resetDeleteData","toggleModal","activeTab","activeDate","split","system_date_format","t","handleDelete","response","status","success","error","console","log","handleEdit","data","map","category","index","name","incomeCategory","findData","previous_month_data","find","prev","expense_category_name","currency","total_expense_amount","income","date","date_np","title","income_amount","e","stopPropagation","id","present_month_data","mapStateToProps","state","i18nextData","languageType","sliderImages","incomeData","getIncomeExpenseImgae","waterSchemeData","waterSchemeDetailsData","slug","getExpenditureData","getExpenditureCategory","getPreviousExpenditureTotal","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import { DeleteIcon, EditIconDark } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { deleteExpenditureAction } from \"store/modules/expenditure/deleteExpense\";\r\nimport { getExpenditureAction } from \"store/modules/expenditure/getExpenditure\";\r\nimport { getExpenditureCategoryAction } from \"store/modules/expenditure/getExpenditureCategory\";\r\nimport { getPreviousExpenditureTotalAction } from \"store/modules/expenditure/getPreviousExpenditureTotal\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport ManageExpenditureCatagories from \"./ManageExpenditureCategories\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  activeDate: string;\r\n  activeTab: string;\r\n}\r\n\r\nconst CashbookExpenditureTable = (props: Props) => {\r\n  const [editData, setEditData] = useState<any>();\r\n  const [categoriesModal, setCategoriesModal] = useState(false);\r\n  const [expenseModal, setExpenseModal] = useState(false);\r\n  const toggle = () => setCategoriesModal(!categoriesModal);\r\n  const toggleIncomeModal = () => {\r\n    setExpenseModal(!expenseModal);\r\n  };\r\n\r\n  const {\r\n    expenditureData,\r\n    expenditureCategories,\r\n    language,\r\n    schemeSlug,\r\n    schemeDetails,\r\n    previousExpenditureTotal,\r\n    getExpenditureAction,\r\n    getExpenditureCategoryAction,\r\n    getPreviousExpenditureTotalAction,\r\n  } = props;\r\n\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } =\r\n    useDeleteConfirmation();\r\n\r\n  // 2020 = 2020\r\n  // props.activeDate?.split(\"-\")[1] =9\r\n\r\n  useEffect(() => {\r\n    if (language && schemeSlug && schemeDetails && props.activeTab) {\r\n      if (props.activeTab === \"2\") {\r\n        getExpenditureAction(\r\n          language,\r\n          schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n        getExpenditureCategoryAction(schemeSlug);\r\n        getPreviousExpenditureTotalAction(\r\n          language,\r\n          schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n      }\r\n    }\r\n  }, [language, props.activeDate, schemeSlug, schemeDetails, props.activeTab]);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      const response = await props.deleteExpenditureAction(editId);\r\n      if (response.status === 204) {\r\n        toast.success(t(\"home:deleteSuccess\"));\r\n        props.getExpenditureAction(props.language, props.schemeSlug);\r\n        resetDeleteData();\r\n      } else {\r\n        toast.error(t(\"home:deleteError\"));\r\n        resetDeleteData();\r\n      }\r\n    } catch (error) {\r\n      console.log(error, \"error\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (data) => {\r\n    setEditData(data);\r\n    toggleIncomeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        <div className=\"row my-3\">\r\n          <div className=\"col-6 text-left\">\r\n            <Button\r\n              className=\"btn custom-btn  mr-3\"\r\n              text={t(\"finance:addTxn\")}\r\n              onClick={toggleIncomeModal}\r\n            />\r\n          </div>\r\n          <div className=\"col-6 text-right\">\r\n            <Button\r\n              className=\"btn custom-btn  mr-3\"\r\n              text={t(\"finance:manageEC\")}\r\n              // disabled={authorizing}\r\n              // loading={authorizing}\r\n              onClick={toggle}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"data-table table-responsive\">\r\n          <table className=\"table mt-2\">\r\n            <thead>\r\n              <tr>\r\n                <th>{t(\"cashbook:date\")}</th>\r\n                <th>{t(\"cashbook:description\")}</th>\r\n                {sortAplabetically(expenditureCategories, \"name\")?.map((category, index) => (\r\n                  <th key={index}>{category.name}</th>\r\n                ))}\r\n                <th className=\"text-center\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td></td>\r\n                <td>{t(\"cashbook:from-prev-month\")}</td>\r\n                {sortAplabetically(expenditureCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  const findData = previousExpenditureTotal?.previous_month_data?.find(\r\n                    (prev) => prev.expense_category_name === incomeCategory.name\r\n                  );\r\n                  if (findData) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {findData.total_expense_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n              </tr>\r\n\r\n              {expenditureData?.map((income, index) => (\r\n                <tr key={index}>\r\n                  <td>{language === \"en\" ? income.date : income.date_np}</td>\r\n                  <td>{income.title}</td>\r\n                  {sortAplabetically(expenditureCategories, \"name\")?.map(\r\n                    (incomeCategory, index) => {\r\n                      if (income.category.name === incomeCategory.name) {\r\n                        return (\r\n                          <td key={index}>\r\n                            {props.schemeDetails?.currency} {income.income_amount}\r\n                          </td>\r\n                        );\r\n                      } else {\r\n                        return <td key={index}>-</td>;\r\n                      }\r\n                    }\r\n                  )}\r\n                  <td className=\"action\">\r\n                    <div\r\n                      role=\"button\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleEdit(income);\r\n                      }}\r\n                    >\r\n                      <img src={EditIconDark} alt=\"\" />\r\n                    </div>\r\n                    <div\r\n                      role=\"button\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleDeleteClick(income.id);\r\n                      }}\r\n                    >\r\n                      <img src={DeleteIcon} alt=\"\" />\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n\r\n              <tr>\r\n                <td></td>\r\n                <td>{t(\"cashbook:total\")}</td>\r\n                {sortAplabetically(expenditureCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  const findData = previousExpenditureTotal?.present_month_data?.find(\r\n                    (prev) => prev.expense_category_name === incomeCategory.name\r\n                  );\r\n                  if (findData) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {findData.total_expense_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n                <td></td>\r\n              </tr>\r\n\r\n              {/* {props.sliderImages &&\r\n              props.sliderImages instanceof Array &&\r\n              props.sliderImages?.length > 0 && (\r\n                <>\r\n                  <tr role=\"button\" onClick={() => setCategoriesModal(true)}>\r\n                    <td>\r\n                      <img src={CameraIcon} alt=\"\" /> &nbsp;&nbsp; Paper Cashbook Image -{\" \"}\r\n                      {getMonthByLanguageAndScheme(\r\n                        \"\" + 9,\r\n                        // getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1],\r\n                        props.schemeDetails?.system_date_format\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </>\r\n              )} */}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <GeneralModal\r\n          title={t(\"finance:manageEC\")}\r\n          open={categoriesModal}\r\n          toggle={toggle}\r\n          size=\"lg\"\r\n        >\r\n          <ManageExpenditureCatagories />\r\n        </GeneralModal>\r\n\r\n        <GeneralModal\r\n          title={t(\"home:addEdit\") + \" \" + t(\"home:expense\")}\r\n          size=\"lg\"\r\n          open={expenseModal}\r\n          toggle={() => {\r\n            if (expenseModal) {\r\n              setEditData(null);\r\n            }\r\n            toggleIncomeModal();\r\n          }}\r\n        >\r\n          <ExpenseForm\r\n            editData={editData}\r\n            setEditData={setEditData}\r\n            toggle={setExpenseModal}\r\n            activeDate={props.activeDate}\r\n          />\r\n        </GeneralModal>\r\n\r\n        <ConfirmationModal\r\n          open={modal}\r\n          handleModal={() => toggleModal()}\r\n          handleConfirmClick={() => handleDelete()}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  sliderImages: state.incomeData.getIncomeExpenseImgae.data,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  expenditureData: state.expenditureData.getExpenditureData.data,\r\n  expenditureCategories: state.expenditureData.getExpenditureCategory.data,\r\n  previousExpenditureTotal: state.expenditureData.getPreviousExpenditureTotal.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getExpenditureAction: getExpenditureAction,\r\n  deleteExpenditureAction: deleteExpenditureAction,\r\n  getExpenditureCategoryAction: getExpenditureCategoryAction,\r\n  getPreviousExpenditureTotalAction: getPreviousExpenditureTotalAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CashbookExpenditureTable);\r\n"]},"metadata":{},"sourceType":"module"}