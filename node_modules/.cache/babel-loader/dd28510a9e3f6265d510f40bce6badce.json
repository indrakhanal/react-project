{"ast":null,"code":"import { apiList } from \"../../actionNames\";\nimport initDefaultAction from \"../../helper/default-action\";\nimport initDefaultReducer from \"../../helper/default-reducer\";\nimport initialState from \"../../helper/default-state\";\nconst apiDetails = Object.freeze(apiList.icome.getIcome);\nexport default function getIncomeReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const stateCopy = Object.assign({}, state);\n  const actionName = apiDetails.actionName;\n  return initDefaultReducer(actionName, action, stateCopy);\n}\nexport const getIncomeAction = (lang, water_scheme_slug, year, month) => async dispatch => {\n  const variables = {\n    disableSuccessToast: true,\n    pathVariables: {\n      lang,\n      water_scheme_slug\n    }\n  };\n  if (year && month) variables['params'] = {\n    year,\n    month\n  };\n  return await initDefaultAction(apiDetails, dispatch, variables);\n};","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/store/modules/income/getIcome.ts"],"names":["apiList","initDefaultAction","initDefaultReducer","initialState","apiDetails","Object","freeze","icome","getIcome","getIncomeReducer","state","action","stateCopy","assign","actionName","getIncomeAction","lang","water_scheme_slug","year","month","dispatch","variables","disableSuccessToast","pathVariables"],"mappings":"AAGA,SAASA,OAAT,QAAwB,mBAAxB;AACA,OAAOC,iBAAP,MAAqD,6BAArD;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAaA,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcN,OAAO,CAACO,KAAR,CAAcC,QAA5B,CAAnB;AAEA,eAAe,SAASC,gBAAT,GAAiG;AAAA,MAAvEC,KAAuE,uEAA/DP,YAA+D;AAAA,MAAjDQ,MAAiD;AAC5G,QAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAP,CAAc,EAAd,EAAkBH,KAAlB,CAAlB;AACA,QAAMI,UAAU,GAAGV,UAAU,CAACU,UAA9B;AAEA,SAAOZ,kBAAkB,CAACY,UAAD,EAAaH,MAAb,EAAqBC,SAArB,CAAzB;AACH;AAED,OAAO,MAAMG,eAAe,GAAG,CAACC,IAAD,EAAOC,iBAAP,EAA0BC,IAA1B,EAAyCC,KAAzC,KAAqG,MAAOC,QAAP,IAA8B;AAE9J,QAAMC,SAAS,GAAG;AAAEC,IAAAA,mBAAmB,EAAE,IAAvB;AAA6BC,IAAAA,aAAa,EAAE;AAAEP,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAA5C,GAAlB;AAEA,MAAIC,IAAI,IAAIC,KAAZ,EAAmBE,SAAS,CAAC,QAAD,CAAT,GAAsB;AAAEH,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAtB;AAEnB,SAAO,MAAMlB,iBAAiB,CAACG,UAAD,EAAagB,QAAb,EAAuBC,SAAvB,CAA9B;AACH,CAPM","sourcesContent":["import { Dispatch } from \"redux\";\r\nimport { AppThunk } from \"../..\";\r\n\r\nimport { apiList } from \"../../actionNames\";\r\nimport initDefaultAction, { APIResponseDetail } from \"../../helper/default-action\";\r\nimport initDefaultReducer from \"../../helper/default-reducer\";\r\nimport initialState from \"../../helper/default-state\";\r\n\r\n\r\nexport type IncomeType = {\r\n    category: { id: number, name: string }\r\n    date: string\r\n    date_np: string\r\n    id: number\r\n    income_amount: number\r\n    title: string\r\n    water_supplied: number\r\n}[]\r\n\r\nconst apiDetails = Object.freeze(apiList.icome.getIcome);\r\n\r\nexport default function getIncomeReducer(state = initialState, action: DefaultAction): DefaultState<IncomeType> {\r\n    const stateCopy = Object.assign({}, state);\r\n    const actionName = apiDetails.actionName;\r\n\r\n    return initDefaultReducer(actionName, action, stateCopy);\r\n}\r\n\r\nexport const getIncomeAction = (lang, water_scheme_slug, year?: string, month?: string): AppThunk<APIResponseDetail<IncomeType>> => async (dispatch: Dispatch) => {\r\n\r\n    const variables = { disableSuccessToast: true, pathVariables: { lang, water_scheme_slug } }\r\n\r\n    if (year && month) variables['params'] = { year, month } \r\n\r\n    return await initDefaultAction(apiDetails, dispatch, variables);\r\n};"]},"metadata":{},"sourceType":"module"}