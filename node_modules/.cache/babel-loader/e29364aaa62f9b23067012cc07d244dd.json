{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\src\\\\core\\\\Public\\\\Finance\\\\CashBook\\\\CashbookTable.tsx\",\n    _s = $RefreshSig$();\n\nimport { CameraIcon } from \"assets/images/xd\";\nimport { ADToBS } from \"components/React/Datepicker/Datepickerutils\";\nimport GeneralModal from \"components/UI/GeneralModal\";\nimport Slider from \"components/UI/Slider\";\nimport { getMonthByLanguageAndScheme } from \"i18n/i18n\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { Table } from \"reactstrap\";\nimport { getIncomeAction } from \"store/modules/income/getIcome\";\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\nimport { getIncomeExpenseImageAction } from \"store/modules/income/getIncomeExpenseImgae\";\nimport { getPreviousIncomeTotalAction } from \"store/modules/income/getPreviousIncomeTotal\";\nimport { getDefaultDate } from \"utils/utilsFunction/date-converter\";\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\n\nconst CashbookTable = props => {\n  _s();\n\n  var _sortAplabetically, _sortAplabetically2, _sortAplabetically4, _props$sliderImages, _props$activeDate5, _props$schemeDetails4;\n\n  const {\n    t\n  } = useTranslation([\"cashbook\"]);\n  const {\n    incomeData,\n    incomeCategories,\n    language,\n    schemeSlug,\n    schemeDetails,\n    previousIncomeTotal,\n    incomeExpenseImage,\n    getIncomeAction,\n    getIncomeCategoryAction,\n    getPreviousIncomeTotalAction,\n    getIncomeExpenseImageAction\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  console.log(props.activeDate, \"props.activeDateprops.activeDate\");\n  useEffect(() => {\n    if (language && schemeSlug && schemeDetails && props.activeTab && props.activeDate) {\n      if (props.activeTab === \"1\") {\n        var _props$activeDate, _getDefaultDate, _props$activeDate2, _getDefaultDate2, _props$activeDate3, _getDefaultDate3, _props$activeDate4, _getDefaultDate4;\n\n        getIncomeAction(language, schemeSlug, ((_props$activeDate = props.activeDate) === null || _props$activeDate === void 0 ? void 0 : _props$activeDate.split(\"-\")[0]) || ((_getDefaultDate = getDefaultDate(schemeDetails === null || schemeDetails === void 0 ? void 0 : schemeDetails.system_date_format)) === null || _getDefaultDate === void 0 ? void 0 : _getDefaultDate.split(\"-\")[0]), ((_props$activeDate2 = props.activeDate) === null || _props$activeDate2 === void 0 ? void 0 : _props$activeDate2.split(\"-\")[1]) || ((_getDefaultDate2 = getDefaultDate(schemeDetails === null || schemeDetails === void 0 ? void 0 : schemeDetails.system_date_format)) === null || _getDefaultDate2 === void 0 ? void 0 : _getDefaultDate2.split(\"-\")[1]));\n        getIncomeCategoryAction(schemeSlug);\n        getPreviousIncomeTotalAction(language, schemeSlug, ((_props$activeDate3 = props.activeDate) === null || _props$activeDate3 === void 0 ? void 0 : _props$activeDate3.split(\"-\")[0]) || ((_getDefaultDate3 = getDefaultDate(schemeDetails === null || schemeDetails === void 0 ? void 0 : schemeDetails.system_date_format)) === null || _getDefaultDate3 === void 0 ? void 0 : _getDefaultDate3.split(\"-\")[0]), ((_props$activeDate4 = props.activeDate) === null || _props$activeDate4 === void 0 ? void 0 : _props$activeDate4.split(\"-\")[1]) || ((_getDefaultDate4 = getDefaultDate(schemeDetails === null || schemeDetails === void 0 ? void 0 : schemeDetails.system_date_format)) === null || _getDefaultDate4 === void 0 ? void 0 : _getDefaultDate4.split(\"-\")[1]));\n        getIncomeExpenseImageAction(language, schemeSlug, props.activeDate || ADToBS(new Date()));\n      }\n    }\n  }, [language, props.activeDate, schemeSlug, schemeDetails, props.activeTab]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"table-02 table-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, t(\"cashbook:date\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, t(\"cashbook:description\")), (_sortAplabetically = sortAplabetically(incomeCategories, \"name\")) === null || _sortAplabetically === void 0 ? void 0 : _sortAplabetically.map((incomeCategory, index) => /*#__PURE__*/React.createElement(\"th\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, incomeCategory.name)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, t(\"cashbook:from-prev-month\")), (_sortAplabetically2 = sortAplabetically(incomeCategories, \"name\")) === null || _sortAplabetically2 === void 0 ? void 0 : _sortAplabetically2.map((incomeCategory, index) => {\n    var _previousIncomeTotal$;\n\n    const findData = previousIncomeTotal === null || previousIncomeTotal === void 0 ? void 0 : (_previousIncomeTotal$ = previousIncomeTotal.previous_month_data) === null || _previousIncomeTotal$ === void 0 ? void 0 : _previousIncomeTotal$.find(prev => prev.income_category_name === incomeCategory.name);\n\n    if (findData) {\n      var _props$schemeDetails;\n\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, (_props$schemeDetails = props.schemeDetails) === null || _props$schemeDetails === void 0 ? void 0 : _props$schemeDetails.currency, \" \", findData.total_income_amount);\n    } else {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 26\n        }\n      }, \"-\");\n    }\n  })), incomeData === null || incomeData === void 0 ? void 0 : incomeData.map((income, index) => {\n    var _sortAplabetically3;\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, language === \"en\" ? income.date : income.date_np), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, income.title), (_sortAplabetically3 = sortAplabetically(incomeCategories, \"name\")) === null || _sortAplabetically3 === void 0 ? void 0 : _sortAplabetically3.map((incomeCategory, index) => {\n      if (income.category.name === incomeCategory.name) {\n        var _props$schemeDetails2;\n\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 23\n          }\n        }, (_props$schemeDetails2 = props.schemeDetails) === null || _props$schemeDetails2 === void 0 ? void 0 : _props$schemeDetails2.currency, \" \", income.income_amount);\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 28\n          }\n        }, \"-\");\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, t(\"cashbook:total\")), (_sortAplabetically4 = sortAplabetically(incomeCategories, \"name\")) === null || _sortAplabetically4 === void 0 ? void 0 : _sortAplabetically4.map((incomeCategory, index) => {\n    var _previousIncomeTotal$2;\n\n    const findData = previousIncomeTotal === null || previousIncomeTotal === void 0 ? void 0 : (_previousIncomeTotal$2 = previousIncomeTotal.present_month_data) === null || _previousIncomeTotal$2 === void 0 ? void 0 : _previousIncomeTotal$2.find(prev => prev.income_category_name === incomeCategory.name);\n\n    if (findData) {\n      var _props$schemeDetails3;\n\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, (_props$schemeDetails3 = props.schemeDetails) === null || _props$schemeDetails3 === void 0 ? void 0 : _props$schemeDetails3.currency, \" \", findData.total_income_amount);\n    } else {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 26\n        }\n      }, \"-\");\n    }\n  })), props.sliderImages && props.sliderImages instanceof Array && ((_props$sliderImages = props.sliderImages) === null || _props$sliderImages === void 0 ? void 0 : _props$sliderImages.length) > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n    role: \"button\",\n    onClick: () => setModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: CameraIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 23\n    }\n  }), \" \\xA0\\xA0 Paper Cashbook Image -\", \" \", getMonthByLanguageAndScheme((_props$activeDate5 = props.activeDate) === null || _props$activeDate5 === void 0 ? void 0 : _props$activeDate5.split(\"-\")[1], (_props$schemeDetails4 = props.schemeDetails) === null || _props$schemeDetails4 === void 0 ? void 0 : _props$schemeDetails4.system_date_format)))))), /*#__PURE__*/React.createElement(GeneralModal, {\n    open: modal,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(CashbookTable, \"xKq+9o3pEc9o3cEUmEMJo3FAjyQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c = CashbookTable;\n\nconst mapStateToProps = state => {\n  var _state$waterSchemeDat;\n\n  return {\n    language: state.i18nextData.languageType,\n    sliderImages: state.incomeData.getIncomeExpenseImgae.data,\n    schemeSlug: (_state$waterSchemeDat = state.waterSchemeData.waterSchemeDetailsData.data) === null || _state$waterSchemeDat === void 0 ? void 0 : _state$waterSchemeDat.slug,\n    schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\n    incomeData: state.incomeData.getIncomeData.data,\n    incomeCategories: state.incomeData.getIncomeCategory.data,\n    previousIncomeTotal: state.incomeData.getPreviousIncomeTotal.data,\n    incomeExpenseImage: state.incomeData.getIncomeExpenseImgae.data\n  };\n};\n\nconst mapDispatchToProps = {\n  getIncomeAction: getIncomeAction,\n  getIncomeCategoryAction: getIncomeCategoryAction,\n  getPreviousIncomeTotalAction: getPreviousIncomeTotalAction,\n  getIncomeExpenseImageAction: getIncomeExpenseImageAction\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(CashbookTable);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CashbookTable\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/core/Public/Finance/CashBook/CashbookTable.tsx"],"names":["CameraIcon","ADToBS","GeneralModal","Slider","getMonthByLanguageAndScheme","React","useEffect","useState","useTranslation","connect","Table","getIncomeAction","getIncomeCategoryAction","getIncomeExpenseImageAction","getPreviousIncomeTotalAction","getDefaultDate","sortAplabetically","CashbookTable","props","t","incomeData","incomeCategories","language","schemeSlug","schemeDetails","previousIncomeTotal","incomeExpenseImage","modal","setModal","toggle","console","log","activeDate","activeTab","split","system_date_format","Date","map","incomeCategory","index","name","findData","previous_month_data","find","prev","income_category_name","currency","total_income_amount","income","date","date_np","title","category","income_amount","present_month_data","sliderImages","Array","length","mapStateToProps","state","i18nextData","languageType","getIncomeExpenseImgae","data","waterSchemeData","waterSchemeDetailsData","slug","getIncomeData","getIncomeCategory","getPreviousIncomeTotal","mapDispatchToProps","connector"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,6CAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,2BAAT,QAA4C,WAA5C;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,OAAT,QAAwC,aAAxC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,uBAAT,QAAwC,wCAAxC;AACA,SAASC,2BAAT,QAA4C,4CAA5C;AACA,SAASC,4BAAT,QAA6C,6CAA7C;AAEA,SAASC,cAAT,QAA+B,oCAA/B;AACA,SAASC,iBAAT,QAAkC,6BAAlC;;AAOA,MAAMC,aAAa,GAAIC,KAAD,IAAkB;AAAA;;AAAA;;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAQX,cAAc,CAAC,CAAC,UAAD,CAAD,CAA5B;AAEA,QAAM;AACJY,IAAAA,UADI;AAEJC,IAAAA,gBAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,aALI;AAMJC,IAAAA,mBANI;AAOJC,IAAAA,kBAPI;AAQJf,IAAAA,eARI;AASJC,IAAAA,uBATI;AAUJE,IAAAA,4BAVI;AAWJD,IAAAA;AAXI,MAYFK,KAZJ;AAcA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMsB,MAAM,GAAG,MAAMD,QAAQ,CAAC,CAACD,KAAF,CAA7B;;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACc,UAAlB,EAA8B,kCAA9B;AAEA1B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,QAAQ,IAAIC,UAAZ,IAA0BC,aAA1B,IAA2CN,KAAK,CAACe,SAAjD,IAA8Df,KAAK,CAACc,UAAxE,EAAoF;AAClF,UAAId,KAAK,CAACe,SAAN,KAAoB,GAAxB,EAA6B;AAAA;;AAC3BtB,QAAAA,eAAe,CACbW,QADa,EAEbC,UAFa,EAGb,sBAAAL,KAAK,CAACc,UAAN,wEAAkBE,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,0BACEnB,cAAc,CAACS,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAEW,kBAAhB,CADhB,oDACE,gBAAmDD,KAAnD,CAAyD,GAAzD,EAA8D,CAA9D,CADF,CAHa,EAKb,uBAAAhB,KAAK,CAACc,UAAN,0EAAkBE,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,2BACEnB,cAAc,CAACS,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAEW,kBAAhB,CADhB,qDACE,iBAAmDD,KAAnD,CAAyD,GAAzD,EAA8D,CAA9D,CADF,CALa,CAAf;AAQAtB,QAAAA,uBAAuB,CAACW,UAAD,CAAvB;AACAT,QAAAA,4BAA4B,CAC1BQ,QAD0B,EAE1BC,UAF0B,EAG1B,uBAAAL,KAAK,CAACc,UAAN,0EAAkBE,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,2BACEnB,cAAc,CAACS,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAEW,kBAAhB,CADhB,qDACE,iBAAmDD,KAAnD,CAAyD,GAAzD,EAA8D,CAA9D,CADF,CAH0B,EAK1B,uBAAAhB,KAAK,CAACc,UAAN,0EAAkBE,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,2BACEnB,cAAc,CAACS,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAEW,kBAAhB,CADhB,qDACE,iBAAmDD,KAAnD,CAAyD,GAAzD,EAA8D,CAA9D,CADF,CAL0B,CAA5B;AAQArB,QAAAA,2BAA2B,CAACS,QAAD,EAAWC,UAAX,EAAuBL,KAAK,CAACc,UAAN,IAAoB/B,MAAM,CAAC,IAAImC,IAAJ,EAAD,CAAjD,CAA3B;AACD;AACF;AACF,GAvBQ,EAuBN,CAACd,QAAD,EAAWJ,KAAK,CAACc,UAAjB,EAA6BT,UAA7B,EAAyCC,aAAzC,EAAwDN,KAAK,CAACe,SAA9D,CAvBM,CAAT;AAyBA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKd,CAAC,CAAC,eAAD,CAAN,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,CAAC,CAAC,sBAAD,CAAN,CAFF,wBAGGH,iBAAiB,CAACK,gBAAD,EAAmB,MAAnB,CAHpB,uDAGG,mBAA6CgB,GAA7C,CAAiD,CAACC,cAAD,EAAiBC,KAAjB,kBAChD;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,cAAc,CAACE,IAAhC,CADD,CAHH,CADF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKrB,CAAC,CAAC,0BAAD,CAAN,CAFF,yBAGGH,iBAAiB,CAACK,gBAAD,EAAmB,MAAnB,CAHpB,wDAGG,oBAA6CgB,GAA7C,CAAiD,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AAAA;;AAC3E,UAAME,QAAQ,GAAGhB,mBAAH,aAAGA,mBAAH,gDAAGA,mBAAmB,CAAEiB,mBAAxB,0DAAG,sBAA0CC,IAA1C,CACdC,IAAD,IAAUA,IAAI,CAACC,oBAAL,KAA8BP,cAAc,CAACE,IADxC,CAAjB;;AAGA,QAAIC,QAAJ,EAAc;AAAA;;AACZ,0BACE;AAAI,QAAA,GAAG,EAAEF,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACGrB,KAAK,CAACM,aADT,yDACG,qBAAqBsB,QADxB,OACmCL,QAAQ,CAACM,mBAD5C,CADF;AAKD,KAND,MAMO;AACL,0BAAO;AAAI,QAAA,GAAG,EAAER,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;AACF,GAbA,CAHH,CADF,EAoBGnB,UApBH,aAoBGA,UApBH,uBAoBGA,UAAU,CAAEiB,GAAZ,CAAgB,CAACW,MAAD,EAAST,KAAT;AAAA;;AAAA,wBACf;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKjB,QAAQ,KAAK,IAAb,GAAoB0B,MAAM,CAACC,IAA3B,GAAkCD,MAAM,CAACE,OAA9C,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,MAAM,CAACG,KAAZ,CAFF,yBAGGnC,iBAAiB,CAACK,gBAAD,EAAmB,MAAnB,CAHpB,wDAGG,oBAA6CgB,GAA7C,CAAiD,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AAC3E,UAAIS,MAAM,CAACI,QAAP,CAAgBZ,IAAhB,KAAyBF,cAAc,CAACE,IAA5C,EAAkD;AAAA;;AAChD,4BACE;AAAI,UAAA,GAAG,EAAED,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCACGrB,KAAK,CAACM,aADT,0DACG,sBAAqBsB,QADxB,OACmCE,MAAM,CAACK,aAD1C,CADF;AAKD,OAND,MAMO;AACL,4BAAO;AAAI,UAAA,GAAG,EAAEd,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;AACF,KAVA,CAHH,CADe;AAAA,GAAhB,CApBH,eAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKpB,CAAC,CAAC,gBAAD,CAAN,CAFF,yBAGGH,iBAAiB,CAACK,gBAAD,EAAmB,MAAnB,CAHpB,wDAGG,oBAA6CgB,GAA7C,CAAiD,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AAAA;;AAC3E,UAAME,QAAQ,GAAGhB,mBAAH,aAAGA,mBAAH,iDAAGA,mBAAmB,CAAE6B,kBAAxB,2DAAG,uBAAyCX,IAAzC,CACdC,IAAD,IAAUA,IAAI,CAACC,oBAAL,KAA8BP,cAAc,CAACE,IADxC,CAAjB;;AAGA,QAAIC,QAAJ,EAAc;AAAA;;AACZ,0BACE;AAAI,QAAA,GAAG,EAAEF,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACGrB,KAAK,CAACM,aADT,0DACG,sBAAqBsB,QADxB,OACmCL,QAAQ,CAACM,mBAD5C,CADF;AAKD,KAND,MAMO;AACL,0BAAO;AAAI,QAAA,GAAG,EAAER,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;AACF,GAbA,CAHH,CAtCF,EAwDGrB,KAAK,CAACqC,YAAN,IACCrC,KAAK,CAACqC,YAAN,YAA8BC,KAD/B,IAEC,wBAAAtC,KAAK,CAACqC,YAAN,4EAAoBE,MAApB,IAA6B,CAF9B,iBAGG,uDACE;AAAI,IAAA,IAAI,EAAC,QAAT;AAAkB,IAAA,OAAO,EAAE,MAAM7B,QAAQ,CAAC,IAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAE5B,UAAV;AAAsB,IAAA,GAAG,EAAC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,sCACsE,GADtE,EAEGI,2BAA2B,uBAC1Bc,KAAK,CAACc,UADoB,uDAC1B,mBAAkBE,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAD0B,2BAE1BhB,KAAK,CAACM,aAFoB,0DAE1B,sBAAqBW,kBAFK,CAF9B,CADF,CADF,CA3DN,CAVF,CADF,eAqFE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAER,KAApB;AAA2B,IAAA,MAAM,EAAEE,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CArFF,CADF,CADF;AA6FD,CA5ID;;GAAMZ,a;UACUT,c;;;KADVS,a;;AA8IN,MAAMyC,eAAe,GAAIC,KAAD;AAAA;;AAAA,SAAuB;AAC7CrC,IAAAA,QAAQ,EAAEqC,KAAK,CAACC,WAAN,CAAkBC,YADiB;AAE7CN,IAAAA,YAAY,EAAEI,KAAK,CAACvC,UAAN,CAAiB0C,qBAAjB,CAAuCC,IAFR;AAG7CxC,IAAAA,UAAU,2BAAEoC,KAAK,CAACK,eAAN,CAAsBC,sBAAtB,CAA6CF,IAA/C,0DAAE,sBAAmDG,IAHlB;AAI7C1C,IAAAA,aAAa,EAAEmC,KAAK,CAACK,eAAN,CAAsBC,sBAAtB,CAA6CF,IAJf;AAK7C3C,IAAAA,UAAU,EAAEuC,KAAK,CAACvC,UAAN,CAAiB+C,aAAjB,CAA+BJ,IALE;AAM7C1C,IAAAA,gBAAgB,EAAEsC,KAAK,CAACvC,UAAN,CAAiBgD,iBAAjB,CAAmCL,IANR;AAO7CtC,IAAAA,mBAAmB,EAAEkC,KAAK,CAACvC,UAAN,CAAiBiD,sBAAjB,CAAwCN,IAPhB;AAQ7CrC,IAAAA,kBAAkB,EAAEiC,KAAK,CAACvC,UAAN,CAAiB0C,qBAAjB,CAAuCC;AARd,GAAvB;AAAA,CAAxB;;AAWA,MAAMO,kBAAkB,GAAG;AACzB3D,EAAAA,eAAe,EAAEA,eADQ;AAEzBC,EAAAA,uBAAuB,EAAEA,uBAFA;AAGzBE,EAAAA,4BAA4B,EAAEA,4BAHL;AAIzBD,EAAAA,2BAA2B,EAAEA;AAJJ,CAA3B;AAOA,MAAM0D,SAAS,GAAG9D,OAAO,CAACiD,eAAD,EAAkBY,kBAAlB,CAAzB;AAIA,qBAAeC,SAAS,CAACtD,aAAD,CAAxB","sourcesContent":["import { CameraIcon } from \"assets/images/xd\";\r\nimport { ADToBS } from \"components/React/Datepicker/Datepickerutils\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport Slider from \"components/UI/Slider\";\r\nimport { getMonthByLanguageAndScheme } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { getIncomeAction } from \"store/modules/income/getIcome\";\r\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\r\nimport { getIncomeExpenseImageAction } from \"store/modules/income/getIncomeExpenseImgae\";\r\nimport { getPreviousIncomeTotalAction } from \"store/modules/income/getPreviousIncomeTotal\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  activeDate: string;\r\n  activeTab: string;\r\n}\r\n\r\nconst CashbookTable = (props: Props) => {\r\n  const { t } = useTranslation([\"cashbook\"]);\r\n\r\n  const {\r\n    incomeData,\r\n    incomeCategories,\r\n    language,\r\n    schemeSlug,\r\n    schemeDetails,\r\n    previousIncomeTotal,\r\n    incomeExpenseImage,\r\n    getIncomeAction,\r\n    getIncomeCategoryAction,\r\n    getPreviousIncomeTotalAction,\r\n    getIncomeExpenseImageAction,\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  console.log(props.activeDate, \"props.activeDateprops.activeDate\");\r\n\r\n  useEffect(() => {\r\n    if (language && schemeSlug && schemeDetails && props.activeTab && props.activeDate) {\r\n      if (props.activeTab === \"1\") {\r\n        getIncomeAction(\r\n          language,\r\n          schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n        getIncomeCategoryAction(schemeSlug);\r\n        getPreviousIncomeTotalAction(\r\n          language,\r\n          schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n        getIncomeExpenseImageAction(language, schemeSlug, props.activeDate || ADToBS(new Date()));\r\n      }\r\n    }\r\n  }, [language, props.activeDate, schemeSlug, schemeDetails, props.activeTab]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        <Table className=\"table-02 table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"cashbook:date\")}</th>\r\n              <th>{t(\"cashbook:description\")}</th>\r\n              {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => (\r\n                <th key={index}>{incomeCategory.name}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td></td>\r\n              <td>{t(\"cashbook:from-prev-month\")}</td>\r\n              {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                const findData = previousIncomeTotal?.previous_month_data?.find(\r\n                  (prev) => prev.income_category_name === incomeCategory.name\r\n                );\r\n                if (findData) {\r\n                  return (\r\n                    <td key={index}>\r\n                      {props.schemeDetails?.currency} {findData.total_income_amount}\r\n                    </td>\r\n                  );\r\n                } else {\r\n                  return <td key={index}>-</td>;\r\n                }\r\n              })}\r\n            </tr>\r\n\r\n            {incomeData?.map((income, index) => (\r\n              <tr key={index}>\r\n                <td>{language === \"en\" ? income.date : income.date_np}</td>\r\n                <td>{income.title}</td>\r\n                {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  if (income.category.name === incomeCategory.name) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {income.income_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n              </tr>\r\n            ))}\r\n\r\n            <tr>\r\n              <td></td>\r\n              <td>{t(\"cashbook:total\")}</td>\r\n              {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                const findData = previousIncomeTotal?.present_month_data?.find(\r\n                  (prev) => prev.income_category_name === incomeCategory.name\r\n                );\r\n                if (findData) {\r\n                  return (\r\n                    <td key={index}>\r\n                      {props.schemeDetails?.currency} {findData.total_income_amount}\r\n                    </td>\r\n                  );\r\n                } else {\r\n                  return <td key={index}>-</td>;\r\n                }\r\n              })}\r\n            </tr>\r\n            {props.sliderImages &&\r\n              props.sliderImages instanceof Array &&\r\n              props.sliderImages?.length > 0 && (\r\n                <>\r\n                  <tr role=\"button\" onClick={() => setModal(true)}>\r\n                    <td>\r\n                      <img src={CameraIcon} alt=\"\" /> &nbsp;&nbsp; Paper Cashbook Image -{\" \"}\r\n                      {getMonthByLanguageAndScheme(\r\n                        props.activeDate?.split(\"-\")[1],\r\n                        props.schemeDetails?.system_date_format\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </>\r\n              )}\r\n          </tbody>\r\n        </Table>\r\n\r\n        <GeneralModal open={modal} toggle={toggle}>\r\n          <Slider />\r\n        </GeneralModal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  sliderImages: state.incomeData.getIncomeExpenseImgae.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  incomeData: state.incomeData.getIncomeData.data,\r\n  incomeCategories: state.incomeData.getIncomeCategory.data,\r\n  previousIncomeTotal: state.incomeData.getPreviousIncomeTotal.data,\r\n  incomeExpenseImage: state.incomeData.getIncomeExpenseImgae.data,\r\n});\r\n\r\nconst mapDispatchToProps = {  \r\n  getIncomeAction: getIncomeAction,\r\n  getIncomeCategoryAction: getIncomeCategoryAction,\r\n  getPreviousIncomeTotalAction: getPreviousIncomeTotalAction,\r\n  getIncomeExpenseImageAction: getIncomeExpenseImageAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CashbookTable);\r\n"]},"metadata":{},"sourceType":"module"}