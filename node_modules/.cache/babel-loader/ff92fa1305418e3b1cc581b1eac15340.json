{"ast":null,"code":"import { apiList } from \"../../actionNames\";\nimport initDefaultAction from \"../../helper/default-action\";\nimport initDefaultReducer from \"../../helper/default-reducer\";\nimport initialState from \"../../helper/default-state\";\nconst apiDetails = Object.freeze(apiList.inflationParamters.getInflationParameters);\nexport default function getInflationParametersReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const stateCopy = Object.assign({}, state);\n  const actionName = apiDetails.actionName;\n  return initDefaultReducer(actionName, action, stateCopy);\n}\nexport const getInflationParametersAction = lang => async dispatch => {\n  const variables = {\n    disableSuccessToast: true,\n    pathVariables: {\n      lang\n    }\n  };\n  return await initDefaultAction(apiDetails, dispatch, variables);\n};","map":{"version":3,"sources":["E:/Smart Tech Solution/React JS/react-project/src/store/modules/inflationParameters/getInflationParameters.ts"],"names":["apiList","initDefaultAction","initDefaultReducer","initialState","apiDetails","Object","freeze","inflationParamters","getInflationParameters","getInflationParametersReducer","state","action","stateCopy","assign","actionName","getInflationParametersAction","lang","dispatch","variables","disableSuccessToast","pathVariables"],"mappings":"AAGA,SAASA,OAAT,QAAwB,mBAAxB;AACA,OAAOC,iBAAP,MAAqD,6BAArD;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AASA,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcN,OAAO,CAACO,kBAAR,CAA2BC,sBAAzC,CAAnB;AAEA,eAAe,SAASC,6BAAT,GAAmH;AAAA,MAA5EC,KAA4E,uEAApEP,YAAoE;AAAA,MAAtDQ,MAAsD;AAC9H,QAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAP,CAAc,EAAd,EAAkBH,KAAlB,CAAlB;AACA,QAAMI,UAAU,GAAGV,UAAU,CAACU,UAA9B;AAEA,SAAOZ,kBAAkB,CAACY,UAAD,EAAaH,MAAb,EAAqBC,SAArB,CAAzB;AACH;AAED,OAAO,MAAMG,4BAA4B,GAAIC,IAAD,IAAyD,MAAOC,QAAP,IAA8B;AAC/H,QAAMC,SAAS,GAAG;AAAEC,IAAAA,mBAAmB,EAAE,IAAvB;AAA6BC,IAAAA,aAAa,EAAE;AAAEJ,MAAAA;AAAF;AAA5C,GAAlB;AACA,SAAO,MAAMf,iBAAiB,CAACG,UAAD,EAAaa,QAAb,EAAuBC,SAAvB,CAA9B;AACH,CAHM","sourcesContent":["import { Dispatch } from \"redux\";\r\nimport { AppThunk } from \"../..\";\r\n\r\nimport { apiList } from \"../../actionNames\";\r\nimport initDefaultAction, { APIResponseDetail } from \"../../helper/default-action\";\r\nimport initDefaultReducer from \"../../helper/default-reducer\";\r\nimport initialState from \"../../helper/default-state\";\r\n\r\n\r\nexport type ExpenditureType = {\r\n    dis_allow_edit: boolean\r\n    id: number\r\n    rate: number\r\n}[]\r\n\r\nconst apiDetails = Object.freeze(apiList.inflationParamters.getInflationParameters);\r\n\r\nexport default function getInflationParametersReducer(state = initialState, action: DefaultAction): DefaultState<ExpenditureType> {\r\n    const stateCopy = Object.assign({}, state);\r\n    const actionName = apiDetails.actionName;\r\n\r\n    return initDefaultReducer(actionName, action, stateCopy);\r\n}\r\n\r\nexport const getInflationParametersAction = (lang,): AppThunk<APIResponseDetail<ExpenditureType>> => async (dispatch: Dispatch) => {\r\n    const variables = { disableSuccessToast: true, pathVariables: { lang } }\r\n    return await initDefaultAction(apiDetails, dispatch, variables);\r\n};"]},"metadata":{},"sourceType":"module"}