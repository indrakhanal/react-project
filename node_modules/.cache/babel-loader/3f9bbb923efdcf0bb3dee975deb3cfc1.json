{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.K. COMPUTER\\\\OneDrive\\\\Desktop\\\\react-project\\\\src\\\\core\\\\Public\\\\Service\\\\SupplyVisualization\\\\VisualizationBarGraph.tsx\",\n    _s = $RefreshSig$();\n\nimport GeneralChart from \"components/UI/Charts/General\";\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nconst config = {\n  name: \"\",\n  type: \"\",\n  smooth: true,\n  yAxisIndex: 0,\n  data: []\n};\n\nconst VisualizationBarGraph = props => {\n  _s();\n\n  var _props$options;\n\n  const [chartData, setChartData] = useState();\n  const [seriesData, setSeriesData] = useState();\n  const [selected, setSelected] = useState(props.defaultSelected);\n  useEffect(() => {\n    var _props$waterSupplyDat, _props$waterSupplyDat2, _props$waterSupplyDat3, _props$waterSupplyDat4, _props$waterSupplyDat5, _props$waterSupplyDat6;\n\n    const newData = {\n      xAxis: (_props$waterSupplyDat = props.waterSupplyData) === null || _props$waterSupplyDat === void 0 ? void 0 : (_props$waterSupplyDat2 = _props$waterSupplyDat.supply) === null || _props$waterSupplyDat2 === void 0 ? void 0 : _props$waterSupplyDat2.map(item => `${item[props.compareKey]}`),\n      total_supply: (_props$waterSupplyDat3 = props.waterSupplyData) === null || _props$waterSupplyDat3 === void 0 ? void 0 : (_props$waterSupplyDat4 = _props$waterSupplyDat3.supply) === null || _props$waterSupplyDat4 === void 0 ? void 0 : _props$waterSupplyDat4.map(item => item.total_supply),\n      daily_target: (_props$waterSupplyDat5 = props.waterSupplyData) === null || _props$waterSupplyDat5 === void 0 ? void 0 : (_props$waterSupplyDat6 = _props$waterSupplyDat5.supply) === null || _props$waterSupplyDat6 === void 0 ? void 0 : _props$waterSupplyDat6.map(item => {\n        var _props$waterSupplyDat7;\n\n        return (_props$waterSupplyDat7 = props.waterSupplyData) === null || _props$waterSupplyDat7 === void 0 ? void 0 : _props$waterSupplyDat7.daily_target;\n      })\n    };\n    setChartData(newData);\n  }, [props.waterSupplyData]);\n\n  const handleSelect = name => {\n    if (selected !== null && selected !== void 0 && selected.includes(name)) {\n      const filteredData = selected.filter(item => item !== name);\n      setSelected(filteredData);\n    } else {\n      setSelected([...selected, name]);\n    }\n  };\n\n  useEffect(() => {\n    const selectedData = selected === null || selected === void 0 ? void 0 : selected.map((item, index) => {\n      var _props$options$find, _props$options$find2;\n\n      return { ...config,\n        name: ((_props$options$find = props.options.find(opt => opt.id === item)) === null || _props$options$find === void 0 ? void 0 : _props$options$find.name) || \"\",\n        type: \"bar\",\n        data: chartData && chartData[item],\n        yAxisIndex: index,\n        itemStyle: {\n          color: ((_props$options$find2 = props.options.find(opt => opt.id === item)) === null || _props$options$find2 === void 0 ? void 0 : _props$options$find2.color) || \"\"\n        }\n      };\n    });\n    setSeriesData(selectedData);\n  }, [chartData, selected]);\n  const optionData = {\n    tooltip: {\n      trigger: \"axis\",\n      axisPointer: {\n        type: \"shadow\"\n      }\n    },\n    xAxis: [{\n      type: \"category\",\n      data: chartData === null || chartData === void 0 ? void 0 : chartData.xAxis,\n      axisLabel: {\n        interval: 0,\n        rotate: 25\n      }\n    }],\n    yAxis: [{\n      type: \"value\",\n      name: \"\"\n    }, {\n      type: \"value\",\n      name: \"\"\n    }],\n    series: seriesData\n  };\n  console.log(seriesData, \"seriessdaddadadad\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GeneralChart, {\n    minHeight: 400,\n    options: optionData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 chartOptions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"Visualization Parameters\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, (_props$options = props.options) === null || _props$options === void 0 ? void 0 : _props$options.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomCheckBox, {\n    id: \"\" + item.id,\n    label: item.name,\n    onChange: e => handleSelect(item.id),\n    checked: selected.includes(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }))))));\n};\n\n_s(VisualizationBarGraph, \"PeISFFQBEfkRUfiomGnBIdMEx9k=\");\n\n_c = VisualizationBarGraph;\n\nconst mapStateToProps = state => ({\n  language: state.i18nextData.languageType,\n  waterSupplyData: state.reportData.waterSupplyData.data,\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\n  actualCF: state.reportData.actualCumulativeCashFlowData.data,\n  expenseCF: state.reportData.expenseCumulativeCashFlowData.data\n});\n\nconst mapDispatchToProps = {};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(VisualizationBarGraph);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VisualizationBarGraph\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/S.K. COMPUTER/OneDrive/Desktop/react-project/src/core/Public/Service/SupplyVisualization/VisualizationBarGraph.tsx"],"names":["GeneralChart","CustomCheckBox","React","useEffect","useState","connect","config","name","type","smooth","yAxisIndex","data","VisualizationBarGraph","props","chartData","setChartData","seriesData","setSeriesData","selected","setSelected","defaultSelected","newData","xAxis","waterSupplyData","supply","map","item","compareKey","total_supply","daily_target","handleSelect","includes","filteredData","filter","selectedData","index","options","find","opt","id","itemStyle","color","optionData","tooltip","trigger","axisPointer","axisLabel","interval","rotate","yAxis","series","console","log","e","mapStateToProps","state","language","i18nextData","languageType","reportData","incomeExpenseData","actualCF","actualCumulativeCashFlowData","expenseCF","expenseCumulativeCashFlowData","mapDispatchToProps","connector"],"mappings":"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","sourcesContent":["import GeneralChart from \"components/UI/Charts/General\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\n\r\nconst config = {\r\n  name: \"\",\r\n  type: \"\",\r\n  smooth: true,\r\n  yAxisIndex: 0,\r\n  data: [],\r\n};\r\n\r\ntype SeriesConfig = {\r\n  name: string;\r\n  type: string;\r\n  smooth: boolean;\r\n  data: (string | number)[];\r\n};\r\n\r\ntype ChartDataType = {\r\n  xAxis: (string | number)[];\r\n  total_supply?: (string | number)[]; \r\n  daily_target?: (string | number)[];\r\n};\r\n\r\ninterface Props extends PropsFromRedux {\r\n  type?: string;\r\n  options: any[];\r\n  compareKey: string;\r\n  defaultSelected: string[];\r\n}\r\n\r\nconst VisualizationBarGraph = (props: Props) => {\r\n  const [chartData, setChartData] = useState<ChartDataType>();\r\n\r\n  const [seriesData, setSeriesData] = useState<SeriesConfig[]>(); \r\n\r\n  const [selected, setSelected] = useState<string[]>(props.defaultSelected);\r\n\r\n  useEffect(() => {\r\n    const newData: ChartDataType = {\r\n      xAxis: props.waterSupplyData?.supply?.map((item) => `${item[props.compareKey]}`),\r\n      total_supply: props.waterSupplyData?.supply?.map((item) => item.total_supply), \r\n      daily_target: props.waterSupplyData?.supply?.map((item) => props.waterSupplyData?.daily_target), \r\n    }; \r\n    setChartData(newData);\r\n  }, [props.waterSupplyData]);\r\n\r\n  const handleSelect = (name: string) => {\r\n    if (selected?.includes(name)) {\r\n      const filteredData = selected.filter((item) => item !== name);\r\n      setSelected(filteredData);\r\n    } else {\r\n      setSelected([...selected, name]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selectedData = selected?.map((item, index) => ({\r\n      ...config,\r\n      name: props.options.find((opt) => opt.id === item)?.name || \"\",\r\n      type: \"bar\",\r\n      data: chartData && chartData[item],\r\n      yAxisIndex: index,\r\n      itemStyle: {\r\n        color: props.options.find((opt) => opt.id === item)?.color || \"\",\r\n      },\r\n    }));\r\n    setSeriesData(selectedData);\r\n  }, [chartData, selected]);\r\n\r\n  const optionData = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n      },\r\n    },\r\n\r\n    xAxis: [\r\n      {\r\n        type: \"category\",\r\n        data: chartData?.xAxis,\r\n        axisLabel: { interval: 0, rotate: 25 },\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        type: \"value\",\r\n        name: \"\", \r\n      },\r\n      {\r\n        type: \"value\",\r\n        name: \"\", \r\n      },\r\n    ],\r\n    series: seriesData,\r\n  };\r\n\r\n  console.log(seriesData, \"seriessdaddadadad\")\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-9\">\r\n        <GeneralChart minHeight={400} options={optionData} /> \r\n      </div>\r\n      <div className=\"col-md-3 chartOptions\">\r\n        <h6>Select</h6>\r\n        <p>Visualization Parameters</p>\r\n\r\n        <ul>\r\n          {props.options?.map((item) => (\r\n            <li key={item.id}>\r\n              <CustomCheckBox\r\n                id={\"\" + item.id}\r\n                label={item.name}\r\n                onChange={(e) => handleSelect(item.id)}\r\n                checked={selected.includes(item.id)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  waterSupplyData: state.reportData.waterSupplyData.data,\r\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\r\n  actualCF: state.reportData.actualCumulativeCashFlowData.data,\r\n  expenseCF: state.reportData.expenseCumulativeCashFlowData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(VisualizationBarGraph);\r\n"]},"metadata":{},"sourceType":"module"}