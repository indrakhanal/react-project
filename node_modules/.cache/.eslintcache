[{"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\index.tsx":"1","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\App.tsx":"2","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\index.ts":"3","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\i18n\\i18n.ts":"4","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\root-reducer.ts":"5","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\routes\\routes.ts":"6","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\i18n\\i18n.ts":"7","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\services\\jwt-token\\jwt-token.ts":"8","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\routes\\PrivateRoute\\PrivateRoute.tsx":"9","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\services\\authentication\\AuthenticationService.tsx":"10","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\ToastNotifier\\ToastNotifier.tsx":"11","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\login\\login.ts":"12","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\userDetails\\index.ts":"13","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\constants\\constants.ts":"14","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\helper\\default-action-type.ts":"15","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Datepickerutils.tsx":"16","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\ErrorBoundary\\ErrorBoundary.tsx":"17","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\FallbackLoader\\FallbackLoader.tsx":"18","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\oauthservice\\index.ts":"19","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\index.ts":"20","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\index.ts":"21","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\index.ts":"22","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\index.ts":"23","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\supplyBelts\\index.ts":"24","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterSupplySchedule\\index.ts":"25","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\testParamters\\index.ts":"26","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\index.ts":"27","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\otherExpenses\\index.ts":"28","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\maintainance\\index.ts":"29","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\inflationParameters\\index.ts":"30","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentCategories\\index.ts":"31","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\component\\index.ts":"32","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentInfo\\index.ts":"33","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\notifications\\index.ts":"34","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentLogs\\index.ts":"35","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\helper\\default-state.ts":"36","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\helper\\default-reducer.ts":"37","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\helper\\default-action.ts":"38","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\schemeName\\index.tsx":"39","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\constants\\types.ts":"40","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\actionNames\\index.ts":"41","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Dateconverter.ts":"42","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Login\\Login.tsx":"43","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Notifications\\UpdateNotifications.tsx":"44","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Dashboard\\Dashboard.tsx":"45","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\oauthservice\\initapi.ts":"46","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\incomeExpense.ts":"47","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\actualCumilitiveCashFlow.ts":"48","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\maintainanceCost.ts":"49","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\incomeByCategory.ts":"50","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\expenseCumilitiveCashFlow.ts":"51","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\expenseByCategory.ts":"52","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\waterSupply.ts":"53","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\waterTestResults.ts":"54","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\maintainanceCostByYear.ts":"55","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\getWaterTarrifs.ts":"56","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\postUseBasedWaterTariff.ts":"57","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\updateUseBasedWaterTariff.ts":"58","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\deleteWaterTariff.ts":"59","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\postFixedRateWaterTariff.ts":"60","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\getIncomeEstimateThisYear.ts":"61","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\deleteUseBasedWaterTariff.ts":"62","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\getUseBasedWaterTarrifs.ts":"63","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\getIcome.ts":"64","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\getPreviousIncomeTotal.ts":"65","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\getIncomeCategory.ts":"66","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\getAllIncome.ts":"67","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\getAllExpenditure.ts":"68","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\supplyBelts\\postSupplyBelt.ts":"69","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterSupplySchedule\\updateSupplySchedule.ts":"70","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\testParamters\\deleteTestParameters.ts":"71","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\updateWaterSchemeData.ts":"72","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\otherExpenses\\deleteOtherExpenses.ts":"73","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\inflationParameters\\postInflationParameters.ts":"74","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\maintainance\\dashboardComponentInfo.ts":"75","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentCategories\\deleteComponentCategories.ts":"76","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\component\\deleteComponent.ts":"77","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentInfo\\deleteComponentInfo.ts":"78","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\notifications\\postNotifications.ts":"79","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentLogs\\getComponentLogsById.ts":"80","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentLogs\\deleteComponentLogs.ts":"81","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentLogs\\postComponentLogs.ts":"82","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentLogs\\updateComponentLogs.ts":"83","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentLogs\\getComponentLogs.ts":"84","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\services\\api-request\\api-request.ts":"85","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\notifications\\updateNotifications.ts":"86","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\notifications\\getNotifications.ts":"87","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentInfo\\postComponentInfo.ts":"88","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentInfo\\updateComponentInfo.ts":"89","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentInfo\\getComponentInfoById.ts":"90","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentInfo\\getComponentInfo.ts":"91","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\component\\postComponent.ts":"92","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\404\\index.tsx":"93","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\index.tsx":"94","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\index.tsx":"95","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\component\\updateComponent.ts":"96","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\CashBook\\index.tsx":"97","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\Visualization\\index.tsx":"98","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\index.tsx":"99","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\index.tsx":"100","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\index.tsx":"101","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\index.tsx":"102","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\InflationParamters\\index.tsx":"103","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\index.tsx":"104","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\index.tsx":"105","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\index.tsx":"106","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\index.tsx":"107","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\index.tsx":"108","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\index.tsx":"109","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\index.tsx":"110","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\component\\getComponent.ts":"111","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentCategories\\postComponentCategories.ts":"112","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentCategories\\updateComponentCategories.ts":"113","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentCategories\\getComponentCategories.ts":"114","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\inflationParameters\\updateInflationParameters.ts":"115","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\inflationParameters\\deleteInflationParameters.ts":"116","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\inflationParameters\\getInflationParameters.ts":"117","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Notifications\\scheme.ts":"118","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Dashboard\\Sidebar\\Sidebar.tsx":"119","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Dashboard\\Header\\Header.tsx":"120","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\otherExpenses\\postOtherExpenses.ts":"121","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\otherExpenses\\updateOtherExpenses.ts":"122","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\otherExpenses\\getOtherExpenses.ts":"123","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\getWaterSchemeData.ts":"124","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\postWaterSchemeData.ts":"125","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\updateWaterSchemeUser.ts":"126","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\deleteWaterSchemeUser.ts":"127","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\getWaterSchemeUser.ts":"128","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\postWaterSchemeUser.ts":"129","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\getYearIntervals.ts":"130","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\deleteWaterSchemeData.ts":"131","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\updateWaterSchemeDetails.ts":"132","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\waterSchemeDetails.ts":"133","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\testParamters\\postTestParameters.ts":"134","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\testParamters\\updateTestParameters.ts":"135","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\testParamters\\getTestParameters.ts":"136","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterSupplySchedule\\postSupplySchedule.ts":"137","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterSupplySchedule\\deleteSupplySchedule.ts":"138","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterSupplySchedule\\getWaterSupplySchedule.ts":"139","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\supplyBelts\\updateSupplyBelt.ts":"140","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\supplyBelts\\deleteSupplyBelt.ts":"141","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\supplyBelts\\getWaterSupplyBelts.ts":"142","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\postExpense.ts":"143","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\updateExpense.ts":"144","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\deleteExpense.ts":"145","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\deleteExpenseCategory.ts":"146","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\updateExpenseCategories.ts":"147","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\postExpenseCategories.ts":"148","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\getPreviousExpenditureTotal.ts":"149","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\getExpenditureCategory.ts":"150","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\getExpenditure.ts":"151","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\postIncome.ts":"152","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\deleteIncome.ts":"153","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\updateIncome.ts":"154","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\updateIncomeCategories.ts":"155","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\postIncomeCategories.ts":"156","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\getIncomeExpenseImgae.ts":"157","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\Tariff.tsx":"158","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\VisualizationGraphThisYear.tsx":"159","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\VisualizationGraph.tsx":"160","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashBookByDate\\CashbookExpenditureTable.tsx":"161","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\Visualization\\LineChart\\LineChartThisYear.tsx":"162","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\CashBookByDate\\CashbookExpenditureTable.tsx":"163","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\CashBookByDate\\CashbookTable.tsx":"164","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\CashbookTable.tsx":"165","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\CashbookExpenditureTable.tsx":"166","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\datas.ts":"167","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\utils\\utilsFunction\\date-converter.ts":"168","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Datepicker.tsx":"169","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\IncomeExpendGraph.tsx":"170","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationGraph.tsx":"171","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationGraphThisYear.tsx":"172","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationBarGraphThisWeek.tsx":"173","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationBarGraph.tsx":"174","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\FormikValidationError\\FormikValidationError.tsx":"175","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\EnglishDatepicker\\EnglishDatepicker.tsx":"176","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\BarChart\\ChartThisYear.tsx":"177","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\configData.ts":"178","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\index.tsx":"179","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\InflationParameters\\index.tsx":"180","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\GeneralInfo\\index.tsx":"181","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\MobileUser\\index.tsx":"182","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\index.tsx":"183","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\Maintainance\\index.tsx":"184","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\index.tsx":"185","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\index.tsx":"186","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\InflationParamters\\ManageOtherParameters\\index.tsx":"187","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\ManageOtherExpenses\\index.tsx":"188","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\index.tsx":"189","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\ManageComponentLogs\\index.tsx":"190","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\index.tsx":"191","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\getFixedRateIncomeEstimates.ts":"192","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\Visualization\\LineChart\\DataTable.tsx":"193","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageComponent\\index.tsx":"194","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageCategories\\index.tsx":"195","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ExpenseForm.tsx":"196","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\FixedRates\\index.tsx":"197","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\UseBased\\index.tsx":"198","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\Visualization\\LineChart\\index.tsx":"199","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\BarChart\\index.tsx":"200","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\IncomeEstimates\\ThisYear\\index.tsx":"201","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\DonoughtChart\\index.tsx":"202","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\GeneralCard\\index.tsx":"203","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\Forms\\Buttons\\index.tsx":"204","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\StyledSelect\\StyledSelect.tsx":"205","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\DataTable.tsx":"206","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\Visualization\\DonoughtChart\\index.tsx":"207","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\BarChart\\DataTable.tsx":"208","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\assets\\images\\xd\\index.ts":"209","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\GeneralInfo\\scheme.ts":"210","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\utils\\utilsFunction\\sorting.ts":"211","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\CustomRadio\\index.tsx":"212","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\Maintainance\\MaintainanceCostChartThisYear.tsx":"213","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\IncomeExpendGraphThisYear.tsx":"214","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\ManageOtherExpenses\\List.tsx":"215","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\List.tsx":"216","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\Form.tsx":"217","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\ManageComponentLogs\\List.tsx":"218","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\ManageComponentLogs\\Form.tsx":"219","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\ComponentInfoForm.tsx":"220","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\ManageOtherExpenses\\Form.tsx":"221","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\ManageIncomeCategories\\index.tsx":"222","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ManageExpenditureCategories\\index.tsx":"223","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\Components\\RiskData.tsx":"224","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\Components\\NormalData.tsx":"225","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\Components\\CostData.tsx":"226","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\IncomeExpendGraph.tsx":"227","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\Components\\RiskData.tsx":"228","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\Components\\NormalData.tsx":"229","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\Components\\CostData.tsx":"230","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageComponent\\List.tsx":"231","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageCategories\\List.tsx":"232","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageCategories\\Form.tsx":"233","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageComponent\\Form.tsx":"234","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\index.ts":"235","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\Maintainance\\MaintainanceCostChart.tsx":"236","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\FixedRates\\List.tsx":"237","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\UseBased\\List.tsx":"238","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\UseBased\\Form.tsx":"239","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\FixedRates\\Form.tsx":"240","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\IncomeEstimates\\ThisYear\\Table.tsx":"241","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\DonoughtChart\\DataTable.tsx":"242","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\Visualization\\DonoughtChart\\DataTable.tsx":"243","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\index.tsx":"244","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\index.tsx":"245","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\hooks\\useDeleteConfirmation.ts":"246","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\IncomeExpendTable.tsx":"247","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\ManageIncomeCategories\\List.tsx":"248","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ManageExpenditureCategories\\List.tsx":"249","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ManageExpenditureCategories\\Form.tsx":"250","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\ManageIncomeCategories\\Form.tsx":"251","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\index.tsx":"252","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\Calender.tsx":"253","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\CustomCheckbox\\index.tsx":"254","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\Charts\\General\\index.tsx":"255","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\StyledSelect\\CreatableSelect.tsx":"256","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\TooltipLabel\\index.tsx":"257","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\GeneralModal\\index.tsx":"258","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\ConfirmationModal\\index.tsx":"259","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\List.tsx":"260","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\List.tsx":"261","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\Form.tsx":"262","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\Form.tsx":"263","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\updateFixedBasedWaterTariff.ts":"264","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\List.tsx":"265","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\Form.tsx":"266","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\schema.ts":"267","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\CalenderController.tsx":"268","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\schema.ts":"269","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\schema.ts":"270","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\deleteIncomeCategory.ts":"271","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\index.ts":"272","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\assets\\theme\\wonderland.js":"273","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\schema.ts":"274","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\YearPicker.tsx":"275","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\MonthPicker.tsx":"276","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\DayPicker.tsx":"277","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\index.ts":"278","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\IncomeForm.tsx":"279","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\DayPickerHeader.tsx":"280","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\DayPickerBody.tsx":"281","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DropDown\\index.ts":"282","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\Today.tsx":"283","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\Slider\\index.tsx":"284","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DropDown\\Types.ts":"285","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\IconBase.tsx":"286","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DropDown\\DropDown.tsx":"287","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\Previous.tsx":"288","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\Next.tsx":"289","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashbookTable.tsx":"290","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashbookExpenditureTable.tsx":"291","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashBookByDate\\CashbookTable.tsx":"292","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\InfoCard\\index.tsx":"293","E:\\Smart Tech Solution\\React JS\\react-project\\src\\index.tsx":"294","E:\\Smart Tech Solution\\React JS\\react-project\\src\\App.tsx":"295","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\index.ts":"296","E:\\Smart Tech Solution\\React JS\\react-project\\src\\i18n\\i18n.ts":"297","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\root-reducer.ts":"298","E:\\Smart Tech Solution\\React JS\\react-project\\src\\routes\\routes.ts":"299","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\i18n\\i18n.ts":"300","E:\\Smart Tech Solution\\React JS\\react-project\\src\\services\\jwt-token\\jwt-token.ts":"301","E:\\Smart Tech Solution\\React JS\\react-project\\src\\routes\\PrivateRoute\\PrivateRoute.tsx":"302","E:\\Smart Tech Solution\\React JS\\react-project\\src\\services\\authentication\\AuthenticationService.tsx":"303","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\ToastNotifier\\ToastNotifier.tsx":"304","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\login\\login.ts":"305","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\userDetails\\index.ts":"306","E:\\Smart Tech Solution\\React JS\\react-project\\src\\constants\\constants.ts":"307","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\helper\\default-action-type.ts":"308","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Datepickerutils.tsx":"309","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\ErrorBoundary\\ErrorBoundary.tsx":"310","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\FallbackLoader\\FallbackLoader.tsx":"311","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\oauthservice\\index.ts":"312","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\index.ts":"313","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\index.ts":"314","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\index.ts":"315","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\index.ts":"316","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\testParamters\\index.ts":"317","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\supplyBelts\\index.ts":"318","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\index.ts":"319","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\otherExpenses\\index.ts":"320","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentCategories\\index.ts":"321","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\inflationParameters\\index.ts":"322","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\component\\index.ts":"323","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentInfo\\index.ts":"324","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\notifications\\index.ts":"325","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentLogs\\index.ts":"326","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\maintainance\\index.ts":"327","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterSupplySchedule\\index.ts":"328","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\helper\\default-state.ts":"329","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\helper\\default-reducer.ts":"330","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\helper\\default-action.ts":"331","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\schemeName\\index.tsx":"332","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\actionNames\\index.ts":"333","E:\\Smart Tech Solution\\React JS\\react-project\\src\\constants\\types.ts":"334","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Dateconverter.ts":"335","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Login\\Login.tsx":"336","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Dashboard\\Dashboard.tsx":"337","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Notifications\\UpdateNotifications.tsx":"338","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\getWaterTarrifs.ts":"339","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\deleteWaterTariff.ts":"340","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\postUseBasedWaterTariff.ts":"341","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\postFixedRateWaterTariff.ts":"342","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\getUseBasedWaterTarrifs.ts":"343","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\getIcome.ts":"344","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\getIncomeEstimateThisYear.ts":"345","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\getPreviousIncomeTotal.ts":"346","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\oauthservice\\initapi.ts":"347","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\updateUseBasedWaterTariff.ts":"348","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\getIncomeCategory.ts":"349","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\updateIncomeCategories.ts":"350","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\updateIncome.ts":"351","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\getAllIncome.ts":"352","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\maintainanceCostByYear.ts":"353","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\getAllExpenditure.ts":"354","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\testParamters\\deleteTestParameters.ts":"355","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\deleteUseBasedWaterTariff.ts":"356","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\supplyBelts\\postSupplyBelt.ts":"357","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\updateWaterSchemeData.ts":"358","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\getIncomeExpenseImgae.ts":"359","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\postIncomeCategories.ts":"360","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentCategories\\deleteComponentCategories.ts":"361","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\inflationParameters\\postInflationParameters.ts":"362","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\component\\deleteComponent.ts":"363","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\otherExpenses\\deleteOtherExpenses.ts":"364","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentInfo\\deleteComponentInfo.ts":"365","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterSupplySchedule\\updateSupplySchedule.ts":"366","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentLogs\\getComponentLogsById.ts":"367","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\notifications\\postNotifications.ts":"368","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\maintainance\\dashboardComponentInfo.ts":"369","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterSupplySchedule\\postSupplySchedule.ts":"370","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterSupplySchedule\\deleteSupplySchedule.ts":"371","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterSupplySchedule\\getWaterSupplySchedule.ts":"372","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentLogs\\deleteComponentLogs.ts":"373","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentLogs\\postComponentLogs.ts":"374","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentLogs\\updateComponentLogs.ts":"375","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentLogs\\getComponentLogs.ts":"376","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\notifications\\getNotifications.ts":"377","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\notifications\\updateNotifications.ts":"378","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentInfo\\postComponentInfo.ts":"379","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentInfo\\updateComponentInfo.ts":"380","E:\\Smart Tech Solution\\React JS\\react-project\\src\\services\\api-request\\api-request.ts":"381","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentInfo\\getComponentInfoById.ts":"382","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentInfo\\getComponentInfo.ts":"383","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\component\\postComponent.ts":"384","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\index.tsx":"385","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\404\\index.tsx":"386","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\index.tsx":"387","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\index.tsx":"388","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\CashBook\\index.tsx":"389","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\index.tsx":"390","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\index.tsx":"391","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\InflationParamters\\index.tsx":"392","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\index.tsx":"393","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\index.tsx":"394","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\index.tsx":"395","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\Visualization\\index.tsx":"396","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\index.tsx":"397","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\index.tsx":"398","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\index.tsx":"399","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\index.tsx":"400","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\index.tsx":"401","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\component\\updateComponent.ts":"402","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Notifications\\scheme.ts":"403","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\inflationParameters\\deleteInflationParameters.ts":"404","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\component\\getComponent.ts":"405","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\inflationParameters\\getInflationParameters.ts":"406","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentCategories\\updateComponentCategories.ts":"407","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentCategories\\postComponentCategories.ts":"408","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\otherExpenses\\getOtherExpenses.ts":"409","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\otherExpenses\\updateOtherExpenses.ts":"410","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\getWaterSchemeData.ts":"411","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\updateWaterSchemeUser.ts":"412","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\postWaterSchemeData.ts":"413","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentCategories\\getComponentCategories.ts":"414","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\deleteWaterSchemeData.ts":"415","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\getYearIntervals.ts":"416","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\inflationParameters\\updateInflationParameters.ts":"417","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\otherExpenses\\postOtherExpenses.ts":"418","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\deleteWaterSchemeUser.ts":"419","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\updateWaterSchemeDetails.ts":"420","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\supplyBelts\\updateSupplyBelt.ts":"421","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\waterSchemeDetails.ts":"422","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\supplyBelts\\deleteSupplyBelt.ts":"423","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\testParamters\\postTestParameters.ts":"424","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\supplyBelts\\getWaterSupplyBelts.ts":"425","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\testParamters\\getTestParameters.ts":"426","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\postWaterSchemeUser.ts":"427","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\getWaterSchemeUser.ts":"428","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\testParamters\\updateTestParameters.ts":"429","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Dashboard\\Sidebar\\Sidebar.tsx":"430","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\postExpense.ts":"431","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\updateExpense.ts":"432","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\deleteExpense.ts":"433","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\deleteExpenseCategory.ts":"434","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\updateExpenseCategories.ts":"435","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\postExpenseCategories.ts":"436","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\getExpenditureCategory.ts":"437","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\getPreviousExpenditureTotal.ts":"438","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\getExpenditure.ts":"439","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\waterTestResults.ts":"440","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\waterSupply.ts":"441","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\expenseByCategory.ts":"442","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\incomeByCategory.ts":"443","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Dashboard\\Header\\Header.tsx":"444","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\expenseCumilitiveCashFlow.ts":"445","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\actualCumilitiveCashFlow.ts":"446","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\maintainanceCost.ts":"447","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\incomeExpense.ts":"448","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\postIncome.ts":"449","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\deleteIncome.ts":"450","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\datas.ts":"451","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\Tariff.tsx":"452","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationGraph.tsx":"453","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationGraphThisYear.tsx":"454","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationBarGraphThisWeek.tsx":"455","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationBarGraph.tsx":"456","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashBookByDate\\CashbookExpenditureTable.tsx":"457","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\Visualization\\LineChart\\LineChartThisYear.tsx":"458","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\CashBookByDate\\CashbookExpenditureTable.tsx":"459","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Datepicker.tsx":"460","E:\\Smart Tech Solution\\React JS\\react-project\\src\\utils\\utilsFunction\\date-converter.ts":"461","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\CashBookByDate\\CashbookTable.tsx":"462","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\FormikValidationError\\FormikValidationError.tsx":"463","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\EnglishDatepicker\\EnglishDatepicker.tsx":"464","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\IncomeExpendGraph.tsx":"465","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\VisualizationGraphThisYear.tsx":"466","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\VisualizationGraph.tsx":"467","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\CashbookTable.tsx":"468","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\CashbookExpenditureTable.tsx":"469","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashBookByDate\\CashbookTable.tsx":"470","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashbookTable.tsx":"471","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashbookExpenditureTable.tsx":"472","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\index.tsx":"473","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\InflationParamters\\ManageOtherParameters\\index.tsx":"474","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\index.tsx":"475","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\index.tsx":"476","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\ManageOtherExpenses\\index.tsx":"477","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\ManageComponentLogs\\index.tsx":"478","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\index.tsx":"479","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\Visualization\\LineChart\\index.tsx":"480","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageComponent\\index.tsx":"481","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageCategories\\index.tsx":"482","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\getFixedRateIncomeEstimates.ts":"483","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\DataTable.tsx":"484","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\Visualization\\DonoughtChart\\index.tsx":"485","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\Visualization\\LineChart\\DataTable.tsx":"486","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\GeneralCard\\index.tsx":"487","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\Forms\\Buttons\\index.tsx":"488","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\configData.ts":"489","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\FixedRates\\index.tsx":"490","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\UseBased\\index.tsx":"491","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\IncomeEstimates\\ThisYear\\index.tsx":"492","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\StyledSelect\\StyledSelect.tsx":"493","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ExpenseForm.tsx":"494","E:\\Smart Tech Solution\\React JS\\react-project\\src\\assets\\images\\xd\\index.ts":"495","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\InfoCard\\index.tsx":"496","E:\\Smart Tech Solution\\React JS\\react-project\\src\\utils\\utilsFunction\\sorting.ts":"497","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\index.ts":"498","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\ManageOtherExpenses\\List.tsx":"499","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\ManageComponentLogs\\List.tsx":"500","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\ManageComponentLogs\\Form.tsx":"501","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\List.tsx":"502","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\Form.tsx":"503","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageCategories\\List.tsx":"504","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageComponent\\List.tsx":"505","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageCategories\\Form.tsx":"506","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\CustomRadio\\index.tsx":"507","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageComponent\\Form.tsx":"508","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\ManageOtherExpenses\\Form.tsx":"509","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\Visualization\\DonoughtChart\\DataTable.tsx":"510","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\Components\\RiskData.tsx":"511","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\Components\\NormalData.tsx":"512","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\Components\\CostData.tsx":"513","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\Components\\NormalData.tsx":"514","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\Components\\CostData.tsx":"515","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\Components\\RiskData.tsx":"516","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\FixedRates\\List.tsx":"517","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\FixedRates\\Form.tsx":"518","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\UseBased\\List.tsx":"519","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\ManageIncomeCategories\\index.tsx":"520","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ManageExpenditureCategories\\index.tsx":"521","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\UseBased\\Form.tsx":"522","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\IncomeExpendTable.tsx":"523","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\IncomeEstimates\\ThisYear\\Table.tsx":"524","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\ComponentInfoForm.tsx":"525","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\CustomCheckbox\\index.tsx":"526","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\index.tsx":"527","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\Slider\\index.tsx":"528","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\GeneralModal\\index.tsx":"529","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\Calender.tsx":"530","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\Charts\\General\\index.tsx":"531","E:\\Smart Tech Solution\\React JS\\react-project\\src\\hooks\\useDeleteConfirmation.ts":"532","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\ManageIncomeCategories\\List.tsx":"533","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\ManageIncomeCategories\\Form.tsx":"534","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ManageExpenditureCategories\\List.tsx":"535","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\schema.ts":"536","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ManageExpenditureCategories\\Form.tsx":"537","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\List.tsx":"538","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\Form.tsx":"539","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\CalenderController.tsx":"540","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\TooltipLabel\\index.tsx":"541","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\ConfirmationModal\\index.tsx":"542","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\updateFixedBasedWaterTariff.ts":"543","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\schema.ts":"544","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\index.ts":"545","E:\\Smart Tech Solution\\React JS\\react-project\\src\\assets\\theme\\wonderland.js":"546","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\IncomeForm.tsx":"547","E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\deleteIncomeCategory.ts":"548","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\YearPicker.tsx":"549","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\MonthPicker.tsx":"550","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\BarChart\\ChartThisYear.tsx":"551","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\DayPicker.tsx":"552","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\index.ts":"553","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\index.tsx":"554","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\BarChart\\index.tsx":"555","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\DonoughtChart\\index.tsx":"556","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\InflationParameters\\index.tsx":"557","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\MobileUser\\index.tsx":"558","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\index.tsx":"559","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\GeneralInfo\\index.tsx":"560","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\Maintainance\\index.tsx":"561","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\BarChart\\DataTable.tsx":"562","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\DayPickerHeader.tsx":"563","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DropDown\\index.ts":"564","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\Today.tsx":"565","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\Previous.tsx":"566","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\Next.tsx":"567","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\GeneralInfo\\scheme.ts":"568","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\IncomeExpendGraphThisYear.tsx":"569","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\IncomeExpendGraph.tsx":"570","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\Maintainance\\MaintainanceCostChartThisYear.tsx":"571","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DropDown\\Types.ts":"572","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\Maintainance\\MaintainanceCostChart.tsx":"573","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DropDown\\DropDown.tsx":"574","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\IconBase.tsx":"575","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\index.tsx":"576","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\DonoughtChart\\DataTable.tsx":"577","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\StyledSelect\\CreatableSelect.tsx":"578","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\index.tsx":"579","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\List.tsx":"580","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\Form.tsx":"581","E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\DayPickerBody.tsx":"582","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\schema.ts":"583","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\List.tsx":"584","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\Form.tsx":"585","E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\schema.ts":"586"},{"size":836,"mtime":1647767462611,"results":"587","hashOfConfig":"588"},{"size":2758,"mtime":1647767462059,"results":"589","hashOfConfig":"588"},{"size":660,"mtime":1647767462637,"results":"590","hashOfConfig":"588"},{"size":10095,"mtime":1647767462583,"results":"591","hashOfConfig":"588"},{"size":2412,"mtime":1647767462943,"results":"592","hashOfConfig":"588"},{"size":4698,"mtime":1647767462618,"results":"593","hashOfConfig":"588"},{"size":1981,"mtime":1647767462745,"results":"594","hashOfConfig":"588"},{"size":2024,"mtime":1647767462624,"results":"595","hashOfConfig":"588"},{"size":1471,"mtime":1647767462616,"results":"596","hashOfConfig":"588"},{"size":744,"mtime":1647767462622,"results":"597","hashOfConfig":"588"},{"size":2553,"mtime":1647767462348,"results":"598","hashOfConfig":"588"},{"size":1835,"mtime":1647767462772,"results":"599","hashOfConfig":"588"},{"size":949,"mtime":1647767462885,"results":"600","hashOfConfig":"588"},{"size":3978,"mtime":1647767462392,"results":"601","hashOfConfig":"588"},{"size":287,"mtime":1647767462631,"results":"602","hashOfConfig":"588"},{"size":8289,"mtime":1647767462331,"results":"603","hashOfConfig":"588"},{"size":1812,"mtime":1647767462336,"results":"604","hashOfConfig":"588"},{"size":703,"mtime":1647767462338,"results":"605","hashOfConfig":"588"},{"size":190,"mtime":1647767462823,"results":"606","hashOfConfig":"588"},{"size":900,"mtime":1647767462844,"results":"607","hashOfConfig":"588"},{"size":853,"mtime":1647767462936,"results":"608","hashOfConfig":"588"},{"size":870,"mtime":1647767462755,"results":"609","hashOfConfig":"588"},{"size":927,"mtime":1647767462738,"results":"610","hashOfConfig":"588"},{"size":421,"mtime":1647767462873,"results":"611","hashOfConfig":"588"},{"size":466,"mtime":1647767462923,"results":"612","hashOfConfig":"588"},{"size":465,"mtime":1647767462880,"results":"613","hashOfConfig":"588"},{"size":1070,"mtime":1647767462894,"results":"614","hashOfConfig":"588"},{"size":463,"mtime":1647767462830,"results":"615","hashOfConfig":"588"},{"size":230,"mtime":1647767462816,"results":"616","hashOfConfig":"588"},{"size":500,"mtime":1647767462766,"results":"617","hashOfConfig":"588"},{"size":523,"mtime":1647767462650,"results":"618","hashOfConfig":"588"},{"size":403,"mtime":1647767462642,"results":"619","hashOfConfig":"588"},{"size":537,"mtime":1647767462661,"results":"620","hashOfConfig":"588"},{"size":346,"mtime":1647767462819,"results":"621","hashOfConfig":"588"},{"size":627,"mtime":1647767462682,"results":"622","hashOfConfig":"588"},{"size":174,"mtime":1647767462635,"results":"623","hashOfConfig":"588"},{"size":1536,"mtime":1647767462634,"results":"624","hashOfConfig":"588"},{"size":5244,"mtime":1647767462633,"results":"625","hashOfConfig":"588"},{"size":542,"mtime":1647767462869,"results":"626","hashOfConfig":"588"},{"size":991,"mtime":1647767462393,"results":"627","hashOfConfig":"588"},{"size":24552,"mtime":1647767462629,"results":"628","hashOfConfig":"588"},{"size":7523,"mtime":1647767462328,"results":"629","hashOfConfig":"588"},{"size":5361,"mtime":1647767462548,"results":"630","hashOfConfig":"588"},{"size":10743,"mtime":1647767462503,"results":"631","hashOfConfig":"588"},{"size":3334,"mtime":1647767462515,"results":"632","hashOfConfig":"588"},{"size":1097,"mtime":1647767462825,"results":"633","hashOfConfig":"588"},{"size":1938,"mtime":1647767462843,"results":"634","hashOfConfig":"588"},{"size":1313,"mtime":1647767462836,"results":"635","hashOfConfig":"588"},{"size":1631,"mtime":1647767462846,"results":"636","hashOfConfig":"588"},{"size":1341,"mtime":1647767462841,"results":"637","hashOfConfig":"588"},{"size":1621,"mtime":1647767462839,"results":"638","hashOfConfig":"588"},{"size":1196,"mtime":1647767462837,"results":"639","hashOfConfig":"588"},{"size":1735,"mtime":1647767462848,"results":"640","hashOfConfig":"588"},{"size":1364,"mtime":1647767462849,"results":"641","hashOfConfig":"588"},{"size":2716,"mtime":1647767462847,"results":"642","hashOfConfig":"588"},{"size":2215,"mtime":1647767462935,"results":"643","hashOfConfig":"588"},{"size":1217,"mtime":1647767462939,"results":"644","hashOfConfig":"588"},{"size":1203,"mtime":1647767462941,"results":"645","hashOfConfig":"588"},{"size":1021,"mtime":1647767462929,"results":"646","hashOfConfig":"588"},{"size":1079,"mtime":1647767462937,"results":"647","hashOfConfig":"588"},{"size":1880,"mtime":1647767462933,"results":"648","hashOfConfig":"588"},{"size":1045,"mtime":1647767462928,"results":"649","hashOfConfig":"588"},{"size":1384,"mtime":1647767462934,"results":"650","hashOfConfig":"588"},{"size":1280,"mtime":1647767462751,"results":"651","hashOfConfig":"588"},{"size":1416,"mtime":1647767462754,"results":"652","hashOfConfig":"588"},{"size":1080,"mtime":1647767462752,"results":"653","hashOfConfig":"588"},{"size":1393,"mtime":1647767462749,"results":"654","hashOfConfig":"588"},{"size":1417,"mtime":1647767462707,"results":"655","hashOfConfig":"588"},{"size":971,"mtime":1647767462875,"results":"656","hashOfConfig":"588"},{"size":985,"mtime":1647767462925,"results":"657","hashOfConfig":"588"},{"size":1080,"mtime":1647767462878,"results":"658","hashOfConfig":"588"},{"size":1221,"mtime":1647767462897,"results":"659","hashOfConfig":"588"},{"size":1088,"mtime":1647767462826,"results":"660","hashOfConfig":"588"},{"size":1155,"mtime":1647767462768,"results":"661","hashOfConfig":"588"},{"size":1763,"mtime":1647767462814,"results":"662","hashOfConfig":"588"},{"size":1001,"mtime":1647767462647,"results":"663","hashOfConfig":"588"},{"size":961,"mtime":1647767462639,"results":"664","hashOfConfig":"588"},{"size":977,"mtime":1647767462655,"results":"665","hashOfConfig":"588"},{"size":1048,"mtime":1647767462820,"results":"666","hashOfConfig":"588"},{"size":1789,"mtime":1647767462681,"results":"667","hashOfConfig":"588"},{"size":977,"mtime":1647767462676,"results":"668","hashOfConfig":"588"},{"size":984,"mtime":1647767462686,"results":"669","hashOfConfig":"588"},{"size":1014,"mtime":1647767462687,"results":"670","hashOfConfig":"588"},{"size":1342,"mtime":1647767462677,"results":"671","hashOfConfig":"588"},{"size":5859,"mtime":1647767462620,"results":"672","hashOfConfig":"588"},{"size":1093,"mtime":1647767462821,"results":"673","hashOfConfig":"588"},{"size":1307,"mtime":1647767462817,"results":"674","hashOfConfig":"588"},{"size":981,"mtime":1647767462664,"results":"675","hashOfConfig":"588"},{"size":1014,"mtime":1647767462667,"results":"676","hashOfConfig":"588"},{"size":1790,"mtime":1647767462658,"results":"677","hashOfConfig":"588"},{"size":1631,"mtime":1647767462656,"results":"678","hashOfConfig":"588"},{"size":893,"mtime":1647767462644,"results":"679","hashOfConfig":"588"},{"size":954,"mtime":1647767462514,"results":"680","hashOfConfig":"588"},{"size":2001,"mtime":1647767462476,"results":"681","hashOfConfig":"588"},{"size":10478,"mtime":1647767462546,"results":"682","hashOfConfig":"588"},{"size":957,"mtime":1647767462645,"results":"683","hashOfConfig":"588"},{"size":10758,"mtime":1647767462526,"results":"684","hashOfConfig":"588"},{"size":4452,"mtime":1647767462535,"results":"685","hashOfConfig":"588"},{"size":3849,"mtime":1647767462563,"results":"686","hashOfConfig":"588"},{"size":867,"mtime":1647767462555,"results":"687","hashOfConfig":"588"},{"size":9827,"mtime":1647767462572,"results":"688","hashOfConfig":"588"},{"size":4010,"mtime":1647767462580,"results":"689","hashOfConfig":"588"},{"size":680,"mtime":1647767462422,"results":"690","hashOfConfig":"588"},{"size":950,"mtime":1647767462432,"results":"691","hashOfConfig":"588"},{"size":867,"mtime":1647767462485,"results":"692","hashOfConfig":"588"},{"size":4332,"mtime":1647767462446,"results":"693","hashOfConfig":"588"},{"size":633,"mtime":1647767462490,"results":"694","hashOfConfig":"588"},{"size":896,"mtime":1647767462501,"results":"695","hashOfConfig":"588"},{"size":10777,"mtime":1647767462419,"results":"696","hashOfConfig":"588"},{"size":712,"mtime":1647767462511,"results":"697","hashOfConfig":"588"},{"size":1067,"mtime":1647767462641,"results":"698","hashOfConfig":"588"},{"size":1004,"mtime":1647767462652,"results":"699","hashOfConfig":"588"},{"size":1036,"mtime":1647767462653,"results":"700","hashOfConfig":"588"},{"size":1071,"mtime":1647767462649,"results":"701","hashOfConfig":"588"},{"size":1169,"mtime":1647767462770,"results":"702","hashOfConfig":"588"},{"size":1130,"mtime":1647767462763,"results":"703","hashOfConfig":"588"},{"size":1101,"mtime":1647767462764,"results":"704","hashOfConfig":"588"},{"size":935,"mtime":1647767462504,"results":"705","hashOfConfig":"588"},{"size":8764,"mtime":1647767462519,"results":"706","hashOfConfig":"588"},{"size":3730,"mtime":1647767462517,"results":"707","hashOfConfig":"588"},{"size":1042,"mtime":1647767462831,"results":"708","hashOfConfig":"588"},{"size":1054,"mtime":1647767462832,"results":"709","hashOfConfig":"588"},{"size":1087,"mtime":1647767462828,"results":"710","hashOfConfig":"588"},{"size":1467,"mtime":1647767462889,"results":"711","hashOfConfig":"588"},{"size":1207,"mtime":1647767462895,"results":"712","hashOfConfig":"588"},{"size":1160,"mtime":1647767462900,"results":"713","hashOfConfig":"588"},{"size":914,"mtime":1647767462888,"results":"714","hashOfConfig":"588"},{"size":1062,"mtime":1647767462891,"results":"715","hashOfConfig":"588"},{"size":1094,"mtime":1647767462896,"results":"716","hashOfConfig":"588"},{"size":1170,"mtime":1647767462892,"results":"717","hashOfConfig":"588"},{"size":1056,"mtime":1647767462887,"results":"718","hashOfConfig":"588"},{"size":1343,"mtime":1647767462898,"results":"719","hashOfConfig":"588"},{"size":1304,"mtime":1647767462918,"results":"720","hashOfConfig":"588"},{"size":1062,"mtime":1647767462882,"results":"721","hashOfConfig":"588"},{"size":1094,"mtime":1647767462883,"results":"722","hashOfConfig":"588"},{"size":1213,"mtime":1647767462879,"results":"723","hashOfConfig":"588"},{"size":971,"mtime":1647767462924,"results":"724","hashOfConfig":"588"},{"size":1231,"mtime":1647767462919,"results":"725","hashOfConfig":"588"},{"size":1250,"mtime":1647767462921,"results":"726","hashOfConfig":"588"},{"size":998,"mtime":1647767462876,"results":"727","hashOfConfig":"588"},{"size":974,"mtime":1647767462871,"results":"728","hashOfConfig":"588"},{"size":1201,"mtime":1647767462872,"results":"729","hashOfConfig":"588"},{"size":1080,"mtime":1647767462739,"results":"730","hashOfConfig":"588"},{"size":1132,"mtime":1647767462742,"results":"731","hashOfConfig":"588"},{"size":1051,"mtime":1647767462701,"results":"732","hashOfConfig":"588"},{"size":1120,"mtime":1647767462704,"results":"733","hashOfConfig":"588"},{"size":1132,"mtime":1647767462744,"results":"734","hashOfConfig":"588"},{"size":1092,"mtime":1647767462741,"results":"735","hashOfConfig":"588"},{"size":1358,"mtime":1647767462735,"results":"736","hashOfConfig":"588"},{"size":1116,"mtime":1647767462710,"results":"737","hashOfConfig":"588"},{"size":1316,"mtime":1647767462708,"results":"738","hashOfConfig":"588"},{"size":1062,"mtime":1647767462756,"results":"739","hashOfConfig":"588"},{"size":1025,"mtime":1647767462747,"results":"740","hashOfConfig":"588"},{"size":1076,"mtime":1647767462760,"results":"741","hashOfConfig":"588"},{"size":1126,"mtime":1647767462761,"results":"742","hashOfConfig":"588"},{"size":1080,"mtime":1647767462759,"results":"743","hashOfConfig":"588"},{"size":1216,"mtime":1647767462753,"results":"744","hashOfConfig":"588"},{"size":5296,"mtime":1647767462545,"results":"745","hashOfConfig":"588"},{"size":7368,"mtime":1647767462577,"results":"746","hashOfConfig":"588"},{"size":7127,"mtime":1647767462575,"results":"747","hashOfConfig":"588"},{"size":5610,"mtime":1647767462521,"results":"748","hashOfConfig":"588"},{"size":7166,"mtime":1647767462532,"results":"749","hashOfConfig":"588"},{"size":5859,"mtime":1647767462400,"results":"750","hashOfConfig":"588"},{"size":5912,"mtime":1647767462401,"results":"751","hashOfConfig":"588"},{"size":9988,"mtime":1647767462412,"results":"752","hashOfConfig":"588"},{"size":10780,"mtime":1647767462403,"results":"753","hashOfConfig":"588"},{"size":1222,"mtime":1647767462571,"results":"754","hashOfConfig":"588"},{"size":999,"mtime":1647767462951,"results":"755","hashOfConfig":"588"},{"size":6296,"mtime":1647767462330,"results":"756","hashOfConfig":"588"},{"size":4061,"mtime":1647767462441,"results":"757","hashOfConfig":"588"},{"size":5187,"mtime":1647767462568,"results":"758","hashOfConfig":"588"},{"size":6195,"mtime":1647767462569,"results":"759","hashOfConfig":"588"},{"size":4573,"mtime":1647767462567,"results":"760","hashOfConfig":"588"},{"size":3889,"mtime":1647767462566,"results":"761","hashOfConfig":"588"},{"size":1341,"mtime":1647767462340,"results":"762","hashOfConfig":"588"},{"size":2793,"mtime":1647767462334,"results":"763","hashOfConfig":"588"},{"size":8920,"mtime":1647767462558,"results":"764","hashOfConfig":"588"},{"size":676,"mtime":1647767462578,"results":"765","hashOfConfig":"588"},{"size":3025,"mtime":1647767462455,"results":"766","hashOfConfig":"588"},{"size":5399,"mtime":1647767462460,"results":"767","hashOfConfig":"588"},{"size":16187,"mtime":1647767462457,"results":"768","hashOfConfig":"588"},{"size":2397,"mtime":1647767462467,"results":"769","hashOfConfig":"588"},{"size":2580,"mtime":1647767462473,"results":"770","hashOfConfig":"588"},{"size":3536,"mtime":1647767462544,"results":"771","hashOfConfig":"588"},{"size":3385,"mtime":1647767462540,"results":"772","hashOfConfig":"588"},{"size":8094,"mtime":1647767462554,"results":"773","hashOfConfig":"588"},{"size":4903,"mtime":1647767462421,"results":"774","hashOfConfig":"588"},{"size":381,"mtime":1647767462428,"results":"775","hashOfConfig":"588"},{"size":11915,"mtime":1647767462484,"results":"776","hashOfConfig":"588"},{"size":3103,"mtime":1647767462489,"results":"777","hashOfConfig":"588"},{"size":584,"mtime":1647767462509,"results":"778","hashOfConfig":"588"},{"size":1389,"mtime":1647767462931,"results":"779","hashOfConfig":"588"},{"size":1684,"mtime":1647767462531,"results":"780","hashOfConfig":"588"},{"size":398,"mtime":1647767462500,"results":"781","hashOfConfig":"588"},{"size":401,"mtime":1647767462497,"results":"782","hashOfConfig":"588"},{"size":13770,"mtime":1647767462405,"results":"783","hashOfConfig":"588"},{"size":421,"mtime":1647767462436,"results":"784","hashOfConfig":"588"},{"size":419,"mtime":1647767462445,"results":"785","hashOfConfig":"588"},{"size":5944,"mtime":1647767462533,"results":"786","hashOfConfig":"588"},{"size":7925,"mtime":1647767462560,"results":"787","hashOfConfig":"588"},{"size":3409,"mtime":1647767462439,"results":"788","hashOfConfig":"588"},{"size":13164,"mtime":1647767462563,"results":"789","hashOfConfig":"588"},{"size":1524,"mtime":1647767462369,"results":"790","hashOfConfig":"588"},{"size":1008,"mtime":1647767462361,"results":"791","hashOfConfig":"588"},{"size":11855,"mtime":1647767462346,"results":"792","hashOfConfig":"588"},{"size":1630,"mtime":1647767462565,"results":"793","hashOfConfig":"588"},{"size":9580,"mtime":1647767462529,"results":"794","hashOfConfig":"588"},{"size":1612,"mtime":1647767462559,"results":"795","hashOfConfig":"588"},{"size":1260,"mtime":1647767462258,"results":"796","hashOfConfig":"588"},{"size":1018,"mtime":1647767462458,"results":"797","hashOfConfig":"588"},{"size":270,"mtime":1647767462982,"results":"798","hashOfConfig":"588"},{"size":695,"mtime":1647767462358,"results":"799","hashOfConfig":"588"},{"size":9567,"mtime":1647767462543,"results":"800","hashOfConfig":"588"},{"size":4143,"mtime":1647767462538,"results":"801","hashOfConfig":"588"},{"size":3516,"mtime":1647767462426,"results":"802","hashOfConfig":"588"},{"size":3709,"mtime":1647767462508,"results":"803","hashOfConfig":"588"},{"size":6159,"mtime":1647767462507,"results":"804","hashOfConfig":"588"},{"size":4553,"mtime":1647767462488,"results":"805","hashOfConfig":"588"},{"size":15341,"mtime":1647767462487,"results":"806","hashOfConfig":"588"},{"size":22832,"mtime":1647767462479,"results":"807","hashOfConfig":"588"},{"size":9954,"mtime":1647767462425,"results":"808","hashOfConfig":"588"},{"size":594,"mtime":1647767462417,"results":"809","hashOfConfig":"588"},{"size":596,"mtime":1647767462410,"results":"810","hashOfConfig":"588"},{"size":4055,"mtime":1647767462483,"results":"811","hashOfConfig":"588"},{"size":2036,"mtime":1647767462482,"results":"812","hashOfConfig":"588"},{"size":1531,"mtime":1648192641329,"results":"813","hashOfConfig":"588"},{"size":3437,"mtime":1647767462536,"results":"814","hashOfConfig":"588"},{"size":4058,"mtime":1647767462553,"results":"815","hashOfConfig":"588"},{"size":2036,"mtime":1647767462552,"results":"816","hashOfConfig":"588"},{"size":1534,"mtime":1647767462551,"results":"817","hashOfConfig":"588"},{"size":3175,"mtime":1647767462499,"results":"818","hashOfConfig":"588"},{"size":3355,"mtime":1647767462496,"results":"819","hashOfConfig":"588"},{"size":4010,"mtime":1647767462494,"results":"820","hashOfConfig":"588"},{"size":5604,"mtime":1647767462498,"results":"821","hashOfConfig":"588"},{"size":50,"mtime":1647767462327,"results":"822","hashOfConfig":"588"},{"size":8617,"mtime":1647767462542,"results":"823","hashOfConfig":"588"},{"size":5718,"mtime":1647767462435,"results":"824","hashOfConfig":"588"},{"size":5295,"mtime":1647767462444,"results":"825","hashOfConfig":"588"},{"size":14533,"mtime":1647767462443,"results":"826","hashOfConfig":"588"},{"size":12550,"mtime":1647767462434,"results":"827","hashOfConfig":"588"},{"size":6594,"mtime":1647767462438,"results":"828","hashOfConfig":"588"},{"size":1071,"mtime":1647767462562,"results":"829","hashOfConfig":"588"},{"size":1163,"mtime":1647767462528,"results":"830","hashOfConfig":"588"},{"size":555,"mtime":1647767462452,"results":"831","hashOfConfig":"588"},{"size":523,"mtime":1647767462471,"results":"832","hashOfConfig":"588"},{"size":626,"mtime":1647774414238,"results":"833","hashOfConfig":"588"},{"size":1956,"mtime":1647767462539,"results":"834","hashOfConfig":"588"},{"size":3520,"mtime":1647767462416,"results":"835","hashOfConfig":"588"},{"size":3561,"mtime":1647767462408,"results":"836","hashOfConfig":"588"},{"size":4167,"mtime":1647767462407,"results":"837","hashOfConfig":"588"},{"size":4086,"mtime":1647767462415,"results":"838","hashOfConfig":"588"},{"size":553,"mtime":1647767462465,"results":"839","hashOfConfig":"588"},{"size":7395,"mtime":1647767462307,"results":"840","hashOfConfig":"588"},{"size":587,"mtime":1647767462355,"results":"841","hashOfConfig":"588"},{"size":1943,"mtime":1647767462351,"results":"842","hashOfConfig":"588"},{"size":12063,"mtime":1647767462344,"results":"843","hashOfConfig":"588"},{"size":567,"mtime":1647767462389,"results":"844","hashOfConfig":"588"},{"size":1026,"mtime":1647767462373,"results":"845","hashOfConfig":"588"},{"size":1440,"mtime":1647767462353,"results":"846","hashOfConfig":"588"},{"size":3934,"mtime":1647767462451,"results":"847","hashOfConfig":"588"},{"size":3509,"mtime":1647767462470,"results":"848","hashOfConfig":"588"},{"size":6310,"mtime":1647767462469,"results":"849","hashOfConfig":"588"},{"size":8543,"mtime":1647767462450,"results":"850","hashOfConfig":"588"},{"size":1050,"mtime":1647767462940,"results":"851","hashOfConfig":"588"},{"size":3373,"mtime":1647767462464,"results":"852","hashOfConfig":"588"},{"size":6287,"mtime":1647767462463,"results":"853","hashOfConfig":"588"},{"size":438,"mtime":1647767462510,"results":"854","hashOfConfig":"588"},{"size":2851,"mtime":1647767462309,"results":"855","hashOfConfig":"588"},{"size":466,"mtime":1647767462472,"results":"856","hashOfConfig":"588"},{"size":662,"mtime":1647767462453,"results":"857","hashOfConfig":"588"},{"size":1107,"mtime":1647767462748,"results":"858","hashOfConfig":"588"},{"size":52,"mtime":1647767462314,"results":"859","hashOfConfig":"588"},{"size":11439,"mtime":1647767462304,"results":"860","hashOfConfig":"588"},{"size":911,"mtime":1647767462466,"results":"861","hashOfConfig":"588"},{"size":1706,"mtime":1647767462326,"results":"862","hashOfConfig":"588"},{"size":2117,"mtime":1647767462325,"results":"863","hashOfConfig":"588"},{"size":860,"mtime":1647767462311,"results":"864","hashOfConfig":"588"},{"size":148,"mtime":1647767462324,"results":"865","hashOfConfig":"588"},{"size":9633,"mtime":1647767462413,"results":"866","hashOfConfig":"588"},{"size":453,"mtime":1647767462313,"results":"867","hashOfConfig":"588"},{"size":4954,"mtime":1647767462312,"results":"868","hashOfConfig":"588"},{"size":75,"mtime":1647767462317,"results":"869","hashOfConfig":"588"},{"size":1747,"mtime":1647767462322,"results":"870","hashOfConfig":"588"},{"size":1907,"mtime":1647767462384,"results":"871","hashOfConfig":"588"},{"size":72,"mtime":1647767462316,"results":"872","hashOfConfig":"588"},{"size":783,"mtime":1647767462319,"results":"873","hashOfConfig":"588"},{"size":1166,"mtime":1647767462315,"results":"874","hashOfConfig":"588"},{"size":517,"mtime":1647767462321,"results":"875","hashOfConfig":"588"},{"size":728,"mtime":1647767462320,"results":"876","hashOfConfig":"588"},{"size":7167,"mtime":1647767462524,"results":"877","hashOfConfig":"588"},{"size":6919,"mtime":1647767462523,"results":"878","hashOfConfig":"588"},{"size":5725,"mtime":1647767462522,"results":"879","hashOfConfig":"588"},{"size":1724,"mtime":1647767462379,"results":"880","hashOfConfig":"588"},{"size":836,"mtime":1647767462611,"results":"881","hashOfConfig":"882"},{"size":2758,"mtime":1647767462059,"results":"883","hashOfConfig":"882"},{"size":660,"mtime":1647767462637,"results":"884","hashOfConfig":"882"},{"size":10095,"mtime":1647767462583,"results":"885","hashOfConfig":"882"},{"size":2412,"mtime":1647767462943,"results":"886","hashOfConfig":"882"},{"size":4698,"mtime":1647767462618,"results":"887","hashOfConfig":"882"},{"size":1981,"mtime":1647767462745,"results":"888","hashOfConfig":"882"},{"size":2024,"mtime":1647767462624,"results":"889","hashOfConfig":"882"},{"size":1471,"mtime":1647767462616,"results":"890","hashOfConfig":"882"},{"size":744,"mtime":1647767462622,"results":"891","hashOfConfig":"882"},{"size":2553,"mtime":1647767462348,"results":"892","hashOfConfig":"882"},{"size":1835,"mtime":1647767462772,"results":"893","hashOfConfig":"882"},{"size":949,"mtime":1647767462885,"results":"894","hashOfConfig":"882"},{"size":3978,"mtime":1647767462392,"results":"895","hashOfConfig":"882"},{"size":287,"mtime":1647767462631,"results":"896","hashOfConfig":"882"},{"size":8289,"mtime":1647767462331,"results":"897","hashOfConfig":"882"},{"size":1812,"mtime":1647767462336,"results":"898","hashOfConfig":"882"},{"size":703,"mtime":1647767462338,"results":"899","hashOfConfig":"882"},{"size":190,"mtime":1647767462823,"results":"900","hashOfConfig":"882"},{"size":853,"mtime":1647767462936,"results":"901","hashOfConfig":"882"},{"size":870,"mtime":1647767462755,"results":"902","hashOfConfig":"882"},{"size":900,"mtime":1647767462844,"results":"903","hashOfConfig":"882"},{"size":927,"mtime":1647767462738,"results":"904","hashOfConfig":"882"},{"size":465,"mtime":1647767462880,"results":"905","hashOfConfig":"882"},{"size":421,"mtime":1647767462873,"results":"906","hashOfConfig":"882"},{"size":1070,"mtime":1647767462894,"results":"907","hashOfConfig":"882"},{"size":463,"mtime":1647767462830,"results":"908","hashOfConfig":"882"},{"size":523,"mtime":1647767462650,"results":"909","hashOfConfig":"882"},{"size":500,"mtime":1647767462766,"results":"910","hashOfConfig":"882"},{"size":403,"mtime":1647767462642,"results":"911","hashOfConfig":"882"},{"size":537,"mtime":1647767462661,"results":"912","hashOfConfig":"882"},{"size":346,"mtime":1647767462819,"results":"913","hashOfConfig":"882"},{"size":627,"mtime":1647767462682,"results":"914","hashOfConfig":"882"},{"size":230,"mtime":1647767462816,"results":"915","hashOfConfig":"882"},{"size":466,"mtime":1647767462923,"results":"916","hashOfConfig":"882"},{"size":174,"mtime":1647767462635,"results":"917","hashOfConfig":"882"},{"size":1536,"mtime":1647767462634,"results":"918","hashOfConfig":"882"},{"size":5244,"mtime":1647767462633,"results":"919","hashOfConfig":"882"},{"size":542,"mtime":1647767462869,"results":"920","hashOfConfig":"882"},{"size":24552,"mtime":1647767462629,"results":"921","hashOfConfig":"882"},{"size":991,"mtime":1647767462393,"results":"922","hashOfConfig":"882"},{"size":7523,"mtime":1647767462328,"results":"923","hashOfConfig":"882"},{"size":5361,"mtime":1647767462548,"results":"924","hashOfConfig":"882"},{"size":3334,"mtime":1647767462515,"results":"925","hashOfConfig":"882"},{"size":10743,"mtime":1647767462503,"results":"926","hashOfConfig":"882"},{"size":2215,"mtime":1647767462935,"results":"927","hashOfConfig":"882"},{"size":1021,"mtime":1647767462929,"results":"928","hashOfConfig":"882"},{"size":1217,"mtime":1647767462939,"results":"929","hashOfConfig":"882"},{"size":1079,"mtime":1647767462937,"results":"930","hashOfConfig":"882"},{"size":1384,"mtime":1647767462934,"results":"931","hashOfConfig":"882"},{"size":1280,"mtime":1647767462751,"results":"932","hashOfConfig":"882"},{"size":1880,"mtime":1647767462933,"results":"933","hashOfConfig":"882"},{"size":1416,"mtime":1647767462754,"results":"934","hashOfConfig":"882"},{"size":1097,"mtime":1647767462825,"results":"935","hashOfConfig":"882"},{"size":1203,"mtime":1647767462941,"results":"936","hashOfConfig":"882"},{"size":1080,"mtime":1647767462752,"results":"937","hashOfConfig":"882"},{"size":1126,"mtime":1647767462761,"results":"938","hashOfConfig":"882"},{"size":1076,"mtime":1647767462760,"results":"939","hashOfConfig":"882"},{"size":1393,"mtime":1647767462749,"results":"940","hashOfConfig":"882"},{"size":2716,"mtime":1647767462847,"results":"941","hashOfConfig":"882"},{"size":1417,"mtime":1647767462707,"results":"942","hashOfConfig":"882"},{"size":1080,"mtime":1647767462878,"results":"943","hashOfConfig":"882"},{"size":1045,"mtime":1647767462928,"results":"944","hashOfConfig":"882"},{"size":971,"mtime":1647767462875,"results":"945","hashOfConfig":"882"},{"size":1221,"mtime":1647767462897,"results":"946","hashOfConfig":"882"},{"size":1216,"mtime":1647767462753,"results":"947","hashOfConfig":"882"},{"size":1080,"mtime":1647767462759,"results":"948","hashOfConfig":"882"},{"size":1001,"mtime":1647767462647,"results":"949","hashOfConfig":"882"},{"size":1155,"mtime":1647767462768,"results":"950","hashOfConfig":"882"},{"size":961,"mtime":1647767462639,"results":"951","hashOfConfig":"882"},{"size":1088,"mtime":1647767462826,"results":"952","hashOfConfig":"882"},{"size":977,"mtime":1647767462655,"results":"953","hashOfConfig":"882"},{"size":985,"mtime":1647767462925,"results":"954","hashOfConfig":"882"},{"size":1789,"mtime":1647767462681,"results":"955","hashOfConfig":"882"},{"size":1048,"mtime":1647767462820,"results":"956","hashOfConfig":"882"},{"size":1763,"mtime":1647767462814,"results":"957","hashOfConfig":"882"},{"size":971,"mtime":1647767462924,"results":"958","hashOfConfig":"882"},{"size":1231,"mtime":1647767462919,"results":"959","hashOfConfig":"882"},{"size":1250,"mtime":1647767462921,"results":"960","hashOfConfig":"882"},{"size":977,"mtime":1647767462676,"results":"961","hashOfConfig":"882"},{"size":984,"mtime":1647767462686,"results":"962","hashOfConfig":"882"},{"size":1014,"mtime":1647767462687,"results":"963","hashOfConfig":"882"},{"size":1342,"mtime":1647767462677,"results":"964","hashOfConfig":"882"},{"size":1307,"mtime":1647767462817,"results":"965","hashOfConfig":"882"},{"size":1093,"mtime":1647767462821,"results":"966","hashOfConfig":"882"},{"size":981,"mtime":1647767462664,"results":"967","hashOfConfig":"882"},{"size":1014,"mtime":1647767462667,"results":"968","hashOfConfig":"882"},{"size":5859,"mtime":1647767462620,"results":"969","hashOfConfig":"882"},{"size":1790,"mtime":1647767462658,"results":"970","hashOfConfig":"882"},{"size":1631,"mtime":1647767462656,"results":"971","hashOfConfig":"882"},{"size":893,"mtime":1647767462644,"results":"972","hashOfConfig":"882"},{"size":10478,"mtime":1647767462546,"results":"973","hashOfConfig":"882"},{"size":954,"mtime":1647767462514,"results":"974","hashOfConfig":"882"},{"size":2001,"mtime":1647767462476,"results":"975","hashOfConfig":"882"},{"size":3849,"mtime":1647767462563,"results":"976","hashOfConfig":"882"},{"size":10758,"mtime":1647767462526,"results":"977","hashOfConfig":"882"},{"size":9827,"mtime":1647767462572,"results":"978","hashOfConfig":"882"},{"size":4010,"mtime":1647767462580,"results":"979","hashOfConfig":"882"},{"size":680,"mtime":1647767462422,"results":"980","hashOfConfig":"882"},{"size":4332,"mtime":1647767462446,"results":"981","hashOfConfig":"882"},{"size":867,"mtime":1647767462555,"results":"982","hashOfConfig":"882"},{"size":10777,"mtime":1647767462419,"results":"983","hashOfConfig":"882"},{"size":4452,"mtime":1647767462535,"results":"984","hashOfConfig":"882"},{"size":950,"mtime":1647767462432,"results":"985","hashOfConfig":"882"},{"size":867,"mtime":1647767462485,"results":"986","hashOfConfig":"882"},{"size":896,"mtime":1647767462501,"results":"987","hashOfConfig":"882"},{"size":712,"mtime":1647767462511,"results":"988","hashOfConfig":"882"},{"size":633,"mtime":1647767462490,"results":"989","hashOfConfig":"882"},{"size":957,"mtime":1647767462645,"results":"990","hashOfConfig":"882"},{"size":935,"mtime":1647767462504,"results":"991","hashOfConfig":"882"},{"size":1130,"mtime":1647767462763,"results":"992","hashOfConfig":"882"},{"size":1067,"mtime":1647767462641,"results":"993","hashOfConfig":"882"},{"size":1101,"mtime":1647767462764,"results":"994","hashOfConfig":"882"},{"size":1036,"mtime":1647767462653,"results":"995","hashOfConfig":"882"},{"size":1004,"mtime":1647767462652,"results":"996","hashOfConfig":"882"},{"size":1087,"mtime":1647767462828,"results":"997","hashOfConfig":"882"},{"size":1054,"mtime":1647767462832,"results":"998","hashOfConfig":"882"},{"size":1467,"mtime":1647767462889,"results":"999","hashOfConfig":"882"},{"size":1160,"mtime":1647767462900,"results":"1000","hashOfConfig":"882"},{"size":1207,"mtime":1647767462895,"results":"1001","hashOfConfig":"882"},{"size":1071,"mtime":1647767462649,"results":"1002","hashOfConfig":"882"},{"size":1056,"mtime":1647767462887,"results":"1003","hashOfConfig":"882"},{"size":1170,"mtime":1647767462892,"results":"1004","hashOfConfig":"882"},{"size":1169,"mtime":1647767462770,"results":"1005","hashOfConfig":"882"},{"size":1042,"mtime":1647767462831,"results":"1006","hashOfConfig":"882"},{"size":914,"mtime":1647767462888,"results":"1007","hashOfConfig":"882"},{"size":1343,"mtime":1647767462898,"results":"1008","hashOfConfig":"882"},{"size":998,"mtime":1647767462876,"results":"1009","hashOfConfig":"882"},{"size":1304,"mtime":1647767462918,"results":"1010","hashOfConfig":"882"},{"size":974,"mtime":1647767462871,"results":"1011","hashOfConfig":"882"},{"size":1062,"mtime":1647767462882,"results":"1012","hashOfConfig":"882"},{"size":1201,"mtime":1647767462872,"results":"1013","hashOfConfig":"882"},{"size":1213,"mtime":1647767462879,"results":"1014","hashOfConfig":"882"},{"size":1094,"mtime":1647767462896,"results":"1015","hashOfConfig":"882"},{"size":1062,"mtime":1647767462891,"results":"1016","hashOfConfig":"882"},{"size":1094,"mtime":1647767462883,"results":"1017","hashOfConfig":"882"},{"size":8764,"mtime":1647767462519,"results":"1018","hashOfConfig":"882"},{"size":1080,"mtime":1647767462739,"results":"1019","hashOfConfig":"882"},{"size":1132,"mtime":1647767462742,"results":"1020","hashOfConfig":"882"},{"size":1051,"mtime":1647767462701,"results":"1021","hashOfConfig":"882"},{"size":1120,"mtime":1647767462704,"results":"1022","hashOfConfig":"882"},{"size":1132,"mtime":1647767462744,"results":"1023","hashOfConfig":"882"},{"size":1092,"mtime":1647767462741,"results":"1024","hashOfConfig":"882"},{"size":1116,"mtime":1647767462710,"results":"1025","hashOfConfig":"882"},{"size":1358,"mtime":1647767462735,"results":"1026","hashOfConfig":"882"},{"size":1316,"mtime":1647767462708,"results":"1027","hashOfConfig":"882"},{"size":1364,"mtime":1647767462849,"results":"1028","hashOfConfig":"882"},{"size":1735,"mtime":1647767462848,"results":"1029","hashOfConfig":"882"},{"size":1196,"mtime":1647767462837,"results":"1030","hashOfConfig":"882"},{"size":1341,"mtime":1647767462841,"results":"1031","hashOfConfig":"882"},{"size":3730,"mtime":1647767462517,"results":"1032","hashOfConfig":"882"},{"size":1621,"mtime":1647767462839,"results":"1033","hashOfConfig":"882"},{"size":1313,"mtime":1647767462836,"results":"1034","hashOfConfig":"882"},{"size":1631,"mtime":1647767462846,"results":"1035","hashOfConfig":"882"},{"size":1938,"mtime":1647767462843,"results":"1036","hashOfConfig":"882"},{"size":1062,"mtime":1647767462756,"results":"1037","hashOfConfig":"882"},{"size":1025,"mtime":1647767462747,"results":"1038","hashOfConfig":"882"},{"size":1222,"mtime":1647767462571,"results":"1039","hashOfConfig":"882"},{"size":5296,"mtime":1647767462545,"results":"1040","hashOfConfig":"882"},{"size":5187,"mtime":1647767462568,"results":"1041","hashOfConfig":"882"},{"size":6195,"mtime":1647767462569,"results":"1042","hashOfConfig":"882"},{"size":4573,"mtime":1647767462567,"results":"1043","hashOfConfig":"882"},{"size":3889,"mtime":1647767462566,"results":"1044","hashOfConfig":"882"},{"size":5610,"mtime":1647767462521,"results":"1045","hashOfConfig":"882"},{"size":7166,"mtime":1647767462532,"results":"1046","hashOfConfig":"882"},{"size":5859,"mtime":1647767462400,"results":"1047","hashOfConfig":"882"},{"size":6296,"mtime":1647767462330,"results":"1048","hashOfConfig":"882"},{"size":999,"mtime":1647767462951,"results":"1049","hashOfConfig":"882"},{"size":5912,"mtime":1647767462401,"results":"1050","hashOfConfig":"882"},{"size":1341,"mtime":1647767462340,"results":"1051","hashOfConfig":"882"},{"size":2793,"mtime":1647767462334,"results":"1052","hashOfConfig":"882"},{"size":4061,"mtime":1647767462441,"results":"1053","hashOfConfig":"882"},{"size":7368,"mtime":1647767462577,"results":"1054","hashOfConfig":"882"},{"size":7127,"mtime":1647767462575,"results":"1055","hashOfConfig":"882"},{"size":9988,"mtime":1647767462412,"results":"1056","hashOfConfig":"882"},{"size":10780,"mtime":1647767462403,"results":"1057","hashOfConfig":"882"},{"size":5725,"mtime":1647767462522,"results":"1058","hashOfConfig":"882"},{"size":7167,"mtime":1647767462524,"results":"1059","hashOfConfig":"882"},{"size":6919,"mtime":1647767462523,"results":"1060","hashOfConfig":"882"},{"size":2580,"mtime":1647767462473,"results":"1061","hashOfConfig":"882"},{"size":4903,"mtime":1647767462421,"results":"1062","hashOfConfig":"882"},{"size":11915,"mtime":1647767462484,"results":"1063","hashOfConfig":"882"},{"size":8094,"mtime":1647767462554,"results":"1064","hashOfConfig":"882"},{"size":381,"mtime":1647767462428,"results":"1065","hashOfConfig":"882"},{"size":3103,"mtime":1647767462489,"results":"1066","hashOfConfig":"882"},{"size":584,"mtime":1647767462509,"results":"1067","hashOfConfig":"882"},{"size":5944,"mtime":1647767462533,"results":"1068","hashOfConfig":"882"},{"size":398,"mtime":1647767462500,"results":"1069","hashOfConfig":"882"},{"size":401,"mtime":1647767462497,"results":"1070","hashOfConfig":"882"},{"size":1389,"mtime":1647767462931,"results":"1071","hashOfConfig":"882"},{"size":1630,"mtime":1647767462565,"results":"1072","hashOfConfig":"882"},{"size":9580,"mtime":1647767462529,"results":"1073","hashOfConfig":"882"},{"size":1684,"mtime":1647767462531,"results":"1074","hashOfConfig":"882"},{"size":1524,"mtime":1647767462369,"results":"1075","hashOfConfig":"882"},{"size":1008,"mtime":1647767462361,"results":"1076","hashOfConfig":"882"},{"size":676,"mtime":1647767462578,"results":"1077","hashOfConfig":"882"},{"size":421,"mtime":1647767462436,"results":"1078","hashOfConfig":"882"},{"size":419,"mtime":1647767462445,"results":"1079","hashOfConfig":"882"},{"size":3409,"mtime":1647767462439,"results":"1080","hashOfConfig":"882"},{"size":11855,"mtime":1647767462346,"results":"1081","hashOfConfig":"882"},{"size":13770,"mtime":1647767462405,"results":"1082","hashOfConfig":"882"},{"size":1260,"mtime":1647767462258,"results":"1083","hashOfConfig":"882"},{"size":1724,"mtime":1647767462379,"results":"1084","hashOfConfig":"882"},{"size":270,"mtime":1647767462982,"results":"1085","hashOfConfig":"882"},{"size":50,"mtime":1647767462327,"results":"1086","hashOfConfig":"882"},{"size":3516,"mtime":1647767462426,"results":"1087","hashOfConfig":"882"},{"size":4553,"mtime":1647767462488,"results":"1088","hashOfConfig":"882"},{"size":15341,"mtime":1647767462487,"results":"1089","hashOfConfig":"882"},{"size":3709,"mtime":1647767462508,"results":"1090","hashOfConfig":"882"},{"size":6159,"mtime":1647767462507,"results":"1091","hashOfConfig":"882"},{"size":3355,"mtime":1647767462496,"results":"1092","hashOfConfig":"882"},{"size":3175,"mtime":1647767462499,"results":"1093","hashOfConfig":"882"},{"size":4010,"mtime":1647767462494,"results":"1094","hashOfConfig":"882"},{"size":695,"mtime":1647767462358,"results":"1095","hashOfConfig":"882"},{"size":5604,"mtime":1647767462498,"results":"1096","hashOfConfig":"882"},{"size":9954,"mtime":1647767462425,"results":"1097","hashOfConfig":"882"},{"size":1163,"mtime":1647767462528,"results":"1098","hashOfConfig":"882"},{"size":4058,"mtime":1647767462553,"results":"1099","hashOfConfig":"882"},{"size":2036,"mtime":1647767462552,"results":"1100","hashOfConfig":"882"},{"size":1534,"mtime":1647767462551,"results":"1101","hashOfConfig":"882"},{"size":2036,"mtime":1647767462482,"results":"1102","hashOfConfig":"882"},{"size":1531,"mtime":1648192641329,"results":"1103","hashOfConfig":"882"},{"size":4055,"mtime":1647767462483,"results":"1104","hashOfConfig":"882"},{"size":5718,"mtime":1647767462435,"results":"1105","hashOfConfig":"882"},{"size":12550,"mtime":1647767462434,"results":"1106","hashOfConfig":"882"},{"size":5295,"mtime":1647767462444,"results":"1107","hashOfConfig":"882"},{"size":594,"mtime":1647767462417,"results":"1108","hashOfConfig":"882"},{"size":596,"mtime":1647767462410,"results":"1109","hashOfConfig":"882"},{"size":14533,"mtime":1647767462443,"results":"1110","hashOfConfig":"882"},{"size":1956,"mtime":1647767462539,"results":"1111","hashOfConfig":"882"},{"size":6594,"mtime":1647767462438,"results":"1112","hashOfConfig":"882"},{"size":22832,"mtime":1647767462479,"results":"1113","hashOfConfig":"882"},{"size":587,"mtime":1647767462355,"results":"1114","hashOfConfig":"882"},{"size":523,"mtime":1647767462471,"results":"1115","hashOfConfig":"882"},{"size":1907,"mtime":1647767462384,"results":"1116","hashOfConfig":"882"},{"size":1026,"mtime":1647767462373,"results":"1117","hashOfConfig":"882"},{"size":7395,"mtime":1647767462307,"results":"1118","hashOfConfig":"882"},{"size":1943,"mtime":1647767462351,"results":"1119","hashOfConfig":"882"},{"size":626,"mtime":1647774414238,"results":"1120","hashOfConfig":"882"},{"size":3520,"mtime":1647767462416,"results":"1121","hashOfConfig":"882"},{"size":4086,"mtime":1647767462415,"results":"1122","hashOfConfig":"882"},{"size":3561,"mtime":1647767462408,"results":"1123","hashOfConfig":"882"},{"size":438,"mtime":1647767462510,"results":"1124","hashOfConfig":"882"},{"size":4167,"mtime":1647767462407,"results":"1125","hashOfConfig":"882"},{"size":3509,"mtime":1647767462470,"results":"1126","hashOfConfig":"882"},{"size":6310,"mtime":1647767462469,"results":"1127","hashOfConfig":"882"},{"size":2851,"mtime":1647767462309,"results":"1128","hashOfConfig":"882"},{"size":567,"mtime":1647767462389,"results":"1129","hashOfConfig":"882"},{"size":1440,"mtime":1647767462353,"results":"1130","hashOfConfig":"882"},{"size":1050,"mtime":1647767462940,"results":"1131","hashOfConfig":"882"},{"size":466,"mtime":1647767462472,"results":"1132","hashOfConfig":"882"},{"size":52,"mtime":1647767462314,"results":"1133","hashOfConfig":"882"},{"size":11439,"mtime":1647767462304,"results":"1134","hashOfConfig":"882"},{"size":9633,"mtime":1647767462413,"results":"1135","hashOfConfig":"882"},{"size":1107,"mtime":1647767462748,"results":"1136","hashOfConfig":"882"},{"size":1706,"mtime":1647767462326,"results":"1137","hashOfConfig":"882"},{"size":2117,"mtime":1647767462325,"results":"1138","hashOfConfig":"882"},{"size":8920,"mtime":1647767462558,"results":"1139","hashOfConfig":"882"},{"size":860,"mtime":1647767462311,"results":"1140","hashOfConfig":"882"},{"size":148,"mtime":1647767462324,"results":"1141","hashOfConfig":"882"},{"size":3385,"mtime":1647767462540,"results":"1142","hashOfConfig":"882"},{"size":7925,"mtime":1647767462560,"results":"1143","hashOfConfig":"882"},{"size":13164,"mtime":1647767462563,"results":"1144","hashOfConfig":"882"},{"size":5399,"mtime":1647767462460,"results":"1145","hashOfConfig":"882"},{"size":2397,"mtime":1647767462467,"results":"1146","hashOfConfig":"882"},{"size":3025,"mtime":1647767462455,"results":"1147","hashOfConfig":"882"},{"size":16187,"mtime":1647767462457,"results":"1148","hashOfConfig":"882"},{"size":3536,"mtime":1647767462544,"results":"1149","hashOfConfig":"882"},{"size":1612,"mtime":1647767462559,"results":"1150","hashOfConfig":"882"},{"size":453,"mtime":1647767462313,"results":"1151","hashOfConfig":"882"},{"size":75,"mtime":1647767462317,"results":"1152","hashOfConfig":"882"},{"size":1747,"mtime":1647767462322,"results":"1153","hashOfConfig":"882"},{"size":517,"mtime":1647767462321,"results":"1154","hashOfConfig":"882"},{"size":728,"mtime":1647767462320,"results":"1155","hashOfConfig":"882"},{"size":1018,"mtime":1647767462458,"results":"1156","hashOfConfig":"882"},{"size":4143,"mtime":1647767462538,"results":"1157","hashOfConfig":"882"},{"size":3437,"mtime":1647767462536,"results":"1158","hashOfConfig":"882"},{"size":9567,"mtime":1647767462543,"results":"1159","hashOfConfig":"882"},{"size":72,"mtime":1647767462316,"results":"1160","hashOfConfig":"882"},{"size":8617,"mtime":1647767462542,"results":"1161","hashOfConfig":"882"},{"size":1166,"mtime":1647767462315,"results":"1162","hashOfConfig":"882"},{"size":783,"mtime":1647767462319,"results":"1163","hashOfConfig":"882"},{"size":555,"mtime":1647767462452,"results":"1164","hashOfConfig":"882"},{"size":1071,"mtime":1647767462562,"results":"1165","hashOfConfig":"882"},{"size":12063,"mtime":1647767462344,"results":"1166","hashOfConfig":"882"},{"size":553,"mtime":1647767462465,"results":"1167","hashOfConfig":"882"},{"size":3934,"mtime":1647767462451,"results":"1168","hashOfConfig":"882"},{"size":8543,"mtime":1647767462450,"results":"1169","hashOfConfig":"882"},{"size":4954,"mtime":1647767462312,"results":"1170","hashOfConfig":"882"},{"size":662,"mtime":1647767462453,"results":"1171","hashOfConfig":"882"},{"size":3373,"mtime":1647767462464,"results":"1172","hashOfConfig":"882"},{"size":6287,"mtime":1647767462463,"results":"1173","hashOfConfig":"882"},{"size":911,"mtime":1647767462466,"results":"1174","hashOfConfig":"882"},{"filePath":"1175","messages":"1176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},"acj5g9",{"filePath":"1178","messages":"1179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1180","usedDeprecatedRules":"1177"},{"filePath":"1181","messages":"1182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1183","messages":"1184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1185","usedDeprecatedRules":"1177"},{"filePath":"1186","messages":"1187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1188","messages":"1189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1190","messages":"1191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1192","messages":"1193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1194","messages":"1195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1196","messages":"1197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1198","messages":"1199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1200","messages":"1201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1202","messages":"1203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1204","messages":"1205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1206","messages":"1207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1208","messages":"1209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1210","messages":"1211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1212","messages":"1213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1214","usedDeprecatedRules":"1177"},{"filePath":"1215","messages":"1216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1217","messages":"1218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1219","messages":"1220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1221","messages":"1222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1223","messages":"1224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1225","messages":"1226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1227","messages":"1228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1229","messages":"1230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1231","messages":"1232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1233","messages":"1234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1235","messages":"1236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1237","messages":"1238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1239","messages":"1240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1241","messages":"1242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1243","messages":"1244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1245","messages":"1246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1247","messages":"1248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1249","messages":"1250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1251","messages":"1252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1253","messages":"1254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1255","messages":"1256","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1257","usedDeprecatedRules":"1177"},{"filePath":"1258","messages":"1259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1260","messages":"1261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1262","messages":"1263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1264","messages":"1265","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1266","usedDeprecatedRules":"1177"},{"filePath":"1267","messages":"1268","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1269","usedDeprecatedRules":"1177"},{"filePath":"1270","messages":"1271","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1272","usedDeprecatedRules":"1177"},{"filePath":"1273","messages":"1274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1275","messages":"1276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1277","messages":"1278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1279","messages":"1280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1281","messages":"1282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1283","messages":"1284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1285","messages":"1286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1287","messages":"1288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1289","messages":"1290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1291","messages":"1292","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1293","usedDeprecatedRules":"1177"},{"filePath":"1294","messages":"1295","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1296","usedDeprecatedRules":"1177"},{"filePath":"1297","messages":"1298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1299","messages":"1300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1301","messages":"1302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1303","messages":"1304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1305","messages":"1306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1307","messages":"1308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1309","messages":"1310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1311","messages":"1312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1313","messages":"1314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1315","messages":"1316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1317","messages":"1318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1319","messages":"1320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1321","messages":"1322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1323","messages":"1324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1325","messages":"1326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1327","messages":"1328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1329","messages":"1330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1331","messages":"1332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1333","messages":"1334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1335","messages":"1336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1337","messages":"1338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1339","messages":"1340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1341","messages":"1342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1343","messages":"1344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1345","messages":"1346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1347","messages":"1348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1349","messages":"1350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1351","messages":"1352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1353","messages":"1354","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1355","usedDeprecatedRules":"1177"},{"filePath":"1356","messages":"1357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1358","messages":"1359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1360","messages":"1361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1362","messages":"1363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1364","messages":"1365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1366","messages":"1367","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1368","usedDeprecatedRules":"1177"},{"filePath":"1369","messages":"1370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1371","messages":"1372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1373","messages":"1374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1375","messages":"1376","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377","usedDeprecatedRules":"1177"},{"filePath":"1378","messages":"1379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1380","messages":"1381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1382","messages":"1383","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1384","usedDeprecatedRules":"1177"},{"filePath":"1385","messages":"1386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1387","usedDeprecatedRules":"1177"},{"filePath":"1388","messages":"1389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1390","messages":"1391","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1392","usedDeprecatedRules":"1177"},{"filePath":"1393","messages":"1394","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1395","usedDeprecatedRules":"1177"},{"filePath":"1396","messages":"1397","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1398","usedDeprecatedRules":"1177"},{"filePath":"1399","messages":"1400","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1401","usedDeprecatedRules":"1177"},{"filePath":"1402","messages":"1403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1404","messages":"1405","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1406","usedDeprecatedRules":"1177"},{"filePath":"1407","messages":"1408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1409","messages":"1410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1411","messages":"1412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1413","messages":"1414","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1415","usedDeprecatedRules":"1177"},{"filePath":"1416","messages":"1417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1418","messages":"1419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1420","messages":"1421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1422","messages":"1423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1424","messages":"1425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1426","messages":"1427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1428","messages":"1429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1430","messages":"1431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1432","messages":"1433","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1434","usedDeprecatedRules":"1177"},{"filePath":"1435","messages":"1436","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1437","usedDeprecatedRules":"1177"},{"filePath":"1438","messages":"1439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1440","messages":"1441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1442","messages":"1443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1444","messages":"1445","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1446","usedDeprecatedRules":"1177"},{"filePath":"1447","messages":"1448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1449","messages":"1450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1451","messages":"1452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1453","messages":"1454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1455","messages":"1456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1457","messages":"1458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1459","messages":"1460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1461","messages":"1462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1463","messages":"1464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1465","messages":"1466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1467","messages":"1468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1469","messages":"1470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1471","messages":"1472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1473","messages":"1474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1475","messages":"1476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1477","messages":"1478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1479","messages":"1480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1481","messages":"1482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1483","messages":"1484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1485","messages":"1486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1487","messages":"1488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1489","messages":"1490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1491","messages":"1492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1493","messages":"1494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1495","messages":"1496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1497","messages":"1498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1499","messages":"1500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1501","messages":"1502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1503","messages":"1504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1505","messages":"1506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1507","messages":"1508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1509","messages":"1510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1511","messages":"1512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1513","messages":"1514","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1515","usedDeprecatedRules":"1177"},{"filePath":"1516","messages":"1517","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1518","usedDeprecatedRules":"1177"},{"filePath":"1519","messages":"1520","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1521","usedDeprecatedRules":"1177"},{"filePath":"1522","messages":"1523","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1524","usedDeprecatedRules":"1177"},{"filePath":"1525","messages":"1526","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1527","usedDeprecatedRules":"1177"},{"filePath":"1528","messages":"1529","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1530","usedDeprecatedRules":"1177"},{"filePath":"1531","messages":"1532","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1533","usedDeprecatedRules":"1177"},{"filePath":"1534","messages":"1535","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1536","usedDeprecatedRules":"1177"},{"filePath":"1537","messages":"1538","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1539","usedDeprecatedRules":"1177"},{"filePath":"1540","messages":"1541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1542","messages":"1543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1544","messages":"1545","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1546","usedDeprecatedRules":"1177"},{"filePath":"1547","messages":"1548","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1549","usedDeprecatedRules":"1177"},{"filePath":"1550","messages":"1551","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1552","usedDeprecatedRules":"1177"},{"filePath":"1553","messages":"1554","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1555","usedDeprecatedRules":"1177"},{"filePath":"1556","messages":"1557","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1558","usedDeprecatedRules":"1177"},{"filePath":"1559","messages":"1560","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1561","usedDeprecatedRules":"1177"},{"filePath":"1562","messages":"1563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1564","messages":"1565","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1566","usedDeprecatedRules":"1177"},{"filePath":"1567","messages":"1568","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1569","usedDeprecatedRules":"1177"},{"filePath":"1570","messages":"1571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1572","messages":"1573","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1574","usedDeprecatedRules":"1177"},{"filePath":"1575","messages":"1576","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1577","usedDeprecatedRules":"1177"},{"filePath":"1578","messages":"1579","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1580","usedDeprecatedRules":"1177"},{"filePath":"1581","messages":"1582","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1583","usedDeprecatedRules":"1177"},{"filePath":"1584","messages":"1585","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1586","usedDeprecatedRules":"1177"},{"filePath":"1587","messages":"1588","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1589","usedDeprecatedRules":"1177"},{"filePath":"1590","messages":"1591","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1592","usedDeprecatedRules":"1177"},{"filePath":"1593","messages":"1594","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1595","usedDeprecatedRules":"1177"},{"filePath":"1596","messages":"1597","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1598","usedDeprecatedRules":"1177"},{"filePath":"1599","messages":"1600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1601","messages":"1602","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1603","usedDeprecatedRules":"1177"},{"filePath":"1604","messages":"1605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1606","messages":"1607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1608","messages":"1609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1610","messages":"1611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1612","messages":"1613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1614","messages":"1615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1616","messages":"1617","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1618","usedDeprecatedRules":"1177"},{"filePath":"1619","messages":"1620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1621","messages":"1622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1623","messages":"1624","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1625","usedDeprecatedRules":"1177"},{"filePath":"1626","messages":"1627","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1628","usedDeprecatedRules":"1177"},{"filePath":"1629","messages":"1630","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1631","usedDeprecatedRules":"1177"},{"filePath":"1632","messages":"1633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1634","messages":"1635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1636","messages":"1637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1638","messages":"1639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1640","messages":"1641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1642","messages":"1643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1644","messages":"1645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1646","messages":"1647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1648","messages":"1649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1650","messages":"1651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1652","messages":"1653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1654","messages":"1655","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1656","usedDeprecatedRules":"1177"},{"filePath":"1657","messages":"1658","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1659","usedDeprecatedRules":"1177"},{"filePath":"1660","messages":"1661","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1662","usedDeprecatedRules":"1177"},{"filePath":"1663","messages":"1664","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1665","usedDeprecatedRules":"1177"},{"filePath":"1666","messages":"1667","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1668","usedDeprecatedRules":"1177"},{"filePath":"1669","messages":"1670","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1671","usedDeprecatedRules":"1177"},{"filePath":"1672","messages":"1673","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1674","usedDeprecatedRules":"1177"},{"filePath":"1675","messages":"1676","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1677","usedDeprecatedRules":"1177"},{"filePath":"1678","messages":"1679","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1680","usedDeprecatedRules":"1177"},{"filePath":"1681","messages":"1682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1683","messages":"1684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1685","messages":"1686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1687","messages":"1688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1689","messages":"1690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1691","messages":"1692","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1693","usedDeprecatedRules":"1177"},{"filePath":"1694","messages":"1695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1696","messages":"1697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1698","messages":"1699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1700","messages":"1701","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1702","usedDeprecatedRules":"1177"},{"filePath":"1703","messages":"1704","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1705","usedDeprecatedRules":"1177"},{"filePath":"1706","messages":"1707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1708","messages":"1709","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1710","usedDeprecatedRules":"1177"},{"filePath":"1711","messages":"1712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1713","messages":"1714","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1715","usedDeprecatedRules":"1177"},{"filePath":"1716","messages":"1717","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1718","usedDeprecatedRules":"1177"},{"filePath":"1719","messages":"1720","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1721","usedDeprecatedRules":"1177"},{"filePath":"1722","messages":"1723","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1724","usedDeprecatedRules":"1177"},{"filePath":"1725","messages":"1726","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1727","usedDeprecatedRules":"1177"},{"filePath":"1728","messages":"1729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1730","messages":"1731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1732","messages":"1733","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1734","messages":"1735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1736","messages":"1737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1738","messages":"1739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1740","messages":"1741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1742","messages":"1743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1744","messages":"1745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1746","messages":"1747","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1748","usedDeprecatedRules":"1177"},{"filePath":"1749","messages":"1750","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1751","usedDeprecatedRules":"1177"},{"filePath":"1752","messages":"1753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1754","messages":"1755","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1756","usedDeprecatedRules":"1177"},{"filePath":"1757","messages":"1758","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1759","usedDeprecatedRules":"1177"},{"filePath":"1760","messages":"1761","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1762","usedDeprecatedRules":"1177"},{"filePath":"1763","messages":"1764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1765","messages":"1766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1767","messages":"1768","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1769","usedDeprecatedRules":"1177"},{"filePath":"1770","messages":"1771","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1772","usedDeprecatedRules":"1177"},{"filePath":"1773","messages":"1774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1775","messages":"1776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1777","messages":"1778","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1779","usedDeprecatedRules":"1177"},{"filePath":"1780","messages":"1781","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1782","usedDeprecatedRules":"1177"},{"filePath":"1783","messages":"1784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1785","messages":"1786","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1787","usedDeprecatedRules":"1177"},{"filePath":"1788","messages":"1789","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1790","usedDeprecatedRules":"1177"},{"filePath":"1791","messages":"1792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1793","messages":"1794","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1795","usedDeprecatedRules":"1177"},{"filePath":"1796","messages":"1797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1798","messages":"1799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1800","messages":"1801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1802","messages":"1803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1804","messages":"1805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1806"},{"filePath":"1807","messages":"1808","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1809","usedDeprecatedRules":"1177"},{"filePath":"1810","messages":"1811","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1812","usedDeprecatedRules":"1177"},{"filePath":"1813","messages":"1814","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1815","usedDeprecatedRules":"1177"},{"filePath":"1816","messages":"1817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1818","messages":"1819","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1820","messages":"1821","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1822","usedDeprecatedRules":"1177"},{"filePath":"1823","messages":"1824","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1825","usedDeprecatedRules":"1177"},{"filePath":"1826","messages":"1827","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1828","usedDeprecatedRules":"1177"},{"filePath":"1829","messages":"1830","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1831","messages":"1832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1833","messages":"1834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1835","messages":"1836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1837","messages":"1838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1839","messages":"1840","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1841","messages":"1842","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1843","messages":"1844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1177"},{"filePath":"1845","messages":"1846","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1847","usedDeprecatedRules":"1177"},{"filePath":"1848","messages":"1849","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1850","usedDeprecatedRules":"1177"},{"filePath":"1851","messages":"1852","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1853","usedDeprecatedRules":"1177"},{"filePath":"1854","messages":"1855","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1856","usedDeprecatedRules":"1177"},{"filePath":"1857","messages":"1858","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z3pa9o",{"filePath":"1859","messages":"1860","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1180"},{"filePath":"1861","messages":"1862","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1863","messages":"1864","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1185"},{"filePath":"1865","messages":"1866","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1867","messages":"1868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1869","messages":"1870","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1871","messages":"1872","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1873","messages":"1874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1875","messages":"1876","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1877","messages":"1878","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1879","messages":"1880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1881","messages":"1882","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1883","messages":"1884","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1885","messages":"1886","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1887","messages":"1888","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1889","messages":"1890","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1891","messages":"1892","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1214"},{"filePath":"1893","messages":"1894","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1895","messages":"1896","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1897","messages":"1898","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1899","messages":"1900","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1901","messages":"1902","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1903","messages":"1904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1905","messages":"1906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1907","messages":"1908","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1909","messages":"1910","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1911","messages":"1912","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1913","messages":"1914","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1915","messages":"1916","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1917","messages":"1918","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1919","messages":"1920","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1921","messages":"1922","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1923","messages":"1924","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1925","messages":"1926","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1927","messages":"1928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1929","messages":"1930","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1931","messages":"1932","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1933","messages":"1934","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1257"},{"filePath":"1935","messages":"1936","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1937","messages":"1938","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1939","messages":"1940","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1941","messages":"1942","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1266"},{"filePath":"1943","messages":"1944","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1272"},{"filePath":"1945","messages":"1946","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1269"},{"filePath":"1947","messages":"1948","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1296"},{"filePath":"1949","messages":"1950","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1951","messages":"1952","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1953","messages":"1954","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1955","messages":"1956","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1957","messages":"1958","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1959","messages":"1960","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1961","messages":"1962","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1963","messages":"1964","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1965","messages":"1966","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1967","messages":"1968","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1969","messages":"1970","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1971","messages":"1972","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1973","messages":"1974","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1975","messages":"1976","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1293"},{"filePath":"1977","messages":"1978","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1979","messages":"1980","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1981","messages":"1982","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1983","messages":"1984","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1985","messages":"1986","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1987","messages":"1988","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1989","messages":"1990","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1991","messages":"1992","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1993","messages":"1994","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1995","messages":"1996","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1997","messages":"1998","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1999","messages":"2000","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2001","messages":"2002","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2003","messages":"2004","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2005","messages":"2006","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2007","messages":"2008","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2009","messages":"2010","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2011","messages":"2012","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2013","messages":"2014","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2015","messages":"2016","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2017","messages":"2018","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2019","messages":"2020","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2021","messages":"2022","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2023","messages":"2024","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2025","messages":"2026","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2027","messages":"2028","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2029","messages":"2030","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2031","messages":"2032","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1355"},{"filePath":"2033","messages":"2034","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2035","messages":"2036","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1368"},{"filePath":"2037","messages":"2038","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2039","messages":"2040","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377"},{"filePath":"2041","messages":"2042","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2043","messages":"2044","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2045","messages":"2046","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1387"},{"filePath":"2047","messages":"2048","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2049","messages":"2050","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1392"},{"filePath":"2051","messages":"2052","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1395"},{"filePath":"2053","messages":"2054","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1398"},{"filePath":"2055","messages":"2056","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1406"},{"filePath":"2057","messages":"2058","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2059","messages":"2060","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2061","messages":"2062","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1384"},{"filePath":"2063","messages":"2064","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1401"},{"filePath":"2065","messages":"2066","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2067","messages":"2068","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2069","messages":"2070","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1415"},{"filePath":"2071","messages":"2072","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2073","messages":"2074","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2075","messages":"2076","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2077","messages":"2078","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2079","messages":"2080","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2081","messages":"2082","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2083","messages":"2084","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2085","messages":"2086","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2087","messages":"2088","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2089","messages":"2090","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2091","messages":"2092","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1446"},{"filePath":"2093","messages":"2094","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2095","messages":"2096","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2097","messages":"2098","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2099","messages":"2100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2101","messages":"2102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2103","messages":"2104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2105","messages":"2106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2107","messages":"2108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2109","messages":"2110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2111","messages":"2112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2113","messages":"2114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2115","messages":"2116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2117","messages":"2118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2119","messages":"2120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2121","messages":"2122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2123","messages":"2124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2125","messages":"2126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2127","messages":"2128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2129","messages":"2130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1434"},{"filePath":"2131","messages":"2132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2133","messages":"2134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2135","messages":"2136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2137","messages":"2138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2139","messages":"2140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2141","messages":"2142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2143","messages":"2144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2145","messages":"2146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2147","messages":"2148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2149","messages":"2150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2151","messages":"2152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2153","messages":"2154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2155","messages":"2156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2157","messages":"2158","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1437"},{"filePath":"2159","messages":"2160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2161","messages":"2162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2163","messages":"2164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2165","messages":"2166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2167","messages":"2168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2169","messages":"2170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2171","messages":"2172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2173","messages":"2174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1515"},{"filePath":"2175","messages":"2176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1552"},{"filePath":"2177","messages":"2178","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1555"},{"filePath":"2179","messages":"2180","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1558"},{"filePath":"2181","messages":"2182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1561"},{"filePath":"2183","messages":"2184","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1524"},{"filePath":"2185","messages":"2186","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1527"},{"filePath":"2187","messages":"2188","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1530"},{"filePath":"2189","messages":"2190","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1546"},{"filePath":"2191","messages":"2192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2193","messages":"2194","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1533"},{"filePath":"2195","messages":"2196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2197","messages":"2198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1566"},{"filePath":"2199","messages":"2200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1549"},{"filePath":"2201","messages":"2202","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1518"},{"filePath":"2203","messages":"2204","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1521"},{"filePath":"2205","messages":"2206","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1536"},{"filePath":"2207","messages":"2208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1539"},{"filePath":"2209","messages":"2210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1853"},{"filePath":"2211","messages":"2212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1847"},{"filePath":"2213","messages":"2214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1850"},{"filePath":"2215","messages":"2216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1586"},{"filePath":"2217","messages":"2218","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1598"},{"filePath":"2219","messages":"2220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1603"},{"filePath":"2221","messages":"2222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1595"},{"filePath":"2223","messages":"2224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2225","messages":"2226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2227","messages":"2228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2229","messages":"2230","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1625"},{"filePath":"2231","messages":"2232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2233","messages":"2234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2235","messages":"2236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2237","messages":"2238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2239","messages":"2240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2241","messages":"2242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2243","messages":"2244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2245","messages":"2246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2247","messages":"2248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2249","messages":"2250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2251","messages":"2252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2253","messages":"2254","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1631"},{"filePath":"2255","messages":"2256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2257","messages":"2258","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1618"},{"filePath":"2259","messages":"2260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2261","messages":"2262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1856"},{"filePath":"2263","messages":"2264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2265","messages":"2266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2267","messages":"2268","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1662"},{"filePath":"2269","messages":"2270","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1671"},{"filePath":"2271","messages":"2272","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1674"},{"filePath":"2273","messages":"2274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1665"},{"filePath":"2275","messages":"2276","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1668"},{"filePath":"2277","messages":"2278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1705"},{"filePath":"2279","messages":"2280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1702"},{"filePath":"2281","messages":"2282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2283","messages":"2284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2285","messages":"2286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1710"},{"filePath":"2287","messages":"2288","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1680"},{"filePath":"2289","messages":"2290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2291","messages":"2292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2293","messages":"2294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2295","messages":"2296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2297","messages":"2298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2299","messages":"2300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2301","messages":"2302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2303","messages":"2304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1718"},{"filePath":"2305","messages":"2306","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1727"},{"filePath":"2307","messages":"2308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1721"},{"filePath":"2309","messages":"2310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2311","messages":"2312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2313","messages":"2314","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1724"},{"filePath":"2315","messages":"2316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2317","messages":"2318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2319","messages":"2320","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1677"},{"filePath":"2321","messages":"2322","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1759"},{"filePath":"2323","messages":"2324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2325","messages":"2326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2327","messages":"2328","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1769"},{"filePath":"2329","messages":"2330","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1756"},{"filePath":"2331","messages":"2332","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1762"},{"filePath":"2333","messages":"2334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2335","messages":"2336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2337","messages":"2338","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1751"},{"filePath":"2339","messages":"2340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2341","messages":"2342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2343","messages":"2344","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1748"},{"filePath":"2345","messages":"2346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2347","messages":"2348","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1779"},{"filePath":"2349","messages":"2350","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1795"},{"filePath":"2351","messages":"2352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2353","messages":"2354","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1772"},{"filePath":"2355","messages":"2356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2357","messages":"2358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2359","messages":"2360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2361","messages":"2362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2363","messages":"2364","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1822"},{"filePath":"2365","messages":"2366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2367","messages":"2368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1812"},{"filePath":"2369","messages":"2370","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1815"},{"filePath":"2371","messages":"2372","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1569"},{"filePath":"2373","messages":"2374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2375","messages":"2376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2377","messages":"2378","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1592"},{"filePath":"2379","messages":"2380","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1628"},{"filePath":"2381","messages":"2382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2383","messages":"2384","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1577"},{"filePath":"2385","messages":"2386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1583"},{"filePath":"2387","messages":"2388","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1574"},{"filePath":"2389","messages":"2390","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1580"},{"filePath":"2391","messages":"2392","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1589"},{"filePath":"2393","messages":"2394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2395","messages":"2396","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1825"},{"filePath":"2397","messages":"2398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2399","messages":"2400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2401","messages":"2402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2403","messages":"2404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2405","messages":"2406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2407","messages":"2408","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1659"},{"filePath":"2409","messages":"2410","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1693"},{"filePath":"2411","messages":"2412","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1656"},{"filePath":"2413","messages":"2414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2415","messages":"2416","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1715"},{"filePath":"2417","messages":"2418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2419","messages":"2420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2421","messages":"2422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2423","messages":"2424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2425","messages":"2426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2427","messages":"2428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2429","messages":"2430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2431","messages":"2432","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1782"},{"filePath":"2433","messages":"2434","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1828"},{"filePath":"2435","messages":"2436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2437","messages":"2438","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1787"},{"filePath":"2439","messages":"2440","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1790"},{"filePath":"2441","messages":"2442","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1809"},"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\index.tsx",[],["2443","2444"],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\App.tsx",["2445"],"import toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport appRoutes from \"routes/routes\";\r\nimport PrivateRoute from \"routes/PrivateRoute/PrivateRoute\";\r\nimport useAuthentication from \"services/authentication/AuthenticationService\";\r\nimport TokenService from \"services/jwt-token/jwt-token\";\r\nimport { geti18nLanguage, switchI18nLanguage } from \"store/modules/i18n/i18n\";\r\nimport { addUserDetails } from \"store/modules/userDetails\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport \"./App.scss\";\r\n\r\n// Initialize Notification Toaster\r\ntoast.configure({\r\n  position: \"top-right\",\r\n  autoClose: 5000,\r\n  closeButton: false,\r\n  draggable: false,\r\n});\r\n\r\nfunction App() {\r\n  const {\r\n    i18nextData: { languageType },\r\n  } = useSelector((state: RootState) => ({ i18nextData: state.i18nextData }));\r\n  const dispatch = useDispatch();\r\n\r\n  const { isAuthenticated } = useAuthentication();\r\n\r\n  useEffect(() => {\r\n    // Initialize i18n during mount as dynamic import\r\n    // Synchronizing i18 state with redux state\r\n    import(\"./i18n/i18n\").then((i18n) => {\r\n      const persistedLanguage = geti18nLanguage();\r\n\r\n      if (persistedLanguage && persistedLanguage !== languageType) {\r\n        dispatch(switchI18nLanguage(persistedLanguage));\r\n        i18n.default.changeLanguage(persistedLanguage);\r\n      } else if (i18n.default.language !== languageType) {\r\n        i18n.default.changeLanguage(languageType);\r\n      }\r\n    });\r\n  }, [languageType, dispatch]);\r\n\r\n  // Disable Console\r\n  useEffect(() => {\r\n    // Disable Console during production\r\n    if (process.env.NODE_ENV === \"production\") {\r\n      console.log = function () {};\r\n      window.console.log =\r\n        window.console.debug =\r\n        window.console.info =\r\n        window.console.error =\r\n          function () {\r\n            return false;\r\n          };\r\n    }\r\n  }, []);\r\n\r\n  //fetch token from localstorage and set details on reducer\r\n  useEffect(() => {\r\n    const userDetails = TokenService.getAccessToken();\r\n    dispatch(addUserDetails(userDetails));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated() ? (\r\n        <PrivateRoute\r\n          appRoutes={appRoutes.filter((route) => route.type !== \"login\")}\r\n          redirectPath={[{ from: \"*\", to: \"/auth/home\" }]}\r\n        />\r\n      ) : (\r\n        <PrivateRoute\r\n          appRoutes={appRoutes.filter((route) => {\r\n            return (\r\n              route.children?.filter((item) => item.type !== \"authorized\") ||\r\n              route.type === \"login\"\r\n            );\r\n          })}\r\n          redirectPath={[{ from: \"*\", to: \"/welcome\" }]}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\i18n\\i18n.ts",["2446"],"import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\n// English translation files\r\nimport enCommon from './locale/common/en.json';\r\nimport enLogin from './locale/login/en.json';\r\nimport enRegister from './locale/register/en.json';\r\nimport enSidebar from './locale/sidebar/en.json';\r\nimport enUserapproval from './locale/userapproval/en.json';\r\nimport enCashbook from './locale/cashbook/en.json';\r\nimport enFinance from './locale/Finance/en.json';\r\nimport enMaintain from './locale/maintainance/en.json';\r\n\r\n// Nepali translation files\r\nimport neCommmon from './locale/common/ne.json';\r\nimport neLogin from './locale/login/ne.json';\r\nimport neRegister from './locale/register/ne.json';\r\nimport neSidebar from './locale/sidebar/ne.json';\r\nimport neUserapproval from './locale/userapproval/ne.json';\r\nimport neHome from './locale/Home/np.json';\r\nimport enHome from './locale/Home/en.json';\r\nimport neCashbook from './locale/cashbook/ne.json';\r\nimport neFinance from './locale/Finance/np.json';\r\nimport neMaintain from './locale/maintainance/nep.json';\r\n\r\n\r\n\r\nimport { ENG_NEP_NUMBERS, ENG_MONTHS_IN_ENG, ENG_MONTHS_IN_NEP, NEP_MONTHS_IN_NEP, NEP_MONTHS_IN_ENG, NEP_ENG_NUMBERS } from \"constants/constants\";\r\nimport { ADToBS, BSToAD } from \"components/React/Datepicker/Datepickerutils\";\r\n\r\n\r\nexport const i18nLanguages = [\"en\", \"nep\"];\r\n\r\n// Translation resources\r\nconst resources = {\r\n    en: {\r\n        common: enCommon,\r\n        login: enLogin,\r\n        register: enRegister,\r\n        sidebar: enSidebar,\r\n        userapproval: enUserapproval,\r\n        home: enHome,\r\n        cashbook: enCashbook,\r\n        finance: enFinance,\r\n        maintainance: enMaintain\r\n    },\r\n    nep: {\r\n        common: neCommmon,\r\n        login: neLogin,\r\n        register: neRegister,\r\n        sidebar: neSidebar,\r\n        userapproval: neUserapproval,\r\n        home: neHome,\r\n        cashbook: neCashbook,\r\n        finance: neFinance,\r\n        maintainance: neMaintain\r\n    }\r\n};\r\n\r\ni18n\r\n    // .use(Backend)\r\n    .use(initReactI18next) // passes i18n down to react-i18next\r\n    .init({\r\n        lng: 'nep',\r\n        fallbackLng: 'nep',\r\n        whitelist: ['nep', 'en'],\r\n        resources,\r\n        ns: ['common'],\r\n        defaultNS: \"common\",\r\n        fallbackNS: \"common\",\r\n        // backend: {\r\n        //     loadPath: process.env.REACT_APP_ENDPOINT + '/config/i18n/res/{{lng}}/{{ns}}',\r\n        //     crossDomain: true\r\n        // },\r\n        keySeparator: \".\", // we use keys in form {t('messages.welcome')}\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        }\r\n    });\r\n\r\n/**\r\n * Returns data in selected language\r\n * @param dataEn any data containing english language\r\n * @param dataNe any data containing nepali language\r\n */\r\nexport const getTextByLanguage = (dataEn: any, dataNe: any) => {\r\n    switch (i18n.language) {\r\n        case 'nep': return dataNe;\r\n        default: return dataEn;\r\n    }\r\n}\r\n\r\n/**\r\n * API request time out message in selected language\r\n */\r\nexport const requestTimeoutLanguage = () => {\r\n    switch (i18n.language) {\r\n        case 'nep': return \"सर्भरले प्रतिक्रिया दिन धेरै लामो समय लिइरहेको छ, कृपया केहि बेरमा पुन: प्रयास गर्नुहोस्!\";\r\n        default: return \"Server is taking too long to respond, please try again in sometime!\";\r\n    }\r\n}\r\n\r\n/**\r\n * When no internet or no conection to server message in selected language\r\n */\r\nexport const noConnectionLanguage = () => {\r\n    switch (i18n.language) {\r\n        case 'nep': return \"सर्भरले प्रतिक्रिया दिन धेरै लामो समय लिईरहेको छ, यो कम कनेक्टिभटी वा हाम्रो सर्भरहरूको साथ त्रुटि द्वारा हुन सक्छ। कृपया केहि बेरमा पुन: प्रयास गर्नुहोस्!\";\r\n        default: return \"Server is taking too long to respond, this can be caused by either poor connectivity or an error with our servers. Please try again in a while!\";\r\n    }\r\n}\r\n\r\nconst nepaliCount = ['०', '१', '२', '३', '४', '५', '६', '७', '८', '९'];\r\n/**\r\n * Converts 123456 to 1,23,456\r\n * @param enNumber Number to convert into Nepali comma separated text\r\n */\r\nexport const nepaliNumeralFormat = (enNumber: number) => {\r\n    let [integer, decimal] = enNumber.toString().split(\".\");\r\n\r\n    let integerBeforeLastThreeDigits = integer.slice(0, integer.length - 3);\r\n    const integerOfLastThreeDigits = integer.slice(integer.length - 3);\r\n    if (integerBeforeLastThreeDigits.length > 2) {\r\n        integerBeforeLastThreeDigits = integerBeforeLastThreeDigits.replace(/(\\d)(?=(\\d{2})+$)/g, '$1,') + \",\";\r\n    }\r\n\r\n    integer = integerBeforeLastThreeDigits + integerOfLastThreeDigits;\r\n\r\n    switch (i18n.language) {\r\n        case 'nep': return integer + decimal;\r\n        default: return integer + decimal;\r\n    }\r\n}\r\n\r\n/**\r\n * Converts english number to nepali number as string\r\n * @param numberEn number in english\r\n */\r\nexport const convertEngToNepNumber = (numberEn: number) => {\r\n    return numberEn.toString().split(\"\").map((number) => nepaliCount[+number] ? nepaliCount[+number] : number).join(\"\");\r\n}\r\n\r\n/**\r\n * Converts nepali number to english number as string\r\n * @param numberEn number text in nepali\r\n */\r\nexport const convertNepToEngNumber = (numberNe: string) => {\r\n    return numberNe.split(\"\").map((number: string) => nepaliCount.indexOf(number) > -1 ? nepaliCount.indexOf(number) : number).join(\"\");\r\n}\r\n\r\n\r\nexport const getMonthByLanguage = (month: number | string) => {\r\n    switch (i18n.language) {\r\n        case 'nep': return ENG_MONTHS_IN_NEP[+month];\r\n        default: return ENG_MONTHS_IN_ENG[+month];\r\n    }\r\n}\r\n\r\nexport const getNumberByLanguage = (number) => {\r\n    if (number || number === 0) {\r\n        let transformedString = \"\"\r\n        if (i18n.language === \"nep\") {\r\n            // const parsedNumber = number?.toString()?.includes(\".\") ? Number(number)?.toFixed(2) : number\r\n            const parsedNumber = number\r\n            if (parsedNumber) {\r\n                const originalData = number.toString() || \"\";\r\n                [...originalData].forEach(c => {\r\n                    transformedString = transformedString + ENG_NEP_NUMBERS[c]\r\n                })\r\n            } else {\r\n                return number\r\n            }\r\n        } else {\r\n            transformedString = number?.toString()\r\n        }\r\n        return transformedString;\r\n    }\r\n    return \"\"\r\n}\r\n\r\nexport const getEnglishNumberFromNepali = (number) => {\r\n    if (number) {\r\n        let transformedString = \"\"\r\n        const parsedNumber = number\r\n        if (parsedNumber) {\r\n            if (i18n.language === \"nep\") {\r\n                const originalData = number.toString() || \"\";\r\n\r\n                [...originalData].forEach(c => {\r\n                    transformedString = transformedString + NEP_ENG_NUMBERS[c]\r\n                })\r\n            }else{\r\n                transformedString = number\r\n            }\r\n        } else {\r\n            return number\r\n        }\r\n        return transformedString;\r\n    }\r\n    return \"\"\r\n}\r\n\r\n\r\nexport const getMonthByLanguageAndScheme = (month: number | string, language: string) => {\r\n    if (month) {\r\n        const reqMonth = +month < 10 ? month?.toString()?.replace(\"0\", \"\") : +month\r\n\r\n        if (language === \"nep\") {\r\n            if (i18n.language === \"nep\") {\r\n                return NEP_MONTHS_IN_NEP[+reqMonth - 1]\r\n            } else {\r\n                return NEP_MONTHS_IN_ENG[+reqMonth - 1]\r\n            }\r\n        } else {\r\n            if (i18n.language === \"nep\") {\r\n                return ENG_MONTHS_IN_NEP[+reqMonth - 1]\r\n            } else {\r\n                return ENG_MONTHS_IN_ENG[+reqMonth - 1]\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getFiscalYearData = (intervals: any, language: string) => {\r\n    console.log(intervals, language, \"{}{}{}{}{}}}{}\");\r\n\r\n\r\n    if (language === \"nep\") {\r\n        const currentDate = new Date()\r\n\r\n        let currentFiscalyear: any = null\r\n\r\n        intervals.forEach(item => {\r\n            if (new Date(BSToAD(item.end_date)).getTime() > new Date(currentDate).getTime() && new Date(BSToAD(item.start_date)).getTime() < new Date(currentDate).getTime()) {\r\n                currentFiscalyear = item\r\n            }\r\n        })\r\n        const startMonth = currentFiscalyear?.start_date?.split(\"-\")[1]\r\n\r\n        const fiscalYearMonth: any = []\r\n\r\n        for (let i = startMonth; i <= 12; i++) {\r\n            fiscalYearMonth.push(i < 10 ? +i?.toString()?.replace(\"0\", \"\") : i)\r\n        }\r\n        for (let i = 1; i < startMonth; i++) {\r\n            fiscalYearMonth.push(i < 10 ? +i?.toString()?.replace(\"0\", \"\") : i)\r\n        }\r\n        return fiscalYearMonth\r\n\r\n    } else {\r\n        const currentDate = new Date()\r\n\r\n        let currentFiscalyear: any = null\r\n\r\n        intervals.forEach(item => {\r\n            if (new Date(item.end_date).getTime() > currentDate.getTime() && new Date(item.start_date).getTime() < currentDate.getTime()) {\r\n                currentFiscalyear = item\r\n            }\r\n        })\r\n\r\n        const startMonth = currentFiscalyear?.start_date?.split(\"-\")[1]\r\n\r\n        const fiscalYearMonth: any = []\r\n\r\n        for (let i = startMonth; i <= 12; i++) {\r\n            fiscalYearMonth.push(i < 10 ? +i?.toString()?.replace(\"0\", \"\") : i)\r\n        }\r\n        for (let i = 1; i < startMonth; i++) {\r\n            fiscalYearMonth.push(i < 10 ? +i?.toString()?.replace(\"0\", \"\") : i)\r\n        }\r\n        return fiscalYearMonth\r\n    }\r\n}\r\n\r\n\r\nexport const confirmationMessage = () => {\r\n    switch (i18n.language) {\r\n        case 'nep': return \"के तपाइँ मेटाउन निश्चित हुनुहुन्छ?\";\r\n        default: return \"Are you sure you want to delete ?\";\r\n    }\r\n}\r\n\r\nexport default i18n;\r\n\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\root-reducer.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\routes\\routes.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\i18n\\i18n.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\services\\jwt-token\\jwt-token.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\routes\\PrivateRoute\\PrivateRoute.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\services\\authentication\\AuthenticationService.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\ToastNotifier\\ToastNotifier.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\login\\login.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\userDetails\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\constants\\constants.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\helper\\default-action-type.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Datepickerutils.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\ErrorBoundary\\ErrorBoundary.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\FallbackLoader\\FallbackLoader.tsx",["2447"],"import Loader from \"components/UI/Loader\";\r\nimport React from \"react\";\r\nimport logo from \"assets/images/AMS-LOGO-ORIGINAL.png\";\r\n\r\ninterface FallbackProps {\r\n  h?: number;\r\n  styles?: React.CSSProperties;\r\n}\r\n\r\nexport default function FallbackLoader({ h, styles }: FallbackProps) {\r\n  return (\r\n    <div\r\n      className=\"blinking\"\r\n      style={{ position: \"relative\", width: \"100%\", height: (h ? h : 100) + \"vh\", ...styles }}\r\n    >\r\n      <img\r\n        src={logo}\r\n        alt=\"Loader\"\r\n        style={{\r\n          position: \"absolute\",\r\n          left: \"50%\",\r\n          top: \"50%\",\r\n          transform: \" translate(-50%, -50%)\",\r\n          width: 150, \r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\oauthservice\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\supplyBelts\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterSupplySchedule\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\testParamters\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\otherExpenses\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\maintainance\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\inflationParameters\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentCategories\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\component\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentInfo\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\notifications\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentLogs\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\helper\\default-state.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\helper\\default-reducer.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\helper\\default-action.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\schemeName\\index.tsx",["2448","2449"],"import { Dispatch } from \"redux\";\r\n\r\nconst initialState = {\r\n  schemeName: \"\",\r\n};\r\n\r\ntype SchemeType = typeof initialState;\r\n\r\nexport default (state: SchemeType = initialState, action: DefaultAction): SchemeType => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case \"UPDATE_SCHEME\":\r\n      return { ...state, schemeName: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const updateSchemeNameAction = (payload: string) => (dispatch) => {\r\n  dispatch({\r\n    type: \"UPDATE_SCHEME\",\r\n    payload,\r\n  });\r\n};\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\constants\\types.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\actionNames\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Dateconverter.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Login\\Login.tsx",["2450","2451","2452"],"import FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { ReactElement, useCallback, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps, shallowEqual, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { switchI18nLanguage } from \"store/modules/i18n/i18n\";\r\nimport { loginUser } from \"store/modules/login/login\";\r\nimport { addUserDetails } from \"store/modules/userDetails\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { object as YupObject, string as YupString } from \"yup\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\nexport interface UserCredentials {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nfunction Login(props: Props): ReactElement {\r\n  const { loginData, loginUser, switchI18nLanguage } = props;\r\n\r\n  const history = useHistory();\r\n  const i18nextData = useSelector((state: RootState) => state.i18nextData, shallowEqual);\r\n\r\n  const handleLogin = useCallback(\r\n    async (userDetails: UserCredentials) => {\r\n      const loginres: any = await loginUser(userDetails);\r\n \r\n      if (loginres?.data?.tokens?.access) {\r\n        props.addUserDetails(loginres.data);\r\n        history.push(\"/auth/home\");\r\n      } else {\r\n        toast.error(loginres?.data?.detail);\r\n        // toast.error(loginres)\r\n      }\r\n    },\r\n    [loginUser, history]\r\n  );\r\n\r\n  return (\r\n    <div className=\"app bg-white\">\r\n      <div className=\"container\">\r\n        <div className=\"auth-wrapper\">\r\n          <LoginForm handleLogin={handleLogin} authorizing={loginData.isFetching} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  loginData: state.loginData,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loginUser: loginUser,\r\n  switchI18nLanguage: switchI18nLanguage,\r\n  addUserDetails: addUserDetails,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\nexport default connector(Login);\r\n\r\ninterface LoginFormProps {\r\n  handleLogin: (credentials: UserCredentials) => void;\r\n  /**Status indicating if login is initiating */\r\n  authorizing: boolean;\r\n}\r\nconst LoginForm = ({ authorizing, handleLogin }: LoginFormProps) => {\r\n  const { t } = useTranslation([\"login\", \"register\"]);\r\n\r\n  const [passwordView, showPassword] = useState(false);\r\n  const togglePassword = () => showPassword(!passwordView);\r\n  const [initialValue] = useState({ username: \"\", password: \"\" });\r\n\r\n  const loginValidationSchema = YupObject().shape({\r\n    username: YupString().required(\"login:input.username.error-required\"),\r\n    password: YupString().required(\"login:input.password.error-required\"),\r\n  });\r\n\r\n  const { values, handleChange, handleSubmit, errors, touched } = useFormik({\r\n    initialValues: initialValue,\r\n    validationSchema: loginValidationSchema,\r\n    onSubmit: (values, { setSubmitting }) => {\r\n      setSubmitting(false);\r\n      handleLogin(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"auth-body\">\r\n      <form className=\"\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n        {/* <h5 className=\"mb-2 font-bold\">Water</h5> */}\r\n        <p className=\"\">Water Asset Management System</p>\r\n\r\n        <h6 className=\"mb-2 font-bold\">CONFIGURATIONS</h6>\r\n\r\n        <div className=\"auth-form\">\r\n          <div className=\"form-group align-vertical\">\r\n            <label htmlFor=\"\" className=\"mr-4 label\">\r\n              {t(\"login:input.username.title\")}\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              value={values.username}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <FormikValidationError name=\"username\" errors={errors} touched={touched} />\r\n          </div>\r\n\r\n          <div className=\"form-group align-vertical mt-4\">\r\n            <label htmlFor=\"\" className=\"mr-4 label\">\r\n              {t(\"login:input.password.title\")}\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n\r\n            <span\r\n              className={`${passwordView ? \"ic-view\" : \"ic-hidden\"} text-coolGray600`}\r\n              role=\"button\"\r\n              onClick={togglePassword}\r\n            ></span>\r\n            <FormikValidationError name=\"password\" errors={errors} touched={touched} />\r\n          </div>\r\n\r\n          <div className=\"auth-footer\">\r\n            {/* <div className=\"flex-grow-1 des\">\r\n                    <span className=\"text-coolGray600\">{t(\"login:dontHaveAnAccount.title\")} </span>\r\n                    <Link to=\"/register\" className=\"text-blue\">{t(\"register:title\")}</Link>\r\n                </div> */}\r\n            <Button\r\n              className=\"btn btn-outlined-primary\"\r\n              text={t(\"login:title\")}\r\n              disabled={authorizing}\r\n              loading={authorizing}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Notifications\\UpdateNotifications.tsx",["2453","2454"],"import NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getNotificationDetailsAction } from \"store/modules/notifications/getNotifications\";\r\nimport { postNotificationsAction } from \"store/modules/notifications/postNotifications\";\r\nimport { updateNotificationsAction } from \"store/modules/notifications/updateNotifications\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport formatDate from \"utils/utilsFunction/date-converter\";\r\nimport { createNotificationInitialValues, createNotificationValidationSchema } from \"./scheme\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst GeneralInfo = (props: Props) => {\r\n  const { t } = useTranslation(\"home\");\r\n\r\n  const [initialValues, setInitialValues] = React.useState<any>(createNotificationInitialValues);\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeDetails) {\r\n      props.getNotificationDetailsAction(props.schemeDetails?.slug);\r\n    }\r\n  }, [props.schemeDetails]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      props.notificationDetails &&\r\n      props.notificationDetails instanceof Array &&\r\n      props.notificationDetails[0]\r\n    ) {\r\n      setInitialValues(props.notificationDetails[0]);\r\n    }\r\n  }, [props.notificationDetails]);\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialValues,\r\n    validationSchema: createNotificationValidationSchema,\r\n    onSubmit: async (values: any, { resetForm }) => {\r\n      let response;\r\n      const requestData = {\r\n        ...values,\r\n        system_date_format: values?.system_date_format?.value,\r\n      };\r\n      if (props.notificationDetails && props.notificationDetails.length > 0) {\r\n        response = await props.updateNotificationsAction(\r\n          props.notificationDetails[0]?.id,\r\n          requestData\r\n        );\r\n      } else {\r\n        response = await props.postNotificationsAction(requestData);\r\n      }\r\n\r\n      console.log(response, \"responsss\");\r\n\r\n      if (response.status === 201 || response.status === 200) {\r\n        props.getNotificationDetailsAction(props.schemeDetails?.slug);\r\n        toast.success(\"Notification Updated Successfully\");\r\n      } else {\r\n        const errorList = response.data && response.data.error;\r\n        if (errorList instanceof Array) {\r\n          errorList.forEach((item) => {\r\n            toast.error(item);\r\n          });\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n  console.log(props.notificationDetails, \"initialValuesinitialValues\");\r\n\r\n  return (\r\n    <div className=\"container py-3 \">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12\">\r\n          <GeneralCard title={t(\"home:updateNotifications\")} className=\"text-left\">\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handleSubmit();\r\n              }}\r\n              className=\"verticalForm\"\r\n            >\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-group \">\r\n                    <label htmlFor=\"\" className=\"mr-1 \">\r\n                      {t(\"home:initialDate\")}:\r\n                    </label>\r\n\r\n                    {props.schemeDetails && props.schemeDetails.system_date_format === \"nep\" ? (\r\n                      <>\r\n                        <NepaliDatePicker\r\n                          value={values.initial_date}\r\n                          name=\"initial_date\"\r\n                          onChange={(e) => {\r\n                            setFieldValue(\"initial_date\", e);\r\n                          }}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <EnglishDatePicker\r\n                          name=\"initial_date\"\r\n                          value={values.initial_date}\r\n                          handleChange={(e) => {\r\n                            setFieldValue(\"initial_date\", formatDate(e));\r\n                          }}\r\n                        />\r\n                      </>\r\n                    )}\r\n                    <FormikValidationError name=\"initial_date\" errors={errors} touched={touched} />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-group \">\r\n                    <label htmlFor=\"\" className=\"mr-1 \">\r\n                      {t(\"home:inp\")}:\r\n                    </label>\r\n\r\n                    <input\r\n                      className=\"form-control\"\r\n                      name=\"income_notification_period\"\r\n                      value={values.income_notification_period}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <FormikValidationError\r\n                      name=\"income_notification_period\"\r\n                      errors={errors}\r\n                      touched={touched}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-group \">\r\n                    <label htmlFor=\"\" className=\"mr-1 \">\r\n                      {t(\"home:enp\")}:\r\n                    </label>\r\n\r\n                    <input\r\n                      className=\"form-control\"\r\n                      name=\"expenditure_notification_period\"\r\n                      value={values.expenditure_notification_period}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <FormikValidationError\r\n                      name=\"expenditure_notification_period\"\r\n                      errors={errors}\r\n                      touched={touched}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-group \">\r\n                    <label htmlFor=\"\" className=\"mr-1 \">\r\n                      {t(\"home:trnp\")}:\r\n                    </label>\r\n\r\n                    <input\r\n                      className=\"form-control\"\r\n                      name=\"test_result_notification_period\"\r\n                      value={values.test_result_notification_period}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <FormikValidationError\r\n                      name=\"test_result_notification_period\"\r\n                      errors={errors}\r\n                      touched={touched}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-group \">\r\n                    <label htmlFor=\"\" className=\"mr-1 \">\r\n                      {t(\"home:srnp\")}:\r\n                    </label>\r\n\r\n                    <input\r\n                      className=\"form-control\"\r\n                      name=\"supply_record_notification_period\"\r\n                      value={values.supply_record_notification_period}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <FormikValidationError\r\n                      name=\"supply_record_notification_period\"\r\n                      errors={errors}\r\n                      touched={touched}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-group \">\r\n                    <label htmlFor=\"\" className=\"mr-1 \">\r\n                      {t(\"home:mnb\")}:\r\n                    </label>\r\n\r\n                    <input\r\n                      className=\"form-control\"\r\n                      name=\"maintenance_notify_before\"\r\n                      value={values.maintenance_notify_before}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <FormikValidationError\r\n                      name=\"maintenance_notify_before\"\r\n                      errors={errors}\r\n                      touched={touched}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-group \">\r\n                    <label htmlFor=\"\" className=\"mr-1 \">\r\n                      {t(\"home:mna\")}:\r\n                    </label>\r\n\r\n                    <input\r\n                      className=\"form-control\"\r\n                      name=\"maintenance_notify_after\"\r\n                      value={values.maintenance_notify_after}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <FormikValidationError\r\n                      name=\"maintenance_notify_after\"\r\n                      errors={errors}\r\n                      touched={touched}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 text-right mt-5\">\r\n                  <Button\r\n                    className=\"btn custom-btn  mr-3\"\r\n                    text={t(\"home:save\")}\r\n                    type=\"submit\"\r\n                    disabled={props.loading}\r\n                    loading={props.loading}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </GeneralCard>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  notificationDetails: state.notifications.getNotifications.data,\r\n  loading: state.notifications.updateNotifications.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateNotificationsAction: updateNotificationsAction,\r\n  getNotificationDetailsAction: getNotificationDetailsAction,\r\n  postNotificationsAction: postNotificationsAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(GeneralInfo);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Dashboard\\Dashboard.tsx",["2455","2456"],"import React, { ReactElement, useState } from \"react\";\r\nimport { connect, ConnectedProps, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport PrivateRoute from \"routes/PrivateRoute/PrivateRoute\";\r\nimport useAuthentication from \"services/authentication/AuthenticationService\";\r\nimport TokenService from \"services/jwt-token/jwt-token\";\r\nimport { updateSchemeNameAction } from \"store/modules/schemeName\";\r\nimport { getSchemeYearIntervalsAction } from \"store/modules/waterScheme/getYearIntervals\";\r\nimport { getWaterSchemeDetailsAction } from \"store/modules/waterScheme/waterSchemeDetails\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport Header from \"./Header/Header\";\r\nimport Sidebar from \"./Sidebar/Sidebar\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  children: any;\r\n}\r\n\r\nfunction Dashboard(props: Props): ReactElement {\r\n  const { children } = props;\r\n  const history = useHistory();\r\n  const [sidebarToggle, setsidebarToggle] = useState(false);\r\n\r\n  const { isAuthenticated } = useAuthentication();\r\n\r\n  const getSchemeDetails = async () => {\r\n    const containsSchemeInUrl = window.location.hash.split(\"/\")[1] === \"scheme\";\r\n\r\n    if (containsSchemeInUrl) {\r\n      const route = window.location.hash.split(\"/\")[2];\r\n      const response = await props.getWaterSchemeDetailsAction(route);\r\n\r\n      if (response.data && response.status !== 400) {\r\n        props.updateSchemeNameAction(route);\r\n        props.getSchemeYearIntervalsAction(props.langauge, route);\r\n      } else {\r\n        history.replace(\"/\");\r\n      }\r\n    } else if (isAuthenticated()) {\r\n      const tokenData = TokenService.getAccessToken();\r\n      const response = await props.getWaterSchemeDetailsAction(tokenData?.slug);\r\n\r\n      if (response.data && response.status !== 400) {\r\n        props.updateSchemeNameAction(tokenData?.slug);\r\n        props.getSchemeYearIntervalsAction(props.langauge, tokenData?.slug);\r\n      }\r\n    } else if (window.location.href?.includes(\"auth\")) {\r\n      history.replace(\"/login\");\r\n    } else {\r\n      history.replace(\"/\");\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (window.location.hash && props.langauge) {\r\n      getSchemeDetails();\r\n    }\r\n  }, [props.langauge, window.location.hash]);\r\n\r\n  return (\r\n    <div\r\n      className={`app theme-dark-blue ${sidebarToggle ? \"toggled\" : \"\"}`}\r\n      style={{ position: \"relative\" }}\r\n    >\r\n      <Sidebar sidebarToggle={sidebarToggle} setsidebarToggle={setsidebarToggle} />\r\n      <main className=\"stickyHeader\">\r\n        <Header sidebarToggle={sidebarToggle} setsidebarToggle={setsidebarToggle} />\r\n        <div className=\"inner\">\r\n          <PrivateRoute\r\n            appRoutes={children}\r\n            redirectPath={[{ to: isAuthenticated() ? \"/auth/home\" : \"/home\", from: \"*\" }]}\r\n          />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  langauge: state.i18nextData.languageType,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getWaterSchemeDetailsAction: getWaterSchemeDetailsAction,\r\n  updateSchemeNameAction: updateSchemeNameAction,\r\n  getSchemeYearIntervalsAction: getSchemeYearIntervalsAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Dashboard);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\oauthservice\\initapi.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\incomeExpense.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\actualCumilitiveCashFlow.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\maintainanceCost.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\incomeByCategory.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\expenseCumilitiveCashFlow.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\expenseByCategory.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\waterSupply.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\waterTestResults.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\report\\maintainanceCostByYear.ts",["2457"],"import { Dispatch } from \"redux\";\r\nimport { AppThunk } from \"../..\";\r\n\r\nimport { apiList } from \"../../actionNames\";\r\nimport initDefaultAction, { APIResponseDetail } from \"../../helper/default-action\";\r\nimport initDefaultReducer from \"../../helper/default-reducer\";\r\nimport initialState from \"../../helper/default-state\";\r\n\r\n\r\ninterface Alltimeactualcost {\r\n    labour_cost__sum?: any;\r\n    material_cost__sum?: any;\r\n    replacement_cost__sum?: any;\r\n    cost_total__sum: number;\r\n    all_time_actual_cost_total: number;\r\n    unsegregated_cost: number;\r\n}\r\n\r\ninterface Thisyearexpectedcost {\r\n    labour_cost: number;\r\n    material_cost: number;\r\n    replacement_cost: number;\r\n    unsegregated_cost: number;\r\n    all_time_expected_cost_total: number;\r\n}\r\n\r\ninterface Thisyearactualcost {\r\n    labour_cost__sum?: any;\r\n    material_cost__sum?: any;\r\n    replacement_cost__sum?: any;\r\n    cost_total__sum: number;\r\n    this_year_actual_cost_total: number;\r\n    unsegregated_cost: number;\r\n}\r\ninterface RootObject {\r\n    this_year_actual_cost: Thisyearactualcost;\r\n    this_year_expected_cost: Thisyearexpectedcost;\r\n    all_time_actual_cost: Alltimeactualcost;\r\n    all_time_expected_cost: Thisyearexpectedcost;\r\n}\r\n\r\nexport type MaintainanceCostByYear = {\r\n    all_time_actual_cost_total: number\r\n    all_time_expected_cost_total: number\r\n    this_year_actual_cost_total: number\r\n    this_year_expected_cost_total: number\r\n    cost_total__sum: number\r\n    labour_cost__sum: number\r\n    material_cost__sum: number\r\n    replacement_cost__sum: number\r\n    labour_cost: number\r\n    material_cost: number\r\n    replacement_cost: number\r\n    unsegregated_cost: number\r\n\r\n}\r\n\r\n\r\nexport type MaintainanceCostByYearResponse = {\r\n    this_year_actual_cost: Thisyearactualcost;\r\n    this_year_expected_cost: Thisyearexpectedcost;\r\n    all_time_actual_cost: Alltimeactualcost;\r\n    all_time_expected_cost: Thisyearexpectedcost;\r\n}\r\n\r\nconst apiDetails = Object.freeze(apiList.report.maintainanceCostByYear);\r\n\r\nexport default function maintainanceCostByYearReducer(state = initialState, action: DefaultAction): DefaultState<MaintainanceCostByYearResponse> {\r\n    const stateCopy = Object.assign({}, state);\r\n    const actionName = apiDetails.actionName;\r\n\r\n    return initDefaultReducer(actionName, action, stateCopy);\r\n}\r\n\r\nexport const getMaintainanceCostByYearAction = (water_scheme_slug, this_year?: boolean): AppThunk<APIResponseDetail<MaintainanceCostByYearResponse>> => async (dispatch: Dispatch) => {\r\n    const variables = { disableSuccessToast: true, pathVariables: { water_scheme_slug } }\r\n    if (this_year) variables['params'] = { this_year }\r\n    return await initDefaultAction(apiDetails, dispatch, variables);\r\n};","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\getWaterTarrifs.ts",["2458"],"import { Dispatch } from \"redux\";\r\nimport { AppThunk } from \"../..\";\r\n\r\nimport { apiList } from \"../../actionNames\";\r\nimport initDefaultAction, { APIResponseDetail } from \"../../helper/default-action\";\r\nimport initDefaultReducer from \"../../helper/default-reducer\";\r\nimport initialState from \"../../helper/default-state\";\r\n\r\ntype UneBasedType = {\r\n    estimated_paying_connection: any\r\n    id: any\r\n    rate: any\r\n    tariff: any\r\n    unit_from: any\r\n    unit_to: any\r\n}\r\n\r\ninterface RootObject {\r\n    id: number;\r\n    terif_type: string;\r\n    rate_for_institution: number;\r\n    rate_for_household: number;\r\n    rate_for_public: number;\r\n    rate_for_commercial: number;\r\n    apply_date: string;\r\n    estimated_paying_connection_household: number;\r\n    estimated_paying_connection_institution: number;\r\n    estimated_paying_connection_public: number;\r\n    estimated_paying_connection_commercial: number;\r\n}\r\n\r\n\r\nexport type WaterTarrifsType = {\r\n    id: number;\r\n    terif_type: \"Use Based\" | \"Fixed\"\r\n    rate_for_institution: number;\r\n    rate_for_household: number;\r\n    rate_for_public: number;\r\n    rate_for_commercial: number;\r\n    apply_date: string;\r\n    estimated_paying_connection_household: number;\r\n    estimated_paying_connection_institution: number;\r\n    estimated_paying_connection_public: number;\r\n    estimated_paying_connection_commercial: number;\r\n    used_based_units: UneBasedType[]\r\n}[]\r\n\r\nconst apiDetails = Object.freeze(apiList.waterTarrif.getWaterTarrifs);\r\n\r\nexport default function getWaterTarrifsReducer(state = initialState, action: DefaultAction): DefaultState<WaterTarrifsType> {\r\n    const stateCopy = Object.assign({}, state);\r\n    const actionName = apiDetails.actionName;\r\n\r\n    return initDefaultReducer(actionName, action, stateCopy);\r\n}\r\n\r\nexport const getWaterTarrifsAction = (lang, water_scheme_slug, tariff_type?: string): AppThunk<APIResponseDetail<WaterTarrifsType>> => async (dispatch: Dispatch) => {\r\n\r\n    const updatedDetails = { disableSuccessToast: true, pathVariables: { lang, water_scheme_slug } }\r\n\r\n    if (tariff_type) {\r\n        updatedDetails['params'] = { tariff_type }\r\n    }\r\n\r\n    return await initDefaultAction(apiDetails, dispatch, updatedDetails);\r\n};","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\postUseBasedWaterTariff.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\updateUseBasedWaterTariff.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\deleteWaterTariff.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\postFixedRateWaterTariff.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\getIncomeEstimateThisYear.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\deleteUseBasedWaterTariff.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\getUseBasedWaterTarrifs.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\getIcome.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\getPreviousIncomeTotal.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\getIncomeCategory.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\getAllIncome.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\getAllExpenditure.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\supplyBelts\\postSupplyBelt.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterSupplySchedule\\updateSupplySchedule.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\testParamters\\deleteTestParameters.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\updateWaterSchemeData.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\otherExpenses\\deleteOtherExpenses.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\inflationParameters\\postInflationParameters.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\maintainance\\dashboardComponentInfo.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentCategories\\deleteComponentCategories.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\component\\deleteComponent.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentInfo\\deleteComponentInfo.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\notifications\\postNotifications.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentLogs\\getComponentLogsById.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentLogs\\deleteComponentLogs.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentLogs\\postComponentLogs.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentLogs\\updateComponentLogs.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentLogs\\getComponentLogs.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\services\\api-request\\api-request.ts",["2459","2460"],"import Axios, {\r\n    AxiosResponse,\r\n    AxiosError,\r\n    AxiosRequestConfig,\r\n    CancelTokenSource,\r\n    CancelTokenStatic,\r\n    Method,\r\n    AxiosBasicCredentials,\r\n} from \"axios\";\r\nimport { apiDetailType } from \"store/actionNames\";\r\n\r\nimport TokenService from \"../jwt-token/jwt-token\";\r\n\r\ninterface RequestParam {\r\n    [key: string]: any\r\n}\r\n\r\nconst basicAuth: AxiosBasicCredentials = {\r\n    username: \"clientid\",\r\n    password: \"secret\",\r\n};\r\n\r\nconst getGrantType = () => ({ key: \"grant_type\", value: \"password\" });\r\n\r\n// Cancel a request using a cancel token.\r\nconst cancelToken: CancelTokenStatic = Axios.CancelToken;\r\nconst source: CancelTokenSource = cancelToken.source();\r\n\r\nexport default function initApiRequest(apiDetails: apiDetailType, requestData: any, requestMethod: Method, params?: RequestParam, cancelSource?: CancelTokenSource) {\r\n    // API URL\r\n    let url = process.env.REACT_APP_API_ENDPOINT as string;\r\n    const access_token: string = TokenService.getAccessToken()?.tokens?.access;\r\n\r\n    const headers = getRequestHeaders(apiDetails, access_token);\r\n    const transformedRequestData = transformRequestData(apiDetails, requestData);\r\n\r\n    if (transformedRequestData instanceof FormData) {\r\n        debugger;\r\n        console.log(transformedRequestData, 'transdatattt')\r\n    }\r\n\r\n    let axiosReqParams: AxiosRequestConfig = {\r\n        url: apiDetails.controllerName,\r\n        method: requestMethod,\r\n        baseURL: url,\r\n        responseType: 'json',\r\n        timeout: 60 * 3 * 1000,\r\n        cancelToken: cancelSource ? cancelSource.token : source.token,\r\n        headers: headers,\r\n        ...transformedRequestData,\r\n    };\r\n\r\n    if (params) {\r\n        axiosReqParams = {\r\n            ...axiosReqParams,\r\n            params: params,\r\n        }\r\n    }\r\n\r\n    return Axios.request(axiosReqParams)\r\n        .then((response: AxiosResponse) => response)\r\n        .catch((error: AxiosError) => {\r\n            const errorResponse = manageErrorResponse(error);\r\n            throw errorResponse;\r\n        });\r\n};\r\n\r\nconst getRequestHeaders = (apiDetails: apiDetailType, access_token: string) => {\r\n\r\n    let headers: { [key: string]: string } = { \"Content-Type\": \"application/json\" };\r\n\r\n    if (access_token) {\r\n        headers = { ...headers, \"Authorization\": \"Bearer \" + access_token }\r\n    }\r\n\r\n    switch (apiDetails.requestBodyType) {\r\n        case \"QUERY-STRING\":\r\n            headers = {\r\n                ...headers,\r\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            };\r\n            break;\r\n        case \"FORM-DATA\":\r\n            headers = {\r\n                ...headers,\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            };\r\n            break;\r\n        case \"NO-AUTH\":\r\n            if (!TokenService.getAccessToken()?.tokens?.access) {\r\n                delete headers[\"Authorization\"];\r\n            }\r\n            break;\r\n        default:\r\n            headers = { ...headers };\r\n    }\r\n    return headers;\r\n};\r\n\r\ninterface TransformedRequestData {\r\n    auth?: AxiosBasicCredentials,\r\n    data: any\r\n}\r\nconst transformRequestData = (apiDetails: apiDetailType, requestData: any) => {\r\n    let transformedRequestData: TransformedRequestData = { data: requestData };\r\n\r\n    switch (apiDetails.requestBodyType) {\r\n        case \"AUTH\":\r\n            // const grant_type = getGrantType();\r\n            // transformedRequestData.auth = basicAuth;\r\n            transformedRequestData.data = requestData;\r\n            // transformedRequestData.data.append(grant_type.key, grant_type.value);\r\n            break;\r\n        case \"FORM-DATA\":\r\n            transformedRequestData.data = getFormData(requestData);\r\n            break;\r\n        case \"QUERY-STRING\":\r\n            transformedRequestData.data = getQueryString(requestData);\r\n            break;\r\n        default:\r\n            transformedRequestData.data = requestData;\r\n            break;\r\n    }\r\n\r\n    return transformedRequestData;\r\n};\r\n\r\nfunction getQueryString(data: { [key: string]: string }) {\r\n    return new URLSearchParams(data);\r\n}\r\n\r\nfunction getFormData(requestData: { [key: string]: any }) {\r\n    let formData = new FormData();\r\n    console.log(requestData, 'transdatattt')\r\n\r\n    for (let data in requestData) {\r\n        if (requestData[data] instanceof Array) {\r\n            requestData[data].forEach((dataEl: any, index: number) => {\r\n                if (dataEl instanceof Object) {\r\n                    Object.keys(dataEl).forEach((elKey) => formData.append(`${data}[${index}].${elKey}`, dataEl[elKey]))\r\n                }\r\n            });\r\n        }\r\n        else if (requestData[data] instanceof File) {\r\n            formData.append(data, requestData[data]);\r\n        }\r\n        else if (requestData[data] instanceof Object) {\r\n            Object.entries(requestData[data]).forEach(([key, value]: [string, any]) => formData.append(`${data}.${key}`, value))\r\n        }\r\n        else {\r\n            console.log(data, \"data insodez\")\r\n            formData.append(data, requestData[data]);\r\n        }\r\n    }\r\n\r\n    return formData;\r\n}\r\n\r\nconst manageErrorResponse = (error: AxiosError) => {\r\n    const { message, config, code, request, response, isAxiosError } = error;\r\n\r\n    let errorResponse = {\r\n        message: message, // Something happened in setting up the request that triggered an Error\r\n        data: null,\r\n        status: code || 400,\r\n        noconnection: false,\r\n        config: config, // Request Params Configs\r\n        isAxiosError: isAxiosError //If Axios Error\r\n    };\r\n\r\n    if (response) {\r\n        errorResponse.data = response.data; // The server responded with a status code and data\r\n    } else if (request) {\r\n        errorResponse.message = \"Server could not be reached.\"; // No response was received\r\n        errorResponse.noconnection = true;\r\n    }\r\n\r\n    return errorResponse;\r\n};\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\notifications\\updateNotifications.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\notifications\\getNotifications.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentInfo\\postComponentInfo.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentInfo\\updateComponentInfo.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentInfo\\getComponentInfoById.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentInfo\\getComponentInfo.ts",["2461"],"import { Dispatch } from \"redux\";\r\nimport { AppThunk } from \"../..\";\r\n\r\nimport { apiList } from \"../../actionNames\";\r\nimport initDefaultAction, { APIResponseDetail } from \"../../helper/default-action\";\r\nimport initDefaultReducer from \"../../helper/default-reducer\";\r\nimport initialState from \"../../helper/default-state\";\r\n\r\nexport interface ComponentInfoType {\r\n  component: Component;\r\n  id: number;\r\n  possible_failure: string;\r\n  description: string;\r\n  component_numbers: number;\r\n  maintenance_cost: number;\r\n  maintenance_action: string;\r\n  next_action: string;\r\n  mitigation: string;\r\n  componant_picture?: any;\r\n  resulting_risk_score: number;\r\n  maintenance_interval: number;\r\n  log_entry: number;\r\n  responsible: string;\r\n  impact_of_failure: string;\r\n  possibility_of_failure: string;\r\n  apply_date: string;\r\n}\r\n\r\ninterface Component {\r\n  id: number;\r\n  name: string;\r\n  category: Category;\r\n}\r\n\r\ninterface Category {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\n \r\n\r\nconst apiDetails = Object.freeze(apiList.componentInfo.getComponentInfo);\r\n\r\nexport default function getComponentInfoReducer(state = initialState, action: DefaultAction): DefaultState<ComponentInfoType[]> {\r\n    const stateCopy = Object.assign({}, state);\r\n    const actionName = apiDetails.actionName;\r\n\r\n    return initDefaultReducer(actionName, action, stateCopy);\r\n}\r\n\r\nexport const getComponentInfoAction = (lang): AppThunk<APIResponseDetail<ComponentInfoType[]>> => async (dispatch: Dispatch) => {\r\n    const updatedDetails = { ...apiDetails }\r\n\r\n    return await initDefaultAction(apiDetails, dispatch, { ...apiDetails, pathVariables: { lang } });\r\n};","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\component\\postComponent.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\404\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\index.tsx",["2462","2463"],"import { HouseIcon, InstitutionIcon, UserGroupIcon } from \"assets/images/xd\";\r\nimport { InfoCard } from \"components/UI/InfoCard\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\nimport { formatTime } from \"core/Protected/Home/SupplySchedule\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getWaterSchemeDetailsAction } from \"store/modules/waterScheme/waterSchemeDetails\";\r\nimport { getWaterSupplyScheduleAction } from \"store/modules/waterSupplySchedule/getWaterSupplySchedule\";\r\nimport { getWaterTarrifsAction } from \"store/modules/waterTarrifs/getWaterTarrifs\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport IncomeExpend from \"./IncomeExpend\";\r\nimport Maintainance from \"./Maintainance\";\r\nimport Tariff from \"./Tariff\";\r\n\r\ninterface Iprops extends PropsFromRedux {}\r\n\r\nconst HomeMain = (props: Iprops) => {\r\n  const { language, schemeDetails, incomeExpenseData } = props;\r\n\r\n  const { t } = useTranslation([\"home\"]);\r\n\r\n  useEffect(() => {\r\n    if (language && schemeDetails?.slug) {\r\n      // props.getWaterTarrifsAction(language, schemeDetails.slug, \"use\");\r\n      props.getWaterSupplyScheduleAction(language, schemeDetails.slug);\r\n    }\r\n  }, [language, schemeDetails]);\r\n\r\n  return (\r\n    <div className=\"container py-3\">\r\n      {/* <h6 className=\"mb-3 text-black\">Dashboard</h6> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-9 col-md-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4 col-md-6 mb-md-0 mb-3\">\r\n              <InfoCard\r\n                first\r\n                title={t(\"home:overallNetBalance\")}\r\n                subTitle={t(\"home:overallNetBalance\") as string}\r\n                value={incomeExpenseData?.net_balance}\r\n              >\r\n                <div className=\"infoCard-details\">\r\n                  <div className=\"infoCard-details-item\">\r\n                    <p className=\"infoCard-sub-title2\">{t(\"home:overallNetIncome\")}</p>\r\n                    <h6\r\n                      className=\"infoCard-sub-price\"\r\n                      style={{ fontFamily: language === \"en\" ? \" Roboto\" : \"\" }}\r\n                    >\r\n                      {props.schemeDetails?.currency} {incomeExpenseData?.net_income}\r\n                    </h6>\r\n                  </div>\r\n                  <div className=\"infoCard-details-item\">\r\n                    <p className=\"infoCard-sub-title2\">{t(\"home:overallNetExpenditure\")}</p>\r\n                    <h6\r\n                      className=\"infoCard-sub-price\"\r\n                      style={{ fontFamily: language === \"en\" ? \" Roboto\" : \"\" }}\r\n                    >\r\n                      {props.schemeDetails?.currency} {incomeExpenseData?.net_expense}\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n              </InfoCard>\r\n            </div>\r\n\r\n            <div className=\"col-lg-5 col-md-6 mb-md-0 mb-3\">\r\n              <InfoCard\r\n                second\r\n                title={t(\"home:beneficiary\")}\r\n                subTitle={\"\"}\r\n                value={incomeExpenseData?.total_population}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <div className=\"infoCard-details-item\">\r\n                      <p className=\"infoCard-sub-title2\">{t(\"home:households\")}</p>\r\n                      <h6 className=\"infoCard-sub-price\">\r\n                        <img src={HouseIcon} alt=\"\" className=\"icon\" />{\" \"}\r\n                        {incomeExpenseData?.house_hold}\r\n                      </h6>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"infoCard-details-item\">\r\n                      <p className=\"infoCard-sub-title2\">{t(\"home:public\")}</p>\r\n                      <h6 className=\"infoCard-sub-price\">\r\n                        <img src={UserGroupIcon} alt=\"\" className=\"icon\" />{\" \"}\r\n                        {incomeExpenseData?.public_connection}\r\n                      </h6>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-6 mt-4\">\r\n                    <div className=\"infoCard-details-item\">\r\n                      <p className=\"infoCard-sub-title2\">{t(\"home:institutions\")}</p>\r\n                      <h6 className=\"infoCard-sub-price\">\r\n                        <img src={InstitutionIcon} alt=\"\" className=\"icon\" />{\" \"}\r\n                        {incomeExpenseData?.instutions}\r\n                      </h6>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-6 mt-4\">\r\n                    <div className=\"infoCard-details-item\">\r\n                      <p className=\"infoCard-sub-title2\">{t(\"home:commercial\")}</p>\r\n                      <h6 className=\"infoCard-sub-price\">\r\n                        <img src={InstitutionIcon} alt=\"\" className=\"icon\" />{\" \"}\r\n                        {incomeExpenseData?.commercial_connection}\r\n                      </h6>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* <div className=\"infoCard-details-item\">\r\n                    <p className=\"infoCard-sub-title2\">{t(\"home:publicTaps\")}</p>\r\n                    <h6 className=\"infoCard-sub-price\">\r\n                      <img src={UserGroupIcon} alt=\"\" className=\"icon\" />{\" \"}\r\n                      {incomeExpenseData?.public_taps}\r\n                    </h6>\r\n                  </div> */}\r\n                </div>\r\n              </InfoCard>\r\n            </div>\r\n\r\n            <div className=\"col-lg-3 col-md-6 mb-md-0 mb-3\">\r\n              <InfoCard\r\n                title={t(\"home:supply\")}\r\n                subTitle={t(\"home:dailyAverage\") as string}\r\n                value={\r\n                  incomeExpenseData?.daily_avg_supply\r\n                    ? incomeExpenseData?.daily_avg_supply + \" \" + t(\"home:litre\")\r\n                    : \"\"\r\n                }\r\n              >\r\n                <div className=\"infoCard-details\"></div>\r\n\r\n                {/* <div className=\"infoCard-details\">\r\n                  <div className=\"infoCard-details-item\">\r\n                    <p className=\"infoCard-sub-title2\">Daily planned</p>\r\n                    <h6 className=\"infoCard-sub-price\">12,000 Ltrs</h6>\r\n                  </div>\r\n                  <div className=\"infoCard-details-item\">\r\n                    <p className=\"infoCard-sub-title2\">\r\n                      Overall Net Expenditure\r\n                    </p> \r\n                  </div>\r\n                </div> */}\r\n              </InfoCard>\r\n            </div>\r\n          </div>\r\n          <div className=\"my-2\">\r\n            <IncomeExpend />\r\n          </div>\r\n          <div className=\"my-2\">\r\n            <Maintainance />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-12 \">\r\n          <div className=\"home-right\">\r\n            <div className=\"home-right-card\">\r\n              <h6 className=\"home-right-title\">{t(\"home:supplySchedule\")}</h6>\r\n              {props.waterSupplyData &&\r\n                props.waterSupplyData instanceof Array &&\r\n                props.waterSupplyData.map((item, index) => (\r\n                  <div className=\"home-right-info\" key={index}>\r\n                    <h6>{item.day?.toUpperCase()}</h6>\r\n                    <span>\r\n                      <p>\r\n                        {getNumberByLanguage(formatTime(item.time_from))} :\r\n                        {getNumberByLanguage(formatTime(item.time_to))}\r\n                      </p>\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"home-right-card\">\r\n              <h6 className=\"home-right-title\">{t(\"home:tariffRates\")} </h6>\r\n\r\n              {/* {props.waterTarrifs?.map((tarrif) => (\r\n                <div className=\"home-right-info\" key={tarrif.id}>\r\n                  <h6>\r\n                    {tarrif.unit_from}-{tarrif.unit_to} {t(\"home:unit\")}\r\n                  </h6>\r\n                  <span>\r\n                    <p>\r\n                      {props.scheme?.currency} {tarrif.rate} | {t(\"home:unit\")}\r\n                    </p>\r\n                  </span>\r\n                </div>\r\n              ))} */}\r\n              <Tariff />\r\n            </div>\r\n            <div className=\"home-right-card\">\r\n              <h6 className=\"home-right-title\">{t(\"home:generalInformation\")}</h6>\r\n              <div className=\"home-right-info\">\r\n                <h6>{t(\"home:name\")}: </h6>\r\n                <span>\r\n                  <p>{props.waterSchemeDetails?.scheme_name}</p>\r\n                </span>\r\n              </div>\r\n              <div className=\"home-right-info\">\r\n                <h6>{t(\"home:address\")}: </h6>\r\n                <span>\r\n                  <p>{props.waterSchemeDetails?.location}</p>\r\n                </span>\r\n              </div>\r\n              <div className=\"home-right-info\">\r\n                <h6>{t(\"home:source\")}: </h6>\r\n                <span>\r\n                  <p>{props.schemeDetails?.water_source}</p>\r\n                </span>\r\n              </div>\r\n              <div className=\"home-right-info\">\r\n                <h6>{t(\"home:builtDate\")}: </h6>\r\n                <span>\r\n                  <p>\r\n                    {getNumberByLanguage(\r\n                      new Date(props.waterSchemeDetails?.system_built_date)?.toLocaleDateString()\r\n                    )}\r\n                  </p>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\r\n  waterTarrifs: state.waterTarrifsData.waterTarrifData.data,\r\n  waterSupplyData: state.waterSupplyData.waterScheduleData.data,\r\n  waterSchemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getWaterTarrifsAction: getWaterTarrifsAction,\r\n  getWaterSupplyScheduleAction: getWaterSupplyScheduleAction,\r\n  getWaterSchemeDetailsAction: getWaterSchemeDetailsAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(HomeMain);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\component\\updateComponent.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\CashBook\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\Visualization\\index.tsx",["2464","2465"],"import classnames from \"classnames\";\r\nimport { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Col, Nav, NavItem, NavLink, Row, TabContent, TabPane } from \"reactstrap\";\r\nimport { getActualCumulativeAction } from \"store/modules/report/actualCumilitiveCashFlow\";\r\nimport { getExpenseByCategoryAction } from \"store/modules/report/expenseByCategory\";\r\nimport { getExpenseCumulativeAction } from \"store/modules/report/expenseCumilitiveCashFlow\";\r\nimport { getIncomeByCategoryAction } from \"store/modules/report/incomeByCategory\";\r\nimport { getIncomeExpenseAction } from \"store/modules/report/incomeExpense\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport DonoughtChart from \"./DonoughtChart\";\r\nimport LineChart from \"./LineChart\";\r\nimport LineChartThisYear from \"./LineChart/LineChartThisYear\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst Visualization = (props: Props) => {\r\n  const { t } = useTranslation([\"home\", \"finance\"]);\r\n\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n  const [selected, setSelected] = useState<string[]>([\"actual_income\", \"actual_expense\"]);\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      props.getIncomeByCategoryAction(props.schemeSlug);\r\n      props.getExpenseByCategoryAction(props.schemeSlug);\r\n    }\r\n  }, [props.schemeSlug]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      if (activeTab === \"1\") {\r\n        props.getIncomeExpenseAction(props.language, props.schemeSlug);\r\n        // props.getActualCumulativeAction(props.schemeSlug);\r\n        props.getExpenseCumulativeAction(props.schemeSlug);\r\n      } else {\r\n        props.getIncomeExpenseAction(props.language, props.schemeSlug, true);\r\n        // props.getActualCumulativeAction(props.schemeSlug, true);\r\n        props.getExpenseCumulativeAction(props.schemeSlug, true);\r\n      }\r\n    }\r\n  }, [props.language, activeTab, props.schemeSlug]);\r\n\r\n  return (\r\n    <div className=\"container py-3 cash-book\">\r\n      <GeneralCard title={t(\"finance:FinancialDataVisualization\")} className=\"my-0 mt-3\" print={true}>\r\n        <div className=\"cash-content\">\r\n          <div className=\"flex-between\">\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"1\" })}\r\n                  onClick={() => {\r\n                    toggle(\"1\");\r\n                  }}\r\n                >\r\n                  {t(\"home:allTime\")}\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"2\" })}\r\n                  onClick={() => {\r\n                    toggle(\"2\");\r\n                  }}\r\n                >\r\n                  {t(\"home:thisYear\")}\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </div>\r\n\r\n          <TabContent activeTab={activeTab} className=\"mt-2\">\r\n            <TabPane tabId=\"1\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  <LineChart selected={selected} setSelected={setSelected} />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              <Row>\r\n                <Col sm=\"12\">{activeTab === \"2\" && <LineChartThisYear selected={selected} setSelected={setSelected} />}</Col>\r\n              </Row>\r\n            </TabPane>\r\n          </TabContent>\r\n        </div>\r\n      </GeneralCard>\r\n\r\n      <div className=\"my-5\">\r\n        <DonoughtChart />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getIncomeExpenseAction: getIncomeExpenseAction,\r\n  getActualCumulativeAction: getActualCumulativeAction,\r\n  getExpenseCumulativeAction: getExpenseCumulativeAction,\r\n\r\n  getIncomeByCategoryAction: getIncomeByCategoryAction,\r\n  getExpenseByCategoryAction: getExpenseByCategoryAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Visualization);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\index.tsx",["2466"],"import { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport React from \"react\";\r\nimport { Col, Nav, NavItem, NavLink, Row, TabContent, TabPane } from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport BarChart from \"./BarChart\";\r\nimport BarChartThisYear from \"./BarChart/ChartThisYear\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getMaintainanceCostAction } from \"store/modules/report/maintainanceCost\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport DonoughtChart from \"./DonoughtChart\";\r\nimport { getMaintainanceCostByYearAction } from \"store/modules/report/maintainanceCostByYear\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst CostVisualization = (props: Props) => {\r\n  const { t } = useTranslation([\"home\", \"finance\"]);\r\n\r\n  const [activeTab, setActiveTab] = React.useState(\"1\");\r\n\r\n  const [selected, setSelected] = React.useState<string[]>([\r\n    \"expected_unsegregated\",\r\n    \"expected_material\",\r\n  ]);\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      if (activeTab === \"1\") {\r\n        props.getMaintainanceCostAction(props.schemeSlug);\r\n        props.getMaintainanceCostByYearAction(props.schemeSlug);\r\n      } else {\r\n        props.getMaintainanceCostAction(props.schemeSlug, true);\r\n        props.getMaintainanceCostByYearAction(props.schemeSlug, true);\r\n      }\r\n    }\r\n  }, [activeTab, props.schemeSlug]);\r\n\r\n  return (\r\n    <div className=\"container py-3 cash-book\">\r\n      <GeneralCard\r\n        title={t(\"sidebar:maintainance\") + \" \" + t(\"sidebar:dataVisualization\")}\r\n        className=\"my-0 mt-3\"\r\n        print={true}\r\n      >\r\n        <div className=\"cash-content\">\r\n          <div className=\"flex-between\">\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"1\" })}\r\n                  onClick={() => {\r\n                    toggle(\"1\");\r\n                  }}\r\n                >\r\n                  {t(\"home:allTime\")}\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"2\" })}\r\n                  onClick={() => {\r\n                    toggle(\"2\");\r\n                  }}\r\n                >\r\n                  {t(\"home:thisYear\")}\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </div>\r\n\r\n          <TabContent activeTab={activeTab} className=\"mt-2\">\r\n            <TabPane tabId=\"1\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {activeTab === \"1\" && <BarChart selected={selected} setSelected={setSelected} />}\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {activeTab === \"2\" && (\r\n                    <BarChartThisYear selected={selected} setSelected={setSelected} />\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n          </TabContent>\r\n        </div>\r\n      </GeneralCard>\r\n\r\n      <div className=\"my-5\">\r\n        <DonoughtChart />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getMaintainanceCostAction: getMaintainanceCostAction,\r\n  getMaintainanceCostByYearAction: getMaintainanceCostByYearAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CostVisualization);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\index.tsx",["2467","2468","2469","2470"],"import React from \"react\";\r\nimport { Col, Nav, NavItem, NavLink, Row, TabContent, TabPane } from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport { ADToBS, BSToAD } from \"components/React/Datepicker/Datepickerutils\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\r\nimport { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getWaterSupplyReportAction } from \"store/modules/report/waterSupply\";\r\nimport { getSchemeYearIntervalsAction } from \"store/modules/waterScheme/getYearIntervals\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { allTimeOptions, thisYearOptions, thisMonthOptions, thisWeekOptions } from \"./datas\";\r\nimport VisualizationBarGraph from \"./VisualizationBarGraph\";\r\nimport VisualizationBarGraphThisWeek from \"./VisualizationBarGraphThisWeek\";\r\nimport VisualizationGraph from \"./VisualizationGraph\";\r\nimport VisualizationGraphThisYear from \"./VisualizationGraphThisYear\";\r\nimport formatDate, { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst SupplyVIsualization = (props: Props) => {\r\n  const { t } = useTranslation([\"home\"]);\r\n\r\n  const [yearOptions, setYearOptions] = React.useState<any>([]);\r\n  const [selectedYear, setSelectedYear] = React.useState<any>(\"\");\r\n\r\n  const [activeTab, setActiveTab] = React.useState(\"1\");\r\n  const [activeDate, setActiveDate] = React.useState<any>(\"\");\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.language && props.schemeSlug) {\r\n      props.getSchemeYearIntervalsAction(props.language, props.schemeSlug);\r\n    }\r\n  }, [props.language, props.schemeSlug]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.intervalData) {\r\n      const intervalData = props.intervalData.map((item) => ({\r\n        value: item.id,\r\n        label: `${item.start_date} - ${item.end_date}`,\r\n      }));\r\n      setYearOptions(intervalData);\r\n    }\r\n  }, [props.intervalData]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug && props.schemeDetails) {\r\n      if (activeTab === \"1\") {\r\n        props.getWaterSupplyReportAction(props.schemeSlug);\r\n      } else if (activeTab === \"2\") {\r\n        props.getWaterSupplyReportAction(props.schemeSlug, `this_year=${selectedYear || 1}`);\r\n      } else if (activeTab === \"3\") {\r\n        props.getWaterSupplyReportAction(\r\n          props.schemeSlug,\r\n          `year=${\r\n            activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(props.schemeDetails?.system_date_format)?.split(\"-\")[0]\r\n          }&this_month=${\r\n            activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(props.schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n          }`\r\n        );\r\n      } else if (activeTab === \"4\") {\r\n        props.getWaterSupplyReportAction(\r\n          props.schemeSlug,\r\n          `this_week=true&date_from=${formatDate(activeDate || new Date())}&date_to=${formatDate(\r\n            new Date(new Date(activeDate || new Date()).getTime() + 7 * 24 * 60 * 60 * 1000)\r\n          )}`\r\n        );\r\n      }\r\n    }\r\n  }, [props.language, activeTab, props.schemeSlug, selectedYear, activeDate, props.schemeDetails]);\r\n\r\n  console.log(activeDate, \"asdasdasdasdasdasd\");\r\n  return (\r\n    <div className=\"container py-3 cash-book customCase\">\r\n      <GeneralCard title={t(\"sidebar:supplyVisualization\")} print={true}>\r\n        <div className=\"cash-content\">\r\n          <div className=\"flex-between\">\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"1\" })}\r\n                  onClick={() => {\r\n                    toggle(\"1\");\r\n                  }}\r\n                >\r\n                  {t(\"home:allTime\")}\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"2\" })}\r\n                  onClick={() => {\r\n                    toggle(\"2\");\r\n                  }}\r\n                >\r\n                  {t(\"home:thisYear\")}\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"3\" })}\r\n                  onClick={() => {\r\n                    toggle(\"3\");\r\n                  }}\r\n                >\r\n                  {t(\"home:thisMonth\")}\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"4\" })}\r\n                  onClick={() => {\r\n                    toggle(\"4\");\r\n                  }}\r\n                >\r\n                  {t(\"home:thisWeek\")}\r\n                </NavLink>\r\n              </NavItem>\r\n              {activeTab !== \"1\" && (\r\n                <NavItem>\r\n                  <div className=\"form-group my-0 py-0 pl-4\">\r\n                    {activeTab === \"2\" ? (\r\n                      <div className=\"flex-grow-1\" style={{ width: 200 }}>\r\n                        <StyledSelect\r\n                          name=\"this_year\"\r\n                          options={yearOptions}\r\n                          value={yearOptions?.find((item) => item.value === selectedYear)}\r\n                          onChange={(e: any) => {\r\n                            setSelectedYear(e.value?.value);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <>\r\n                        {props.schemeDetails?.system_date_format === \"nep\" ? (\r\n                          <NepaliDatePicker\r\n                            className=\"form-control\"\r\n                            name=\"name_en\"\r\n                            value={activeDate}\r\n                            onChange={(e) => {\r\n                              setActiveDate(e);\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          <EnglishDatePicker\r\n                            name=\"eng\"\r\n                            value={activeDate || new Date()}\r\n                            handleChange={(e) => {\r\n                              setActiveDate(formatDate(e));\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </NavItem>\r\n              )}\r\n            </Nav>\r\n            <span className=\"info-text\">\r\n              {t(\"home:allAmountInRupee\")} {props.currency}\r\n            </span>\r\n          </div>\r\n\r\n          <TabContent activeTab={activeTab} className=\"mt-2\">\r\n            <TabPane tabId=\"1\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {activeTab === \"1\" && (\r\n                    <VisualizationGraph\r\n                      type=\"Year\"\r\n                      compareKey=\"date_from\"\r\n                      defaultSelected={[\"total_supply_avg\"]}\r\n                      options={allTimeOptions}\r\n                      key=\"allTimeGraph\"\r\n                    />\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {activeTab === \"2\" && (\r\n                    <VisualizationGraphThisYear\r\n                      type=\"Month\"\r\n                      defaultSelected={[\"total_supply_avg\"]}\r\n                      options={thisYearOptions}\r\n                      selectedYear={selectedYear}\r\n                      key=\"yearGraph\"\r\n                    />\r\n                  )}\r\n                </Col>{\" \"}\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"3\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {activeTab === \"3\" && (\r\n                    <VisualizationBarGraph\r\n                      compareKey=\"supply_date\"\r\n                      defaultSelected={[\"total_supply\", \"daily_target\"]}\r\n                      options={thisMonthOptions}\r\n                      key=\"thisMonthGraph\"\r\n                    />\r\n                  )}\r\n                </Col>{\" \"}\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"4\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {activeTab === \"4\" && (\r\n                    <VisualizationBarGraphThisWeek\r\n                      compareKey=\"supply_date\"\r\n                      defaultSelected={[\"total_supply_avg\"]}\r\n                      options={thisWeekOptions}\r\n                      key={\"thisWeek\"}\r\n                    />\r\n                  )}\r\n                </Col>{\" \"}\r\n              </Row>\r\n            </TabPane>\r\n          </TabContent>\r\n        </div>\r\n      </GeneralCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  intervalData: state.waterSchemeData.getYearIntervals.data,\r\n  currency: state.waterSchemeData.waterSchemeDetailsData.data?.currency,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getWaterSupplyReportAction: getWaterSupplyReportAction,\r\n  getSchemeYearIntervalsAction: getSchemeYearIntervalsAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(SupplyVIsualization);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\index.tsx",["2471","2472"],"import classnames from \"classnames\";\r\nimport { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  Col,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\nimport { getWaterTestResultsAction } from \"store/modules/report/waterTestResults\";\r\nimport { getTestParametersAction } from \"store/modules/testParamters/getTestParameters\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport VisualizationGraph from \"./VisualizationGraph\";\r\nimport VisualizationGraphThisYear from \"./VisualizationGraphThisYear\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst WaterTestResults = (props: Props) => {\r\n  const { t } = useTranslation([\"home\", \"sidebar\"]);\r\n\r\n  const [activeTab, setActiveTab] = React.useState(\"1\");\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      props.getTestParametersAction(props.schemeSlug);\r\n    }\r\n  }, [props.schemeSlug]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      if (activeTab === \"1\") {\r\n        props.getWaterTestResultsAction(props.schemeSlug);\r\n      } else {\r\n        props.getWaterTestResultsAction(props.schemeSlug, true);\r\n      }\r\n    }\r\n  }, [props.language, activeTab, props.schemeSlug]);\r\n\r\n  return (\r\n    <div className=\"container py-3 cash-book\">\r\n      <GeneralCard title={t(\"sidebar:qualityTestResult\")} print={true}>\r\n        <div className=\"cash-content\">\r\n          <div className=\"flex-between\">\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"1\" })}\r\n                  onClick={() => {\r\n                    toggle(\"1\");\r\n                  }}\r\n                >\r\n                  {t(\"home:allTime\")}\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"2\" })}\r\n                  onClick={() => {\r\n                    toggle(\"2\");\r\n                  }}\r\n                >\r\n                  {t(\"home:thisYear\")}\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <span className=\"info-text\">{t(\"home:allAmountInRupee\")} {props.currency}</span>\r\n          </div>\r\n\r\n          <TabContent activeTab={activeTab} className=\"mt-2\">\r\n            <TabPane tabId=\"1\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {activeTab === \"1\" && (\r\n                    <VisualizationGraph\r\n                      compareKey=\"year_from\"\r\n                      defaultSelected={['ph']}\r\n                      type=\"Year\"\r\n                    />\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {activeTab === \"2\" && (\r\n                    <VisualizationGraphThisYear\r\n                      compareKey=\"month\"\r\n                      defaultSelected={['ph']}\r\n                      type=\"Month\"\r\n                    />\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n          </TabContent>\r\n        </div>\r\n      </GeneralCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  currency: state.waterSchemeData.waterSchemeDetailsData.data?.currency,\r\n\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getWaterTestResultsAction: getWaterTestResultsAction,\r\n  getTestParametersAction: getTestParametersAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(WaterTestResults);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\InflationParamters\\index.tsx",["2473","2474"],"import { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ManageOtherParameters from \"./ManageOtherParameters\";\r\n\r\ninterface Props {}\r\n\r\nconst OtherExpenses = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [rateType, setRateType] = React.useState(\"1\");\r\n\r\n  return (\r\n    <div className=\"container py-3 \">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12\">\r\n          <GeneralCard title={t(\"finance:inflation\")}>\r\n            <ManageOtherParameters />\r\n          </GeneralCard>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtherExpenses;\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\index.tsx",["2475","2476","2477"],"import { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ManageOtherExpenses from \"./ManageOtherExpenses\";\r\nimport ManageOtherParameters from \"./ManageOtherParameters\";\r\n\r\ninterface Props {}\r\n\r\nconst OtherExpenses = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [rateType, setRateType] = React.useState(\"1\");\r\n\r\n  return (\r\n    <div className=\"container py-3 \">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12\">\r\n          <GeneralCard title={t(\"sidebar:otherParam\")}>\r\n            <ManageOtherExpenses />\r\n          </GeneralCard>\r\n        </div>\r\n        {/* <div className=\"col-lg-4\">\r\n          <GeneralCard title={t(\"finance:inflation\") + \" \" + t(\"finance:parameters\")}>\r\n            <ManageOtherParameters />\r\n          </GeneralCard>\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtherExpenses;\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\index.tsx",["2478"],"import CustomRadio from \"components/UI/CustomRadio\";\r\nimport { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport React from \"react\";\r\nimport UserBased from \"./UseBased\";\r\nimport FixedRate from \"./FixedRates\";\r\nimport ThisYear from \"./IncomeEstimates/ThisYear\";\r\nimport IncomeEstimates from \"./IncomeExpendGraph\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getWaterTarrifsAction } from \"store/modules/waterTarrifs/getWaterTarrifs\";\r\nimport { getFixedRateIncomeEstimatesAction } from \"store/modules/waterTarrifs/getFixedRateIncomeEstimates\";\r\nimport { getUseBasedWaterTarrifsAction } from \"store/modules/waterTarrifs/getUseBasedWaterTarrifs\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst Tarrifrates = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [rateType, setRateType] = React.useState(\"1\"); //1 -> use Based //2 -> Fixed rate\r\n  const [tariffType, setTariffType] = React.useState(\"\");\r\n \r\n\r\n  React.useEffect(() => {\r\n    if (props.language && props.schemeSlug) {\r\n      props.getWaterTarrifsAction(props.language, props.schemeSlug, \"fixed\");\r\n      props.getUseBasedWaterTarrifsAction(props.language,props.schemeSlug);\r\n    }\r\n  }, [props.language, props.schemeSlug]);\r\n\r\n  console.log(props.waterTarrifs , props.useBasedWaterTarrifs, \"watterrrtarfififi\")\r\n  \r\n\r\n\r\n  React.useEffect(() => {\r\n    if (props.waterTarrifs || props.useBasedWaterTarrifs) {\r\n      if (props.useBasedWaterTarrifs?.some((item) => item.terif_type === \"Use Based\")) {\r\n        setTariffType(\"useBased\");\r\n        setRateType(\"1\");\r\n      } else if (props.waterTarrifs?.some((item) => item.terif_type === \"Fixed\")) {\r\n        setTariffType(\"fixed\");\r\n        setRateType(\"2\");\r\n      } else { \r\n        setTariffType(\"\");\r\n      }\r\n    }\r\n  }, [props.waterTarrifs, props.useBasedWaterTarrifs]);\r\n\r\n  return (\r\n    <div className=\"container py-3 \">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12\">\r\n          <GeneralCard title={t(\"sidebar:tariffRates\")}>\r\n            <div className=\"d-flex\">\r\n              {tariffType !== \"fixed\" && (\r\n                <div className=\"mr-2\">\r\n                  <CustomRadio\r\n                    label={t(\"finance:useBased\")}\r\n                    id=\"userBased\"\r\n                    name=\"1\"\r\n                    value={1}\r\n                    checked={rateType === \"1\"}\r\n                    onChange={(e) => setRateType(e.target.value)}\r\n                  />\r\n                </div>\r\n              )}\r\n              {tariffType !== \"useBased\" && (\r\n                <div className=\"ml-2\">\r\n                  <CustomRadio\r\n                    label={t(\"finance:fixedRate\")}\r\n                    id=\"fixed2\"\r\n                    name=\"2\"\r\n                    value={2}\r\n                    checked={rateType === \"2\"}\r\n                    onChange={(e) => setRateType(e.target.value)}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {rateType === \"1\" ? <UserBased /> : <FixedRate />}\r\n          </GeneralCard>\r\n        </div>\r\n        <div className=\"col-lg-8 mt-3 \">\r\n          <GeneralCard title={t(\"finance:incomeEstimateTY\")}>\r\n            <ThisYear rateType={rateType} />\r\n          </GeneralCard>\r\n        </div>\r\n        <div className=\"col-lg-4 mt-3 \">\r\n          <GeneralCard title={t(\"finance:incomeEstimate\")}>\r\n            <IncomeEstimates />\r\n          </GeneralCard>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  waterTarrifs: state.waterTarrifsData.waterTarrifData.data,\r\n  useBasedWaterTarrifs: state.waterTarrifsData.getUseBasedWaterTarrifs.data,\r\n  supplySchedule: state.waterTarrifsData.waterTarrifData.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getWaterTarrifsAction: getWaterTarrifsAction,\r\n  getFixedRateIncomeEstimatesAction: getFixedRateIncomeEstimatesAction,\r\n  getUseBasedWaterTarrifsAction: getUseBasedWaterTarrifsAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Tarrifrates);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\index.tsx",["2479"],"import { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport React from \"react\";\r\nimport ManageQTParameters from \"./ManageQTParameters\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface Props {}\r\n\r\nconst QualityTestParameters = (props: Props) => {\r\n  const { t } = useTranslation(\"home\");\r\n  const [rateType, setRateType] = React.useState(\"1\");\r\n\r\n  console.log(rateType);\r\n\r\n  return (\r\n    <div className=\"container py-3 \">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12\">\r\n          <GeneralCard title={t(\"home:qtp\")}>\r\n            <ManageQTParameters />\r\n          </GeneralCard>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QualityTestParameters;\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\component\\getComponent.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentCategories\\postComponentCategories.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentCategories\\updateComponentCategories.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\componentCategories\\getComponentCategories.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\inflationParameters\\updateInflationParameters.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\inflationParameters\\deleteInflationParameters.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\inflationParameters\\getInflationParameters.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Notifications\\scheme.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Dashboard\\Sidebar\\Sidebar.tsx",["2480","2481"],"import {\r\n  CashbookIcon,\r\n  FinanceIcon,\r\n  HomeIcon,\r\n  MaintainIcon,\r\n  ServiceIcon,\r\n  VisualizationIcon,\r\n  Notifications,\r\n} from \"assets/images/xd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { UncontrolledCollapse } from \"reactstrap\";\r\nimport useAuthentication from \"services/authentication/AuthenticationService\";\r\nimport { RootState } from \"store/root-reducer\";\r\n\r\ninterface Props {\r\n  sidebarToggle: boolean;\r\n  setsidebarToggle: (state: boolean) => void;\r\n}\r\nconst Sidebar = (props: Props) => {\r\n  const history = useHistory();\r\n  const { isAuthenticated } = useAuthentication();\r\n\r\n  const { sidebarToggle, setsidebarToggle } = props;\r\n  const togglesidebar = () => setsidebarToggle(!sidebarToggle);\r\n\r\n  const slug = useSelector(\r\n    (state: RootState) => state.waterSchemeData.waterSchemeDetailsData.data?.slug\r\n  );\r\n  const schemeDetails = useSelector(\r\n    (state: RootState) => state.waterSchemeData.waterSchemeDetailsData.data\r\n  );\r\n\r\n  const { t } = useTranslation([\"sidebar\"]);\r\n\r\n  const internalSidebarItems = [\r\n    { name: \"home\", title: t(\"sidebar:home\"), link: \"/auth/home\", icon: HomeIcon },\r\n    {\r\n      name: \"finance\",\r\n      title: t(\"sidebar:finance\"),\r\n      icon: FinanceIcon,\r\n      link: \"\",\r\n      children: [\r\n        {\r\n          name: \"tarrifrate\",\r\n          title: t(\"sidebar:tariffRates\"),\r\n          link: \"/auth/tarrif-rates\",\r\n          icon: VisualizationIcon,\r\n        },\r\n        {\r\n          name: \"otherexpense\",\r\n          title: `${t(\"sidebar:otherParam\")}`,\r\n          link: \"/auth/other-expense\",\r\n          icon: CashbookIcon,\r\n        },\r\n        {\r\n          name: \"inflationParams\",\r\n          title: `${t(\"sidebar:inflationParam\")}`,\r\n          link: \"/auth/inflation-parameters\",\r\n          icon: CashbookIcon,\r\n        },\r\n        {\r\n          name: \"cashbook\",\r\n          title: t(\"sidebar:cashbook\"),\r\n          link: \"/auth/cash-book\",\r\n          icon: CashbookIcon,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"maintainance\",\r\n      title: t(\"sidebar:maintainance\"),\r\n      icon: MaintainIcon,\r\n      link: \"\",\r\n      children: [\r\n        {\r\n          name: \"manageComponent\",\r\n          title: `${t(\"sidebar:componentCategories\")}`,\r\n          link: \"/auth/manage-categories\",\r\n          icon: MaintainIcon,\r\n        },\r\n        {\r\n          name: \"assetcomponents\",\r\n          title: t(\"sidebar:assetComponent\"),\r\n          link: \"/auth/asset-components\",\r\n          icon: MaintainIcon,\r\n        },\r\n        {\r\n          name: \"componentLogs\",\r\n          title: t(\"sidebar:componentLogs\"),\r\n          link: \"/auth/component-logs\",\r\n          icon: MaintainIcon,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"service\",\r\n      title: t(\"sidebar:quality\"),\r\n      link: \"/auth/quality-test-parameters\",\r\n      icon: ServiceIcon,\r\n    },\r\n    {\r\n      name: \"notification\",\r\n      title: t(\"home:notifications\"),\r\n      link: \"/auth/update-notification\",\r\n      icon: Notifications,\r\n    },\r\n\r\n    // {\r\n    //   name: \"service\",\r\n    //   title: t(\"sidebar:service\"),\r\n    //   icon: ServiceIcon,\r\n    //   link: \"\",\r\n    //   children: [\r\n    //     {\r\n    //       name: \"qualityTestParameters\",\r\n    //       title: t(\"home:qtp\"),\r\n    //       link: \"/auth/quality-test-parameters\",\r\n    //       icon: ServiceIcon,\r\n    //     },\r\n    //   ],\r\n    // },\r\n\r\n    // {\r\n    //   name: \"notification\",\r\n    //   title: t(\"home:notifications\"),\r\n    //   icon: Notifications,\r\n    //   link: \"\",\r\n    //   children: [\r\n    //     {\r\n    //       name: \"createNotifications\",\r\n    //       title: t(\"home:updateNotifications\"),\r\n    //       link: \"/auth/update-notification\",\r\n    //       icon: Notifications,\r\n    //     },\r\n    //     // {\r\n    //     //   name: \"updateNotifications\",\r\n    //     //   title: t(\"home:updateNotifications\"),\r\n    //     //   link: \"/update-notification\",\r\n    //     //   icon: Notifications,\r\n    //     // },\r\n    //   ],\r\n    // },\r\n  ];\r\n\r\n  const sidebarItems = [\r\n    {\r\n      name: \"home\",\r\n      title: t(\"sidebar:home\"),\r\n      link: \"/scheme/\" + slug + \"/home\",\r\n      icon: HomeIcon,\r\n    },\r\n    {\r\n      name: \"finance\",\r\n      title: t(\"sidebar:finance\"),\r\n      icon: FinanceIcon,\r\n      link: \"\",\r\n      children: [\r\n        {\r\n          name: \"visualization\",\r\n          title: t(\"sidebar:visualization\"),\r\n          link: \"/scheme/\" + slug + \"/visualization\",\r\n          icon: VisualizationIcon,\r\n        },\r\n        {\r\n          name: \"cashbook\",\r\n          title: t(\"sidebar:cashbook\"),\r\n          link: \"/scheme/\" + slug + \"/cash-book\",\r\n          icon: CashbookIcon,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"maintainance\",\r\n      title: t(\"sidebar:maintainance\"),\r\n      icon: MaintainIcon,\r\n      link: \"\",\r\n      children: [\r\n        {\r\n          name: \"costvisualization\",\r\n          title: t(\"sidebar:dataVisualization\"),\r\n          link: \"/scheme/\" + slug + \"/cost-visualization\",\r\n          icon: MaintainIcon,\r\n        },\r\n        {\r\n          name: \"assetcomponents\",\r\n          title: t(\"sidebar:assetComponent\"),\r\n          link: \"/scheme/\" + slug + \"/asset-components\",\r\n          icon: MaintainIcon,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"service\",\r\n      title: t(\"sidebar:service\"),\r\n      icon: ServiceIcon,\r\n      link: \"\",\r\n      children: [\r\n        {\r\n          name: \"supplyvisualization\",\r\n          title: t(\"sidebar:supplyVisualization\"),\r\n          link: \"/scheme/\" + slug + \"/supply-visualization\",\r\n          icon: ServiceIcon,\r\n        },\r\n        {\r\n          name: \"qualityTestResults\",\r\n          title: t(\"qualityTestResult\"),\r\n          link: \"/scheme/\" + slug + \"/quality-test-results\",\r\n          icon: ServiceIcon,\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const checkParentActive = (item) => {\r\n    let active = false;\r\n\r\n    item.children.forEach((child) => {\r\n      if (window.location.href.indexOf(child.link) > -1) {\r\n        active = true;\r\n      }\r\n    });\r\n    return active;\r\n  };\r\n\r\n  const finalSidebarItems =\r\n    window.location.href?.includes(\"auth\") && isAuthenticated()\r\n      ? internalSidebarItems\r\n      : sidebarItems;\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <div className=\" my-3\">\r\n        <div className=\"align-vertical justify-content-between\">\r\n          <div>\r\n            <h6 className=\"ml-2 sidebar-text des sidebar-brand\">\r\n              {schemeDetails?.scheme_name || \"-\"}\r\n            </h6>\r\n            <span className=\"ml-2  sidebar-text mt-0 sidebar-brand small\">\r\n              {schemeDetails?.location || \"-\"}\r\n            </span>\r\n          </div>\r\n          <div role=\"button\" className=\"toggler-close\" onClick={togglesidebar}>\r\n            <h6 className=\"ic-menu\"></h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ul className=\"list list-sidebar\">\r\n        {finalSidebarItems.map((item) => {\r\n          if (item.children) {\r\n            return (\r\n              <React.Fragment key={item.name}>\r\n                <li>\r\n                  <Link\r\n                    id={item.name}\r\n                    to=\"#\"\r\n                    className={`${checkParentActive(item) ? \"active\" : \"\"}`}\r\n                  >\r\n                    <img src={item.icon} alt=\"\" className=\"menu_icon\" />\r\n                    {item.title}\r\n                  </Link>\r\n                </li>\r\n                <li key={item.name}>\r\n                  <UncontrolledCollapse\r\n                    toggler={`#${item.name}`}\r\n                    className=\"ml-3 menu__collapsable-sub collapse\"\r\n                  >\r\n                    {item.children.map((subitem) => (\r\n                      <Link\r\n                        to={subitem.link}\r\n                        className={`${\r\n                          window.location.href?.includes(subitem.link) ? \"active\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <img src={subitem.icon} alt=\"\" className=\"menu_icon\" /> {subitem.title}\r\n                      </Link>\r\n                    ))}\r\n                  </UncontrolledCollapse>\r\n                </li>\r\n              </React.Fragment>\r\n            );\r\n          } else {\r\n            return (\r\n              <li key={item.name}>\r\n                <NavLink\r\n                  to={item.link}\r\n                  activeClassName={`${window.location.href?.includes(item.link) ? \"active\" : \"\"}`}\r\n                >\r\n                  <img src={item.icon} alt=\"\" className=\"menu_icon\" /> {item.title}\r\n                </NavLink>\r\n              </li>\r\n            );\r\n          }\r\n        })}\r\n      </ul>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Dashboard\\Header\\Header.tsx",["2482","2483","2484","2485","2486"],"import { ADToBS } from \"components/React/Datepicker/Datepickerutils\";\r\nimport React, { useState } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { getNumberByLanguage, i18nLanguages } from \"../../../../i18n/i18n\";\r\nimport { switchI18nLanguage } from \"../../../../store/modules/i18n/i18n\";\r\nimport { logoutAction, RootState } from \"../../../../store/root-reducer\";\r\nimport NEP from \"assets/images/USAFLAG.png\";\r\nimport ENG from \"assets/images/NPFLAG.png\";\r\nimport { Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from \"reactstrap\";\r\nimport useAuthentication from \"services/authentication/AuthenticationService\";\r\n\r\ninterface Props {\r\n  sidebarToggle: boolean;\r\n  setsidebarToggle: (state: boolean) => void;\r\n}\r\nconst Header = (props: Props) => {\r\n  const { sidebarToggle, setsidebarToggle } = props;\r\n  const { isAuthenticated } = useAuthentication();\r\n\r\n  const i18nextData = useSelector((state: RootState) => state.i18nextData, shallowEqual);\r\n  const languageFormat = useSelector(\r\n    (state: RootState) => state.waterSchemeData.waterSchemeDetailsData.data?.system_date_format\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state: RootState) => state.userDetails);\r\n\r\n  const initLogout = () => dispatch(logoutAction());\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n  const togglesidebar = () => setsidebarToggle(!sidebarToggle);\r\n\r\n  console.log(languageFormat, \"languageFormat\");\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <div className=\"d-flex align-items-center\">\r\n          <a className=\"ic-menu text-white toggler\" onClick={togglesidebar}></a>\r\n        </div>\r\n\r\n        <div className=\"list list__inline list-separator\">\r\n          <div className=\"d-flex align-items-center\">\r\n            <i className=\"ic-calendar  mr-1\"> </i>\r\n\r\n            <span className=\"des\">\r\n              {languageFormat === \"nep\"\r\n                ? getNumberByLanguage(ADToBS(new Date()))\r\n                : getNumberByLanguage(new Date().toLocaleDateString())}\r\n            </span>\r\n          </div>\r\n          {isAuthenticated() && (\r\n            <Dropdown isOpen={dropdownOpen} toggle={toggle} tag=\"div\" className=\"ml-3\">\r\n              <DropdownToggle className=\"auth\" tag=\"a\" role=\"button\">\r\n                <div className=\"textbox mr-2\">\r\n                  <h6 className=\"username\">{userDetails?.name}</h6>\r\n                </div>\r\n                <i className=\"ic-dropdown\"></i>\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                 \r\n                <DropdownItem onClick={initLogout} className=\"dropdown-item text-danger\">\r\n                  <i className=\"ic-logout\"> </i>\r\n                  Logout\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n          )}\r\n          <div className=\"d-flex align-items-center\">\r\n            <a\r\n              className=\"btn p-0 des\"\r\n              onClick={() => {\r\n                const switchlang = i18nLanguages.find((lang) => lang !== i18nextData.languageType);\r\n                if (switchlang) {\r\n                  dispatch(switchI18nLanguage(switchlang));\r\n                }\r\n              }}\r\n            >\r\n              {\r\n                {\r\n                  en: <img src={ENG} className=\"header-img\" />,\r\n                  nep: <img src={NEP} className=\"header-img\" />,\r\n                }[i18nextData.languageType]\r\n              }\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\otherExpenses\\postOtherExpenses.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\otherExpenses\\updateOtherExpenses.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\otherExpenses\\getOtherExpenses.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\getWaterSchemeData.ts",["2487"],"import { Dispatch } from \"redux\";\r\nimport { AppThunk } from \"../..\";\r\n\r\nimport { apiList } from \"../../actionNames\";\r\nimport initDefaultAction, { APIResponseDetail } from \"../../helper/default-action\";\r\nimport initDefaultReducer from \"../../helper/default-reducer\";\r\nimport initialState from \"../../helper/default-state\";\r\ninterface RootObject {\r\n    id: number;\r\n    household_connection: number;\r\n    public_connection: number;\r\n    commercial_connection: number;\r\n    institutional_connection: number;\r\n    apply_date: string;\r\n}\r\n\r\nexport type YearaIntervalType = {\r\n    apply_date: string\r\n    beneficiary_household: number\r\n    beneficiary_population: number\r\n    id: number\r\n    institutional_connection: number\r\n    public_taps: number\r\n    household_connection: number;\r\n    public_connection: number;\r\n    commercial_connection: number;\r\n}[]\r\n\r\nconst apiDetails = Object.freeze(apiList.waterScheme.getWaterSchemeData);\r\n\r\nexport default function getSchemeDataReducer(state = initialState, action: DefaultAction): DefaultState<YearaIntervalType> {\r\n    const stateCopy = Object.assign({}, state);\r\n    const actionName = apiDetails.actionName;\r\n\r\n    return initDefaultReducer(actionName, action, stateCopy);\r\n}\r\n\r\nexport const getSchemeDataAction = (lang): AppThunk<APIResponseDetail<YearaIntervalType>> => async (dispatch: Dispatch) => {\r\n    return await initDefaultAction(apiDetails, dispatch, { disableSuccessToast: true, pathVariables: { lang } });\r\n};","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\postWaterSchemeData.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\updateWaterSchemeUser.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\deleteWaterSchemeUser.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\getWaterSchemeUser.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\postWaterSchemeUser.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\getYearIntervals.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\deleteWaterSchemeData.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\updateWaterSchemeDetails.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterScheme\\waterSchemeDetails.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\testParamters\\postTestParameters.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\testParamters\\updateTestParameters.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\testParamters\\getTestParameters.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterSupplySchedule\\postSupplySchedule.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterSupplySchedule\\deleteSupplySchedule.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterSupplySchedule\\getWaterSupplySchedule.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\supplyBelts\\updateSupplyBelt.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\supplyBelts\\deleteSupplyBelt.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\supplyBelts\\getWaterSupplyBelts.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\postExpense.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\updateExpense.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\deleteExpense.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\deleteExpenseCategory.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\updateExpenseCategories.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\postExpenseCategories.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\getPreviousExpenditureTotal.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\getExpenditureCategory.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\expenditure\\getExpenditure.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\postIncome.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\deleteIncome.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\updateIncome.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\updateIncomeCategories.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\postIncomeCategories.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\getIncomeExpenseImgae.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\Tariff.tsx",["2488"],"import React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { UncontrolledCollapse } from \"reactstrap\";\r\nimport { getWaterTarrifsAction } from \"store/modules/waterTarrifs/getWaterTarrifs\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport { getUseBasedWaterTarrifsAction } from \"store/modules/waterTarrifs/getUseBasedWaterTarrifs\";\r\n\r\ninterface IProps extends PropsFromRedux {}\r\n\r\nconst Tariff = (props: IProps) => {\r\n  const { t } = useTranslation([\"home\"]);\r\n  React.useEffect(() => {\r\n    if (props.language && props.schemeDetails?.slug) {\r\n      props.getWaterTarrifsAction(props.language, props.schemeDetails.slug, \"fixed\");\r\n      props.getUseBasedWaterTarrifsAction(props.language, props.schemeDetails?.slug);\r\n    }\r\n  }, [props.language, props.schemeDetails]);\r\n\r\n  console.log(props.useBasedWaterTarrifs, \"------\");\r\n\r\n  return (\r\n    <>\r\n      {props.useBasedWaterTarrifs &&\r\n        props.useBasedWaterTarrifs instanceof Array &&\r\n        props.useBasedWaterTarrifs?.length > 0 &&\r\n        props.useBasedWaterTarrifs?.map((item, index) => (\r\n          <div className=\"tariff-rate\" key={index}>\r\n            <div className=\"tariff-header\" id={\"toggler\" + index}>\r\n              <h6>{getNumberByLanguage(item.apply_date)}</h6>\r\n              <p>\r\n                {item.terif_type} <i className=\"ic-line-arrow-down icon\"></i>\r\n              </p>\r\n            </div>\r\n            <UncontrolledCollapse toggler={\"#toggler\" + index}>\r\n              <>\r\n                <div className=\"tariff-content-header\">\r\n                  <h6>{t(\"home:sn\")}</h6>\r\n                  <h6 className=\"mr-5\">{t(\"home:units\")}</h6>\r\n                  <h6>{t(\"home:rate\")}</h6>\r\n                </div>\r\n                {item.used_based_units?.length > 0 ? (\r\n                  item.used_based_units?.map((tariff, i) => (\r\n                    <div className=\"tariff-content\">\r\n                      <p>{getNumberByLanguage(i + 1)}</p>\r\n                      <p>\r\n                        {getNumberByLanguage(tariff.unit_from)}-\r\n                        {getNumberByLanguage(tariff.unit_to)} {t(\"home:units\")}\r\n                      </p>\r\n                      <p>\r\n                        {props.schemeDetails?.currency} {tariff.rate} | {t(\"home:unit\")}\r\n                      </p>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"tariff-content\">\r\n                    <p>-</p>\r\n                    <p>-</p>\r\n                    <p>-</p>\r\n                  </div>\r\n                )}\r\n              </>\r\n            </UncontrolledCollapse>\r\n          </div>\r\n        ))}\r\n\r\n      {props.waterTarrifs &&\r\n        props.waterTarrifs instanceof Array &&\r\n        props.waterTarrifs?.length > 0 &&\r\n        props.waterTarrifs?.map((item, index) => (\r\n          <div className=\"tariff-rate\" key={index}>\r\n            <div className=\"tariff-header\" id={\"toggler\" + index}>\r\n              <h6>{getNumberByLanguage(item.apply_date)}</h6>\r\n              <p>\r\n                {item.terif_type} <i className=\"ic-line-arrow-down icon\"></i>\r\n              </p>\r\n            </div>\r\n\r\n            <UncontrolledCollapse toggler={\"#toggler\" + index}>\r\n              <>\r\n                <div className=\"tariff-content-header\">\r\n                  <h6>{t(\"home:rateInstitution\")}</h6>\r\n                  <p>\r\n                    {props.schemeDetails?.currency} {item?.rate_for_institution}\r\n                  </p>\r\n                </div>\r\n                <div className=\"tariff-content-header\">\r\n                  <h6>{t(\"home:rateHousehold\")}</h6>\r\n\r\n                  <p>\r\n                    {props.schemeDetails?.currency} {item?.rate_for_household}\r\n                  </p>\r\n                </div>\r\n                <div className=\"tariff-content-header\">\r\n                  <h6>{t(\"home:ratePublic\")}</h6>\r\n\r\n                  <p>\r\n                    {props.schemeDetails?.currency} {item?.rate_for_public}\r\n                  </p>\r\n                </div>\r\n                <div className=\"tariff-content-header\">\r\n                  <h6>{t(\"home:rateCommercial\")}</h6>\r\n\r\n                  <p>\r\n                    {props.schemeDetails?.currency} {item?.rate_for_commercial}\r\n                  </p>\r\n                </div>\r\n              </>\r\n            </UncontrolledCollapse>\r\n          </div>\r\n        ))}\r\n\r\n      {props.waterTarrifs?.length < 1 && props.useBasedWaterTarrifs?.length < 1 && (\r\n        <small className=\"d-block text-center\">{t(\"home:noData\")}</small>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  useBasedWaterTarrifs: state.waterTarrifsData.getUseBasedWaterTarrifs.data,\r\n\r\n  waterTarrifs: state.waterTarrifsData.waterTarrifData.data,\r\n  language: state.i18nextData.languageType,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getWaterTarrifsAction: getWaterTarrifsAction,\r\n  getUseBasedWaterTarrifsAction: getUseBasedWaterTarrifsAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Tariff);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\VisualizationGraphThisYear.tsx",["2489","2490","2491"],"import GeneralChart from \"components/UI/Charts/General\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\nimport { getMonthByLanguage, getMonthByLanguageAndScheme, getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { TestParametersType } from \"store/modules/testParamters/getTestParameters\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { chartConfig } from \"./configData\";\r\n\r\ntype SeriesConfig = {\r\n  name: string;\r\n  type: string;\r\n  smooth: boolean;\r\n  data: (string | number)[];\r\n};\r\n\r\ntype ChartDataType = {\r\n  xAxis: (string | number)[];\r\n};\r\n\r\ninterface Props extends PropsFromRedux {\r\n  type?: string;\r\n  compareKey: string;\r\n  defaultSelected: string[];\r\n}\r\n\r\nconst LineChart = (props: Props) => {\r\n  const [testParams, setTestParams] = useState<{\r\n    chemical: TestParametersType;\r\n    others: TestParametersType;\r\n  }>();\r\n\r\n  const [selected, setSelected] = useState<string[]>(props.defaultSelected);\r\n  const [chartData, setChartData] = useState<ChartDataType>();\r\n\r\n  const [seriesData, setSeriesData] = useState<SeriesConfig[]>();\r\n  const [otherSeriesData, setOtherSeriesData] = useState<any[]>();\r\n\r\n  // const [tableData, setTableData] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    if (props.testParams) {\r\n      const params = {\r\n        chemical: props.testParams.filter((item) => item.types === \"Chemical\"),\r\n        others: props.testParams.filter((item) => item.types === \"Other\"),\r\n      };\r\n      setTestParams(params);\r\n    }\r\n  }, [props.testParams]);\r\n\r\n  useEffect(() => {\r\n    if (props.testResult && props.testResult[0]) {\r\n      const newData: ChartDataType = {\r\n        xAxis: props.testResult.map(\r\n          (item) =>\r\n            `${getNumberByLanguage(item[\"year\"])} ${getMonthByLanguageAndScheme(\r\n              item[\"month\"],\r\n              props.scheme?.system_date_format\r\n            )}`\r\n        ),\r\n      };\r\n      setChartData(newData);\r\n    }\r\n  }, [props.testResult]);\r\n\r\n  const handleSelect = (name: string) => {\r\n    if (selected?.includes(name)) {\r\n      const filteredData = selected.filter((item) => item !== name);\r\n      setSelected(filteredData);\r\n    } else {\r\n      setSelected([...selected, name]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const chemicalSeries: any = [];\r\n    const otherCharts: any = [];\r\n\r\n    selected.forEach((item, index) => {\r\n      const testParam = props.testParams?.find((param) => param.parameter_name === item);\r\n      if (testParam?.types === \"Chemical\") {\r\n        chemicalSeries.push({\r\n          name: testParam?.parameter_name,\r\n          type: \"line\",\r\n          smooth: true,\r\n          data: props.testResult.map((item) => {\r\n            return (\r\n              item.data?.find(\r\n                (single) => single.parameter__parameter_name === testParam?.parameter_name\r\n              )?.total_value || 0\r\n            );\r\n          }),\r\n        });\r\n      } else {\r\n        const newChart = Object.assign(\r\n          {},\r\n          {\r\n            ...chartConfig,\r\n            xAxis: {\r\n              type: \"category\",\r\n              boundaryGap: false,\r\n              data: chartData?.xAxis,\r\n              axisLabel: {\r\n                formatter: function (name) {\r\n                  return name?.replace(props.type, \"\");\r\n                },\r\n              },\r\n            },\r\n\r\n            series: [\r\n              {\r\n                name: testParam?.parameter_name,\r\n                type: \"line\",\r\n                smooth: true,\r\n                data: props.testResult.map((item) => {\r\n                  return (\r\n                    item.data?.find(\r\n                      (single) => single.parameter__parameter_name === testParam?.parameter_name\r\n                    )?.total_value || 0\r\n                  );\r\n                }),\r\n              },\r\n            ],\r\n          }\r\n        );\r\n        otherCharts.push(newChart);\r\n      }\r\n    });\r\n\r\n    setSeriesData(chemicalSeries);\r\n    setOtherSeriesData(otherCharts); \r\n\r\n    // const selectedData = selected.map((item) => ({\r\n    //   ...config,\r\n    //   name: props.options.find((opt) => opt.id === item)?.name || \"\",\r\n    //   data: chartData && chartData[item],\r\n    //   itemStyle: {\r\n    //     color: props.options.find((opt) => opt.id === item)?.color || \"\",\r\n    //   },\r\n    // }));\r\n    // const tableData = selected.map((item) => ({\r\n    //   name: props.options.find((opt) => opt.id === item)?.name || \"\",\r\n    //   color: props.options.find((opt) => opt.id === item)?.color || \"\",\r\n    //   data: chartData && chartData[item],\r\n    // }));\r\n    // setSeriesData(selectedData);\r\n    // setTableData(tableData);\r\n  }, [chartData, selected]);\r\n\r\n  const chemicalSeriesOptionData = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n      },\r\n    },\r\n    legend: {\r\n      show: true,\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"5%\",\r\n      bottom: \"3%\",\r\n      //   top: \"6%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      boundaryGap: false,\r\n      data: chartData?.xAxis,\r\n      axisLabel: {\r\n        formatter: function (name) {\r\n          return name?.replace(props.type, \"\");\r\n        },\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n    },\r\n    series: seriesData,\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-9\">\r\n        <GeneralChart minHeight={400} options={chemicalSeriesOptionData} />\r\n\r\n        {otherSeriesData &&\r\n          otherSeriesData.map((item) => <GeneralChart minHeight={400} options={item} />)}\r\n        {/* {tableData?.length > 0 && props.type && (\r\n          <DataTable\r\n            years={chartData?.xAxis}\r\n            tableData={tableData}\r\n            type={props.type}\r\n          />\r\n        )} */}\r\n      </div>\r\n      <div className=\"col-md-3 chartOptions\">\r\n        <h6>Select</h6>\r\n\r\n        <p>Chemicals</p>\r\n\r\n        <ul>\r\n          {testParams?.chemical.map((item) => (\r\n            <li key={item.id}>\r\n              <CustomCheckBox\r\n                id={\"\" + item.id}\r\n                label={item.parameter_name}\r\n                onChange={(e) => handleSelect(\"\" + item.parameter_name)}\r\n                checked={selected.includes(\"\" + item.parameter_name)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"mt-3\">Others</p>\r\n\r\n        <ul>\r\n          {testParams?.others.map((item) => (\r\n            <li key={item.id}>\r\n              <CustomCheckBox\r\n                id={\"\" + item.id}\r\n                label={item.parameter_name}\r\n                onChange={(e) => handleSelect(\"\" + item.parameter_name)}\r\n                checked={selected.includes(\"\" + item.parameter_name)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  testParams: state.testParamtersData.testParametersData.data,\r\n  testResult: state.reportData.waterTestResultsData.data,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(LineChart);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\VisualizationGraph.tsx",["2492","2493"],"import GeneralChart from \"components/UI/Charts/General\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { TestParametersType } from \"store/modules/testParamters/getTestParameters\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { chartConfig } from \"./configData\";\r\n\r\ntype SeriesConfig = {\r\n  name: string;\r\n  type: string;\r\n  smooth: boolean;\r\n  data: (string | number)[];\r\n};\r\n\r\ntype ChartDataType = {\r\n  xAxis: (string | number)[];\r\n};\r\n\r\ninterface Props extends PropsFromRedux {\r\n  type?: string;\r\n  compareKey: string;\r\n  defaultSelected: string[];\r\n}\r\n\r\nconst LineChart = (props: Props) => {\r\n  const [testParams, setTestParams] = useState<{\r\n    chemical: TestParametersType;\r\n    others: TestParametersType;\r\n  }>();\r\n\r\n  const [selected, setSelected] = useState<string[]>([]);\r\n  const [chartData, setChartData] = useState<ChartDataType>();\r\n\r\n  const [seriesData, setSeriesData] = useState<SeriesConfig[]>();\r\n  const [otherSeriesData, setOtherSeriesData] = useState<any[]>();\r\n\r\n  // const [tableData, setTableData] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    if (props.testParams) {\r\n      const params = {\r\n        chemical: props.testParams.filter((item) => item.types === \"Chemical\"),\r\n        others: props.testParams.filter((item) => item.types === \"Other\"),\r\n      };\r\n      setTestParams(params);\r\n    }\r\n  }, [props.testParams]);\r\n\r\n  useEffect(() => {\r\n    if (props.testResult && props.testResult[0]) {\r\n      const newData: ChartDataType = {\r\n        xAxis: props.testResult.map((item) => `${props.type} ${item[props.compareKey]}`),\r\n      };\r\n      setChartData(newData);\r\n    }\r\n  }, [props.testResult]);\r\n\r\n  const handleSelect = (name: string) => {\r\n    if (selected?.includes(name)) {\r\n      const filteredData = selected.filter((item) => item !== name);\r\n      setSelected(filteredData);\r\n    } else {\r\n      setSelected([...selected, name]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const chemicalSeries: any = [];\r\n    const otherCharts: any = [];\r\n\r\n    selected.forEach((item, index) => {\r\n      const testParam = props.testParams?.find((param) => param.parameter_name === item);\r\n      if (testParam?.types === \"Chemical\") {\r\n        chemicalSeries.push({\r\n          name: testParam?.parameter_name,\r\n          type: \"line\",\r\n          smooth: true,\r\n          data: props.testResult.map((item) => {\r\n            return (\r\n              item.data?.find(\r\n                (single) => single.parameter__parameter_name === testParam?.parameter_name\r\n              )?.total_value || 0\r\n            );\r\n          }),\r\n        });\r\n      } else {\r\n        const newChart = Object.assign(\r\n          {},\r\n          {\r\n            ...chartConfig,\r\n            xAxis: {\r\n              type: \"category\",\r\n              boundaryGap: false,\r\n              data: chartData?.xAxis,\r\n              axisLabel: {\r\n                formatter: function (name) {\r\n                  return name?.replace(props.type, \"\");\r\n                },\r\n              },\r\n            },\r\n\r\n            series: [\r\n              {\r\n                name: testParam?.parameter_name,\r\n                type: \"line\",\r\n                smooth: true,\r\n                data: props.testResult?.map((item) => {\r\n                  return (\r\n                    item.data?.find(\r\n                      (single) => single.parameter__parameter_name === testParam?.parameter_name\r\n                    )?.total_value || 0\r\n                  );\r\n                }),\r\n              },\r\n            ],\r\n          }\r\n        );\r\n        otherCharts.push(newChart);\r\n      }\r\n    });\r\n\r\n    setSeriesData(chemicalSeries);\r\n    setOtherSeriesData(otherCharts);\r\n\r\n    console.log(props.testParams, \"**********\");\r\n\r\n    // const selectedData = selected.map((item) => ({\r\n    //   ...config,\r\n    //   name: props.options.find((opt) => opt.id === item)?.name || \"\",\r\n    //   data: chartData && chartData[item],\r\n    //   itemStyle: {\r\n    //     color: props.options.find((opt) => opt.id === item)?.color || \"\",\r\n    //   },\r\n    // }));\r\n    // const tableData = selected.map((item) => ({\r\n    //   name: props.options.find((opt) => opt.id === item)?.name || \"\",\r\n    //   color: props.options.find((opt) => opt.id === item)?.color || \"\",\r\n    //   data: chartData && chartData[item],\r\n    // }));\r\n    // setSeriesData(selectedData);\r\n    // setTableData(tableData);\r\n  }, [chartData, selected]);\r\n\r\n  const chemicalSeriesOptionData = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n      },\r\n    },\r\n    legend: {\r\n      show: true,\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"5%\",\r\n      bottom: \"3%\",\r\n      //   top: \"6%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      boundaryGap: false,\r\n      data: chartData?.xAxis,\r\n      axisLabel: {\r\n        formatter: function (name) {\r\n          return name?.replace(props.type, \"\");\r\n        },\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n    },\r\n    series: seriesData,\r\n  };\r\n\r\n  console.log(chartData, \"seeeflleede\");\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-9\">\r\n        <GeneralChart minHeight={400} options={chemicalSeriesOptionData} />\r\n\r\n        {otherSeriesData &&\r\n          otherSeriesData.map((item) => <GeneralChart minHeight={400} options={item} />)}\r\n        {/* {tableData?.length > 0 && props.type && (\r\n          <DataTable\r\n            years={chartData?.xAxis}\r\n            tableData={tableData}\r\n            type={props.type}\r\n          />\r\n        )} */}\r\n      </div>\r\n      <div className=\"col-md-3 chartOptions\">\r\n        <h6>Select</h6>\r\n\r\n        <p>Chemicals</p>\r\n\r\n        <ul>\r\n          {testParams?.chemical.map((item) => (\r\n            <li key={item.id}>\r\n              <CustomCheckBox\r\n                id={\"\" + item.id}\r\n                label={item.parameter_name}\r\n                onChange={(e) => handleSelect(\"\" + item.parameter_name)}\r\n                checked={selected.includes(\"\" + item.parameter_name)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"mt-3\">Others</p>\r\n\r\n        <ul>\r\n          {testParams?.others.map((item) => (\r\n            <li key={item.id}>\r\n              <CustomCheckBox\r\n                id={\"\" + item.id}\r\n                label={item.parameter_name}\r\n                onChange={(e) => handleSelect(\"\" + item.parameter_name)}\r\n                checked={selected.includes(\"\" + item.parameter_name)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  testParams: state.testParamtersData.testParametersData.data,\r\n  testResult: state.reportData.waterTestResultsData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(LineChart);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashBookByDate\\CashbookExpenditureTable.tsx",["2494","2495","2496"],"import { CameraIcon } from \"assets/images/xd\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport Slider from \"components/UI/Slider\";\r\nimport { getMonthByLanguageAndScheme } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { geAllExpenditureAction } from \"store/modules/expenditure/getAllExpenditure\";\r\nimport { getExpenditureCategoryAction } from \"store/modules/expenditure/getExpenditureCategory\";\r\nimport { getPreviousExpenditureTotalAction } from \"store/modules/expenditure/getPreviousExpenditureTotal\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  activeDate: string;\r\n  endDate: string;\r\n  activeTab: string;\r\n}\r\n\r\nconst CashbookExpenditureTable = (props: Props) => {\r\n  const {\r\n    expenditureData,\r\n    expenditureCategories,\r\n    language,\r\n    schemeSlug,\r\n    schemeDetails,\r\n    previousExpenditureTotal,\r\n    getExpenditureAction,\r\n    getExpenditureCategoryAction,\r\n    getPreviousExpenditureTotalAction,\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  useEffect(() => {\r\n    if (language && schemeSlug && schemeDetails && props.activeTab) {\r\n      if (props.activeTab === \"2\") {\r\n        getExpenditureAction(language, schemeSlug, props.activeDate, props.endDate);\r\n        getExpenditureCategoryAction(schemeSlug);\r\n      }\r\n    }\r\n  }, [language, props.activeDate, props.endDate, schemeSlug, schemeDetails, props.activeTab]);\r\n\r\n  const { t } = useTranslation([\"cashbook\"]);\r\n\r\n  console.log(schemeDetails, \"schemeDetails\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        <Table className=\"table-02 table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"cashbook:date\")}</th>\r\n              <th>{t(\"cashbook:description\")}</th>\r\n              {sortAplabetically(expenditureCategories, \"name\")?.map((incomeCategory, index) => (\r\n                <th key={index}>{incomeCategory.name}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {expenditureData?.map((income, index) => (\r\n              <tr onClick={toggle} key={index}>\r\n                <td>{language === \"en\" ? income.date : income.date_np}</td>\r\n                <td>{income.title}</td>\r\n                {sortAplabetically(expenditureCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  if (income.category.name === incomeCategory.name) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {income.income_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n              </tr>\r\n            ))}\r\n\r\n            <tr>\r\n              <td></td>\r\n              <td>{t(\"cashbook:total\")}</td>\r\n              {sortAplabetically(expenditureCategories, \"name\")?.map((incomeCategory, index) => {\r\n                const findData = previousExpenditureTotal?.present_month_data?.find(\r\n                  (prev) => prev.expense_category_name === incomeCategory.name\r\n                );\r\n                if (findData) {\r\n                  return (\r\n                    <td key={index}>\r\n                      {props.schemeDetails?.currency} {findData.total_expense_amount}\r\n                    </td>\r\n                  );\r\n                } else {\r\n                  return <td key={index}>-</td>;\r\n                }\r\n              })}\r\n            </tr>\r\n\r\n            {props.sliderImages &&\r\n              props.sliderImages instanceof Array &&\r\n              props.sliderImages?.length > 0 && (\r\n                <>\r\n                  <tr role=\"button\" onClick={() => setModal(true)}>\r\n                    <td>\r\n                      <img src={CameraIcon} alt=\"\" /> &nbsp;&nbsp; Paper Cashbook Image -{\" \"}\r\n                      {getMonthByLanguageAndScheme(\r\n                        props.activeDate?.split(\"-\")[1],\r\n                        props.schemeDetails?.system_date_format\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </>\r\n              )}\r\n          </tbody>\r\n        </Table>\r\n\r\n        <GeneralModal open={modal} toggle={toggle}>\r\n          <Slider />\r\n        </GeneralModal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  sliderImages: state.incomeData.getIncomeExpenseImgae.data,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  expenditureData: state.expenditureData.getAllExpenditureData.data,\r\n  expenditureCategories: state.expenditureData.getExpenditureCategory.data,\r\n  previousExpenditureTotal: state.expenditureData.getPreviousExpenditureTotal.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getExpenditureAction: geAllExpenditureAction,\r\n  getExpenditureCategoryAction: getExpenditureCategoryAction,\r\n  getPreviousExpenditureTotalAction: getPreviousExpenditureTotalAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CashbookExpenditureTable);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\Visualization\\LineChart\\LineChartThisYear.tsx",["2497","2498"],"import GeneralChart from \"components/UI/Charts/General\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\nimport { getFiscalYearData, getMonthByLanguageAndScheme, getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getYearFromDate } from \"utils/utilsFunction/date-converter\";\r\nimport DataTable from \"./DataTable\";\r\n\r\nconst config = {\r\n  name: \"\",\r\n  type: \"line\",\r\n  smooth: true,\r\n  data: [],\r\n};\r\n\r\ntype SeriesConfig = {\r\n  name: string;\r\n  type: string;\r\n  smooth: boolean;\r\n  data: (string | number)[];\r\n};\r\n\r\ntype ChartDataType = {\r\n  years: (string | number)[];\r\n  actual_income?: (string | number)[];\r\n  actual_expense?: (string | number)[];\r\n  actual_cf?: (string | number)[];\r\n  expected_income?: (string | number)[];\r\n  expected_expense?: (string | number)[];\r\n  expected_cf?: (string | number)[];\r\n};\r\n\r\ninterface Props extends PropsFromRedux {\r\n  selected: string[];\r\n  setSelected: any\r\n}\r\n\r\nconst LineChartThisYear = (props: Props) => {\r\n  const { selected , setSelected} = props;\r\n  \r\n  const { t } = useTranslation();\r\n  const [chartData, setChartData] = useState<ChartDataType>();\r\n\r\n  const [seriesData, setSeriesData] = useState<SeriesConfig[]>();\r\n\r\n  const [tableData, setTableData] = useState<any>();\r\n\r\n  const options = [\r\n    {\r\n      key: 1,\r\n      id: \"actual_income\",\r\n      name: `${t(\"home:actual\")} ${t(\"home:income\")}`,\r\n      color: \"#4DFFFF\",\r\n    },\r\n    {\r\n      key: 2,\r\n      id: \"actual_expense\",\r\n      name: `${t(\"home:actual\")} ${t(\"home:expense\")}`,\r\n      color: \"#FF4D4D\",\r\n    },\r\n    {\r\n      key: 3,\r\n      id: \"actual_cf\",\r\n      name: `${t(\"home:accf\")}`,\r\n      color: \"#c47df7\",\r\n    },\r\n    {\r\n      key: 4,\r\n      id: \"expected_income\",\r\n      name: `${t(\"home:expected\")} ${t(\"home:income\")}`,\r\n      color: \"#fbc757\",\r\n    },\r\n    {\r\n      key: 5,\r\n      id: \"expected_expense\",\r\n      name: `${t(\"home:expected\")} ${t(\"home:expense\")}`,\r\n      color: \"#041C44\",\r\n    },\r\n    {\r\n      key: 6,\r\n      id: \"expected_cf\",\r\n      name: `${t(\"home:eccf\")}`,\r\n      color: \"#1d9a36\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (props.schemeDetails && props.intervalData) {\r\n      const fiscalYearArray = getFiscalYearData(\r\n        props.intervalData,\r\n        props.schemeDetails?.system_date_format\r\n      );\r\n\r\n      const filterBasedOnkey = (array: any, monthKey: string, key: string, value: string) => {\r\n        return fiscalYearArray?.map((item) => {\r\n          const findValue =\r\n            array &&\r\n            array[key]?.find((inc) => {\r\n              return +inc[monthKey] < 10\r\n                ? +inc[monthKey]?.toString()?.replace(\"0\", \"\") === +item\r\n                : +inc[monthKey] === +item;\r\n            });\r\n          return {\r\n            value: findValue ? findValue[value] : 0,\r\n          };\r\n        });\r\n      };\r\n\r\n      const newData: ChartDataType = {\r\n        years: fiscalYearArray?.map((item) => {\r\n          return getMonthByLanguageAndScheme(item, props.schemeDetails?.system_date_format);\r\n        }),\r\n        actual_income: filterBasedOnkey(\r\n          props.incomeExpenseData,\r\n          \"date__month\",\r\n          \"income\",\r\n          \"total_amount\"\r\n        ),\r\n        actual_expense: filterBasedOnkey(\r\n          props.incomeExpenseData,\r\n          \"date__month\",\r\n          \"expense\",\r\n          \"total_amount\"\r\n        ),\r\n        actual_cf: props.incomeExpenseData?.cf?.map((item) => item.cf),\r\n        expected_income: filterBasedOnkey(props.expenseCF, \"month\", \"monthly_income\", \"income\"),\r\n        expected_expense: filterBasedOnkey(props.expenseCF, \"month\", \"monthly_expense\", \"expense\"),\r\n        expected_cf: filterBasedOnkey(props.expenseCF, \"month\", \"monthly_cf\", \"cf\"),\r\n      };\r\n      setChartData(newData);\r\n    }\r\n  }, [\r\n    props.incomeExpenseData,\r\n    props.actualCF,\r\n    props.expenseCF,\r\n    props.schemeDetails,\r\n    props.intervalData,\r\n  ]);\r\n\r\n  const handleSelect = (name: string) => {\r\n    if (selected?.includes(name)) {\r\n      const filteredData = selected.filter((item) => item !== name);\r\n      setSelected(filteredData);\r\n    } else {\r\n      setSelected([...selected, name]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selectedData = selected.map((item) => ({\r\n      ...config,\r\n      name: options.find((opt) => opt.id === item)?.name || \"\",\r\n      data: chartData && chartData[item],\r\n      itemStyle: { color: options.find((opt) => opt.id === item)?.color || \"\" },\r\n    }));\r\n\r\n    const tableData = selected.map((item) => ({\r\n      name: options.find((opt) => opt.id === item)?.name || \"\",\r\n      color: options.find((opt) => opt.id === item)?.color || \"\",\r\n      data: chartData && chartData[item],\r\n    }));\r\n\r\n    console.log(selected, chartData, \"dadadasdasda\");\r\n\r\n    setSeriesData(selectedData);\r\n    setTableData(tableData);\r\n  }, [chartData, selected]);\r\n\r\n  const optionData = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n      },\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"5%\",\r\n      bottom: \"3%\",\r\n      top: \"6%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      boundaryGap: false,\r\n      data: chartData?.years,\r\n      axisLabel: {\r\n        formatter: function (name) {\r\n          return name?.split(\"-\")[0]?.replace(\"Year\", \"\");\r\n        },\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      axisLabel: {\r\n        formatter: function (name) {\r\n          return getNumberByLanguage(name);\r\n        },\r\n      },\r\n    },\r\n    series: seriesData,\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-9\">\r\n        <GeneralChart minHeight={300} options={optionData} />\r\n        {tableData?.length > 0 && <DataTable months years={chartData?.years} tableData={tableData} />}\r\n      </div>\r\n      <div className=\"col-md-3 chartOptions\">\r\n        <h6>Select</h6>\r\n        <p>Visualization Parameters</p>\r\n\r\n        <ul>\r\n          {options.map((item) => (\r\n            <li key={item.id}>\r\n              <CustomCheckBox\r\n                id={\"\" + item.key}\r\n                label={item.name}\r\n                onChange={(e) => handleSelect(item.id)}\r\n                checked={selected.includes(item.id)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\r\n  actualCF: state.reportData.actualCumulativeCashFlowData.data,\r\n  expenseCF: state.reportData.expenseCumulativeCashFlowData.data,\r\n  intervalData: state.waterSchemeData.getYearIntervals.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(LineChartThisYear);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\CashBookByDate\\CashbookExpenditureTable.tsx",["2499","2500","2501","2502"],"import { CameraIcon } from \"assets/images/xd\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport Slider from \"components/UI/Slider\";\r\nimport { getMonthByLanguageAndScheme } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { geAllExpenditureAction } from \"store/modules/expenditure/getAllExpenditure\";\r\nimport { getExpenditureCategoryAction } from \"store/modules/expenditure/getExpenditureCategory\";\r\nimport { getPreviousExpenditureTotalAction } from \"store/modules/expenditure/getPreviousExpenditureTotal\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  activeDate: string;\r\n  endDate: string;\r\n  activeTab: string;\r\n}\r\n\r\nconst CashbookExpenditureTable = (props: Props) => {\r\n  const {\r\n    expenditureData,\r\n    expenditureCategories,\r\n    language,\r\n    schemeSlug,\r\n    schemeDetails,\r\n    previousExpenditureTotal,\r\n    getExpenditureAction,\r\n    getExpenditureCategoryAction,\r\n    getPreviousExpenditureTotalAction,\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  useEffect(() => {\r\n    if (language && schemeSlug && schemeDetails && props.activeTab) {\r\n      if (props.activeTab === \"2\") {\r\n        getExpenditureAction(language, schemeSlug, props.activeDate, props.endDate);\r\n        getExpenditureCategoryAction(schemeSlug);\r\n      }\r\n    }\r\n  }, [language, props.activeDate, props.endDate, schemeSlug, schemeDetails, props.activeTab]);\r\n\r\n  const { t } = useTranslation([\"cashbook\"]);\r\n\r\n  console.log(schemeDetails, \"schemeDetails\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        <div className=\"data-table table-responsive\">\r\n          <table className=\"table mt-2\">\r\n            <thead>\r\n              <tr>\r\n                <th>{t(\"cashbook:date\")}</th>\r\n                <th>{t(\"cashbook:description\")}</th>\r\n                {sortAplabetically(expenditureCategories, \"name\")?.map((incomeCategory, index) => (\r\n                  <th key={index}>{incomeCategory.name}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {expenditureData?.map((income, index) => (\r\n                <tr onClick={toggle} key={index}>\r\n                  <td>{language === \"en\" ? income.date : income.date_np}</td>\r\n                  <td>{income.title}</td>\r\n                  {sortAplabetically(expenditureCategories, \"name\")?.map(\r\n                    (incomeCategory, index) => {\r\n                      if (income.category.name === incomeCategory.name) {\r\n                        return (\r\n                          <td key={index}>\r\n                            {props.schemeDetails?.currency} {income.income_amount}\r\n                          </td>\r\n                        );\r\n                      } else {\r\n                        return <td key={index}>-</td>;\r\n                      }\r\n                    }\r\n                  )}\r\n                </tr>\r\n              ))}\r\n\r\n              <tr>\r\n                <td></td>\r\n                <td>{t(\"cashbook:total\")}</td>\r\n                {sortAplabetically(expenditureCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  const findData = previousExpenditureTotal?.present_month_data?.find(\r\n                    (prev) => prev.expense_category_name === incomeCategory.name\r\n                  );\r\n                  if (findData) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {findData.total_expense_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n              </tr>\r\n\r\n              {props.sliderImages &&\r\n                props.sliderImages instanceof Array &&\r\n                props.sliderImages?.length > 0 && (\r\n                  <>\r\n                    <tr role=\"button\" onClick={() => setModal(true)}>\r\n                      <td>\r\n                        <img src={CameraIcon} alt=\"\" /> &nbsp;&nbsp; Paper Cashbook Image -{\" \"}\r\n                        {getMonthByLanguageAndScheme(\r\n                          props.activeDate?.split(\"-\")[1],\r\n                          props.schemeDetails?.system_date_format\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </>\r\n                )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <GeneralModal open={modal} toggle={toggle}>\r\n          <Slider />\r\n        </GeneralModal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  sliderImages: state.incomeData.getIncomeExpenseImgae.data,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  expenditureData: state.expenditureData.getAllExpenditureData.data,\r\n  expenditureCategories: state.expenditureData.getExpenditureCategory.data,\r\n  previousExpenditureTotal: state.expenditureData.getPreviousExpenditureTotal.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getExpenditureAction: geAllExpenditureAction,\r\n  getExpenditureCategoryAction: getExpenditureCategoryAction,\r\n  getPreviousExpenditureTotalAction: getPreviousExpenditureTotalAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CashbookExpenditureTable);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\CashBookByDate\\CashbookTable.tsx",["2503","2504","2505"],"import { CameraIcon } from \"assets/images/xd\";\r\nimport { ADToBS } from \"components/React/Datepicker/Datepickerutils\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport Slider from \"components/UI/Slider\";\r\nimport { getMonthByLanguageAndScheme } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { geAllIncomeAction } from \"store/modules/income/getAllIncome\";\r\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\r\nimport { getIncomeExpenseImageAction } from \"store/modules/income/getIncomeExpenseImgae\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  activeDate: string;\r\n  endDate: string;\r\n  activeTab: string;\r\n}\r\n\r\nconst CashbookTable = (props: Props) => {\r\n  const { t } = useTranslation([\"cashbook\"]);\r\n\r\n  const {\r\n    incomeData,\r\n    incomeCategories,\r\n    language,\r\n    schemeSlug,\r\n    schemeDetails,\r\n    previousIncomeTotal,\r\n    geAllIncomeAction,\r\n    getIncomeCategoryAction,\r\n    getIncomeExpenseImageAction,\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      language &&\r\n      schemeSlug &&\r\n      schemeDetails &&\r\n      props.activeTab &&\r\n      props.activeDate &&\r\n      props.endDate\r\n    ) {\r\n      if (props.activeTab === \"1\") {\r\n        geAllIncomeAction(language, schemeSlug, props.activeDate, props.endDate);\r\n        getIncomeCategoryAction(schemeSlug);\r\n        getIncomeExpenseImageAction(language, schemeSlug, props.activeDate || ADToBS(new Date()));\r\n      }\r\n    }\r\n  }, [language, props.activeDate, props.endDate, schemeSlug, schemeDetails, props.activeTab]);\r\n\r\n  console.log(props.activeDate, props.activeDate, \"<<<<<<<<<\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        <div className=\"data-table table-responsive\">\r\n          <table className=\"table mt-2\">\r\n            <thead>\r\n              <tr>\r\n                <th>{t(\"cashbook:date\")}</th>\r\n                <th>{t(\"cashbook:description\")}</th>\r\n                {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => (\r\n                  <th key={index}>{incomeCategory.name}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {incomeData?.map((income, index) => (\r\n                <tr key={index}>\r\n                  <td>{language === \"en\" ? income.date : income.date_np}</td>\r\n                  <td>{income.title}</td>\r\n                  {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                    if (income.category.name === incomeCategory.name) {\r\n                      return (\r\n                        <td key={index}>\r\n                          {props.schemeDetails?.currency} {income.income_amount}\r\n                        </td>\r\n                      );\r\n                    } else {\r\n                      return <td key={index}>-</td>;\r\n                    }\r\n                  })}\r\n                </tr>\r\n              ))}\r\n\r\n              <tr>\r\n                <td></td>\r\n                <td>{t(\"cashbook:total\")}</td>\r\n                {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  const findData = previousIncomeTotal?.present_month_data?.find(\r\n                    (prev) => prev.income_category_name === incomeCategory.name\r\n                  );\r\n                  if (findData) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {findData.total_income_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n              </tr>\r\n              {props.sliderImages &&\r\n                props.sliderImages instanceof Array &&\r\n                props.sliderImages?.length > 0 && (\r\n                  <>\r\n                    <tr role=\"button\" onClick={() => setModal(true)}>\r\n                      <td>\r\n                        <img src={CameraIcon} alt=\"\" /> &nbsp;&nbsp; Paper Cashbook Image -{\" \"}\r\n                        {getMonthByLanguageAndScheme(\r\n                          props.activeDate?.split(\"-\")[1],\r\n                          props.schemeDetails?.system_date_format\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </>\r\n                )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <GeneralModal open={modal} toggle={toggle}>\r\n          <Slider />\r\n        </GeneralModal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  sliderImages: state.incomeData.getIncomeExpenseImgae.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  incomeData: state.incomeData.getAllIncomeData.data,\r\n  incomeCategories: state.incomeData.getIncomeCategory.data,\r\n  previousIncomeTotal: state.incomeData.getPreviousIncomeTotal.data,\r\n  incomeExpenseImage: state.incomeData.getIncomeExpenseImgae.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  geAllIncomeAction: geAllIncomeAction,\r\n  getIncomeCategoryAction: getIncomeCategoryAction,\r\n  getIncomeExpenseImageAction: getIncomeExpenseImageAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CashbookTable);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\CashbookTable.tsx",["2506","2507"],"import { DeleteIcon, EditIconDark } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { deleteIncomeAction } from \"store/modules/income/deleteIncome\";\r\nimport { getIncomeAction } from \"store/modules/income/getIcome\";\r\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\r\nimport { getPreviousIncomeTotalAction } from \"store/modules/income/getPreviousIncomeTotal\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\r\nimport IncomeModal from \"./IncomeForm\";\r\nimport ManageIncomeCatagories from \"./ManageIncomeCategories\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  activeDate: string;\r\n  activeTab: string;\r\n}\r\n\r\nconst CashbookTable = (props: Props) => {\r\n  const {\r\n    incomeData,\r\n    incomeCategories,\r\n    language,\r\n    schemeSlug,\r\n    schemeDetails,\r\n    previousIncomeTotal,\r\n    getIncomeAction,\r\n    getIncomeCategoryAction,\r\n    getPreviousIncomeTotalAction,\r\n  } = props;\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } =\r\n    useDeleteConfirmation();\r\n\r\n  const [editData, setEditData] = useState<any>();\r\n  const [categoriesModal, CategoriesModal] = useState(false);\r\n  const [incomeModal, setIncomeModal] = useState(false);\r\n  const toggle = () => CategoriesModal(!categoriesModal);\r\n\r\n  const toggleIncomeModal = () => setIncomeModal(!incomeModal);\r\n\r\n  useEffect(() => {\r\n    if (language && schemeSlug && schemeDetails && props.activeTab) {\r\n      if (props.activeTab === \"1\") {\r\n        getIncomeAction(\r\n          language,\r\n          schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n        getIncomeCategoryAction(schemeSlug);\r\n        getPreviousIncomeTotalAction(\r\n          language,\r\n          schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n      }\r\n    }\r\n  }, [language, schemeSlug, props.activeDate, schemeDetails, props.activeTab]);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      const response = await props.deleteIncomeAction(editId);\r\n      if (response.status === 204) {\r\n        toast.success(t(\"home:deleteSuccess\"));\r\n        props.getIncomeAction(props.language, props.schemeSlug);\r\n        resetDeleteData();\r\n      } else {\r\n        toast.error(t(\"home:deleteError\"));\r\n        resetDeleteData();\r\n      }\r\n    } catch (error) {\r\n      console.log(error, \"error\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (data) => {\r\n    setEditData(data);\r\n    toggleIncomeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        <div className=\"row my-3\">\r\n          <div className=\"col-6 text-left\">\r\n            <Button\r\n              className=\"btn custom-btn  mr-3\"\r\n              text={t(\"finance:addTxn\")}\r\n              onClick={toggleIncomeModal}\r\n              // disabled={authorizing}\r\n              // loading={authorizing}\r\n            />\r\n          </div>\r\n          <div className=\"col-6 text-right\">\r\n            <Button\r\n              className=\"btn custom-btn  mr-3\"\r\n              text={t(\"finance:manageIC\")}\r\n              // disabled={authorizing}\r\n              // loading={authorizing}\r\n              onClick={toggle}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"data-table table-responsive\">\r\n          <table className=\"table mt-2\">\r\n            <thead>\r\n              <tr>\r\n                <th>{t(\"cashbook:date\")}</th>\r\n                <th>{t(\"cashbook:description\")}</th>\r\n                {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => (\r\n                  <th key={index}>{incomeCategory.name}</th>\r\n                ))}\r\n                <th className=\"text-center\">{t(\"home:action\")}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr role=\"button\">\r\n                <td></td>\r\n                <td>{t(\"cashbook:previous-month-data\")}</td>\r\n                {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  const findData = previousIncomeTotal?.previous_month_data?.find(\r\n                    (prev) => prev.income_category_name === incomeCategory.name\r\n                  );\r\n                  if (findData) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {findData.total_income_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n              </tr>\r\n\r\n              {incomeData?.map((income, index) => (\r\n                <tr role=\"button\" key={index}>\r\n                  <td>{language === \"en\" ? income.date : income.date_np}</td>\r\n                  <td>{income.title}</td>\r\n                  {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                    if (income.category.name === incomeCategory.name) {\r\n                      return (\r\n                        <td key={index}>\r\n                          {props.schemeDetails?.currency} {income.income_amount}\r\n                        </td>\r\n                      );\r\n                    } else {\r\n                      return <td key={index}>-</td>;\r\n                    }\r\n                  })}\r\n                  <td className=\"action\">\r\n                    <div\r\n                      role=\"button\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleEdit(income);\r\n                      }}\r\n                    >\r\n                      <img src={EditIconDark} alt=\"\" />\r\n                    </div>\r\n                    <div\r\n                      role=\"button\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleDeleteClick(income.id);\r\n                      }}\r\n                    >\r\n                      <img src={DeleteIcon} alt=\"\" />\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n\r\n              <tr role=\"button\">\r\n                <td></td>\r\n                <td>{t(\"cashbook:total\")}</td>\r\n                {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  const findData = previousIncomeTotal?.present_month_data?.find(\r\n                    (prev) => prev.income_category_name === incomeCategory.name\r\n                  );\r\n                  if (findData) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {findData.total_income_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n                <td></td>\r\n              </tr>\r\n\r\n              {/* <tr role=\"button\" onClick={() => setModal(true)}>\r\n              <td>\r\n                <img src={CameraIcon} alt=\"\" /> &nbsp;&nbsp; Paper Cashbook Image\r\n              </td>\r\n            </tr> */}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <GeneralModal\r\n          title={t(\"home:addEdit\") + \" \" + t(\"finance:incomeCategories\")}\r\n          size=\"lg\"\r\n          open={categoriesModal}\r\n          toggle={toggle}\r\n        >\r\n          <ManageIncomeCatagories />\r\n        </GeneralModal>\r\n        <GeneralModal\r\n          title={t(\"home:addEdit\") + \" \" + t(\"home:income\")}\r\n          size=\"lg\"\r\n          open={incomeModal}\r\n          toggle={() => {\r\n            if (incomeModal) {\r\n              setEditData(null);\r\n            }\r\n            toggleIncomeModal();\r\n          }}\r\n        >\r\n          <IncomeModal\r\n            editData={editData}\r\n            setEditData={setEditData}\r\n            toggle={setIncomeModal}\r\n            activeDate={props.activeDate}\r\n          />\r\n        </GeneralModal>\r\n\r\n        <ConfirmationModal\r\n          open={modal}\r\n          handleModal={() => {\r\n            toggleModal();\r\n          }}\r\n          handleConfirmClick={() => handleDelete()}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  incomeData: state.incomeData.getIncomeData.data,\r\n  incomeCategories: state.incomeData.getIncomeCategory.data,\r\n  previousIncomeTotal: state.incomeData.getPreviousIncomeTotal.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getIncomeAction: getIncomeAction,\r\n  deleteIncomeAction: deleteIncomeAction,\r\n  getIncomeCategoryAction: getIncomeCategoryAction,\r\n  getPreviousIncomeTotalAction: getPreviousIncomeTotalAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CashbookTable);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\CashbookExpenditureTable.tsx",["2508","2509"],"import { DeleteIcon, EditIconDark } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { deleteExpenditureAction } from \"store/modules/expenditure/deleteExpense\";\r\nimport { getExpenditureAction } from \"store/modules/expenditure/getExpenditure\";\r\nimport { getExpenditureCategoryAction } from \"store/modules/expenditure/getExpenditureCategory\";\r\nimport { getPreviousExpenditureTotalAction } from \"store/modules/expenditure/getPreviousExpenditureTotal\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport ManageExpenditureCatagories from \"./ManageExpenditureCategories\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  activeDate: string;\r\n  activeTab: string;\r\n}\r\n\r\nconst CashbookExpenditureTable = (props: Props) => {\r\n  const [editData, setEditData] = useState<any>();\r\n  const [categoriesModal, setCategoriesModal] = useState(false);\r\n  const [expenseModal, setExpenseModal] = useState(false);\r\n  const toggle = () => setCategoriesModal(!categoriesModal);\r\n  const toggleIncomeModal = () => {\r\n    setExpenseModal(!expenseModal);\r\n  };\r\n\r\n  const {\r\n    expenditureData,\r\n    expenditureCategories,\r\n    language,\r\n    schemeSlug,\r\n    schemeDetails,\r\n    previousExpenditureTotal,\r\n    getExpenditureAction,\r\n    getExpenditureCategoryAction,\r\n    getPreviousExpenditureTotalAction,\r\n  } = props;\r\n\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } =\r\n    useDeleteConfirmation();\r\n\r\n  // 2020 = 2020\r\n  // props.activeDate?.split(\"-\")[1] =9\r\n\r\n  useEffect(() => {\r\n    if (language && schemeSlug && schemeDetails && props.activeTab) {\r\n      if (props.activeTab === \"2\") {\r\n        getExpenditureAction(\r\n          language,\r\n          schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n        getExpenditureCategoryAction(schemeSlug);\r\n        getPreviousExpenditureTotalAction(\r\n          language,\r\n          schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n      }\r\n    }\r\n  }, [language, props.activeDate, schemeSlug, schemeDetails, props.activeTab]);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      const response = await props.deleteExpenditureAction(editId);\r\n      if (response.status === 204) {\r\n        toast.success(t(\"home:deleteSuccess\"));\r\n        props.getExpenditureAction(props.language, props.schemeSlug);\r\n        resetDeleteData();\r\n      } else {\r\n        toast.error(t(\"home:deleteError\"));\r\n        resetDeleteData();\r\n      }\r\n    } catch (error) {\r\n      console.log(error, \"error\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (data) => {\r\n    setEditData(data);\r\n    toggleIncomeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        <div className=\"row my-3\">\r\n          <div className=\"col-6 text-left\">\r\n            <Button\r\n              className=\"btn custom-btn  mr-3\"\r\n              text={t(\"finance:addTxn\")}\r\n              onClick={toggleIncomeModal}\r\n            />\r\n          </div>\r\n          <div className=\"col-6 text-right\">\r\n            <Button\r\n              className=\"btn custom-btn  mr-3\"\r\n              text={t(\"finance:manageEC\")}\r\n              // disabled={authorizing}\r\n              // loading={authorizing}\r\n              onClick={toggle}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"data-table table-responsive\">\r\n          <table className=\"table mt-2\">\r\n            <thead>\r\n              <tr>\r\n                <th>{t(\"cashbook:date\")}</th>\r\n                <th>{t(\"cashbook:description\")}</th>\r\n                {sortAplabetically(expenditureCategories, \"name\")?.map((category, index) => (\r\n                  <th key={index}>{category.name}</th>\r\n                ))}\r\n                <th className=\"text-center\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td></td>\r\n                <td>{t(\"cashbook:from-prev-month\")}</td>\r\n                {sortAplabetically(expenditureCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  const findData = previousExpenditureTotal?.previous_month_data?.find(\r\n                    (prev) => prev.expense_category_name === incomeCategory.name\r\n                  );\r\n                  if (findData) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {findData.total_expense_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n              </tr>\r\n\r\n              {expenditureData?.map((income, index) => (\r\n                <tr key={index}>\r\n                  <td>{language === \"en\" ? income.date : income.date_np}</td>\r\n                  <td>{income.title}</td>\r\n                  {sortAplabetically(expenditureCategories, \"name\")?.map(\r\n                    (incomeCategory, index) => {\r\n                      if (income.category.name === incomeCategory.name) {\r\n                        return (\r\n                          <td key={index}>\r\n                            {props.schemeDetails?.currency} {income.income_amount}\r\n                          </td>\r\n                        );\r\n                      } else {\r\n                        return <td key={index}>-</td>;\r\n                      }\r\n                    }\r\n                  )}\r\n                  <td className=\"action\">\r\n                    <div\r\n                      role=\"button\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleEdit(income);\r\n                      }}\r\n                    >\r\n                      <img src={EditIconDark} alt=\"\" />\r\n                    </div>\r\n                    <div\r\n                      role=\"button\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleDeleteClick(income.id);\r\n                      }}\r\n                    >\r\n                      <img src={DeleteIcon} alt=\"\" />\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n\r\n              <tr>\r\n                <td></td>\r\n                <td>{t(\"cashbook:total\")}</td>\r\n                {sortAplabetically(expenditureCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  const findData = previousExpenditureTotal?.present_month_data?.find(\r\n                    (prev) => prev.expense_category_name === incomeCategory.name\r\n                  );\r\n                  if (findData) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {findData.total_expense_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n                <td></td>\r\n              </tr>\r\n\r\n              {/* {props.sliderImages &&\r\n              props.sliderImages instanceof Array &&\r\n              props.sliderImages?.length > 0 && (\r\n                <>\r\n                  <tr role=\"button\" onClick={() => setCategoriesModal(true)}>\r\n                    <td>\r\n                      <img src={CameraIcon} alt=\"\" /> &nbsp;&nbsp; Paper Cashbook Image -{\" \"}\r\n                      {getMonthByLanguageAndScheme(\r\n                        \"\" + 9,\r\n                        // getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1],\r\n                        props.schemeDetails?.system_date_format\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </>\r\n              )} */}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <GeneralModal\r\n          title={t(\"finance:manageEC\")}\r\n          open={categoriesModal}\r\n          toggle={toggle}\r\n          size=\"lg\"\r\n        >\r\n          <ManageExpenditureCatagories />\r\n        </GeneralModal>\r\n\r\n        <GeneralModal\r\n          title={t(\"home:addEdit\") + \" \" + t(\"home:expense\")}\r\n          size=\"lg\"\r\n          open={expenseModal}\r\n          toggle={() => {\r\n            if (expenseModal) {\r\n              setEditData(null);\r\n            }\r\n            toggleIncomeModal();\r\n          }}\r\n        >\r\n          <ExpenseForm\r\n            editData={editData}\r\n            setEditData={setEditData}\r\n            toggle={setExpenseModal}\r\n            activeDate={props.activeDate}\r\n          />\r\n        </GeneralModal>\r\n\r\n        <ConfirmationModal\r\n          open={modal}\r\n          handleModal={() => toggleModal()}\r\n          handleConfirmClick={() => handleDelete()}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  sliderImages: state.incomeData.getIncomeExpenseImgae.data,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  expenditureData: state.expenditureData.getExpenditureData.data,\r\n  expenditureCategories: state.expenditureData.getExpenditureCategory.data,\r\n  previousExpenditureTotal: state.expenditureData.getPreviousExpenditureTotal.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getExpenditureAction: getExpenditureAction,\r\n  deleteExpenditureAction: deleteExpenditureAction,\r\n  getExpenditureCategoryAction: getExpenditureCategoryAction,\r\n  getPreviousExpenditureTotalAction: getPreviousExpenditureTotalAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CashbookExpenditureTable);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\datas.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\utils\\utilsFunction\\date-converter.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Datepicker.tsx",["2510","2511","2512","2513","2514"],"import React, { useCallback, useEffect, useLayoutEffect, useRef, useState } from \"react\"\r\n\r\nimport { Calender } from \"./Calender\"\r\nimport { INepaliDatePicker, NepaliDatepickerEvents, childOf, stitchDate, ADToBS, BSToAD, validateBsYear, validateBsMonth, validateBsDay } from \"./Datepickerutils\"\r\nimport \"./Datepicker.scss\"\r\n\r\n\r\nconst NepaliDatePicker = (props: INepaliDatePicker) => {\r\n    const { wrapperClassName, className = \"form-control\", value, disabled = false, engDate, onChange, onSelect, options = {}, closeOnSelect = true, maxDate, maxDateToday, minDate, minDateToday, id, name } = props;\r\n\r\n    // DatePicker references\r\n    const nepaliDatePickerWrapper = useRef<HTMLDivElement>(null)\r\n    const nepaliDatePickerInput = useRef<HTMLInputElement>(null)\r\n\r\n    const [date, setDate] = useState<string>(\"\")\r\n    const [showCalendar, setShowCalendar] = useState<boolean>(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            // If invalid date\r\n            try {\r\n                if (value) {\r\n                    const [year, month, day] = value.split(\"-\");\r\n\r\n                    if (!(year && month && day)) {\r\n                        throw new RangeError(\"Invalid BS date\")\r\n                    }\r\n\r\n                    validateBsYear(+year); //Throws Error if invalid\r\n                    validateBsMonth(+month); //Throws Error if invalid\r\n                    validateBsDay(+day); //Throws Error if invalid\r\n\r\n                    setDate(value || \"\");\r\n                }\r\n            }\r\n            catch (e) {\r\n                setDate(\"\");\r\n                onChange && onChange(\"\", \"\");\r\n            }\r\n        }\r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        if (engDate) {\r\n            let nepDate = ADToBS(new Date(engDate));\r\n            if (!value || value !== nepDate) {\r\n                onChange && onChange(nepDate, new Date(engDate));\r\n            }\r\n        }\r\n    }, [engDate])\r\n\r\n    const handleClickOutside = useCallback((event: any) => {\r\n        if (nepaliDatePickerWrapper.current && childOf(event.target, nepaliDatePickerWrapper.current)) {\r\n            return\r\n        }\r\n\r\n        setShowCalendar(false)\r\n    }, [])\r\n\r\n    useLayoutEffect(() => {\r\n        if (showCalendar) {\r\n            document.addEventListener(\"mousedown\", handleClickOutside)\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside)\r\n        }\r\n    }, [showCalendar])\r\n\r\n    useLayoutEffect(() => {\r\n        if (showCalendar && nepaliDatePickerWrapper.current) {\r\n            const nepaliDatePicker = nepaliDatePickerWrapper.current.getBoundingClientRect()\r\n            const screenHeight = window.innerHeight\r\n\r\n            const calender: HTMLDivElement | null = nepaliDatePickerWrapper.current.querySelector(\".calender\")\r\n            if (calender) {\r\n                setTimeout(() => {\r\n                    const calenderHeight = calender.clientHeight\r\n\r\n                    if (calenderHeight + nepaliDatePicker.bottom > screenHeight) {\r\n                        if (calenderHeight < nepaliDatePicker.top) {\r\n                            calender.style.bottom = `${nepaliDatePicker.height}px`\r\n                        }\r\n                    }\r\n                }, 0)\r\n            }\r\n        }\r\n    }, [showCalendar])\r\n\r\n    const handleOnChange = useCallback((changedDate: string) => {\r\n        setDate(changedDate)\r\n        if (onChange) {\r\n            onChange(changedDate, BSToAD(changedDate))\r\n        }\r\n    }, [])\r\n\r\n    const handleOnDaySelect = useCallback((selectedDate) => {\r\n        if (closeOnSelect) {\r\n            setShowCalendar(false)\r\n        }\r\n        if (onSelect) {\r\n            onSelect(stitchDate(selectedDate))\r\n        }\r\n    }, [])\r\n\r\n    const datepickerEvents: NepaliDatepickerEvents = {\r\n        change: handleOnChange,\r\n        daySelect: handleOnDaySelect,\r\n        todaySelect: handleOnDaySelect,\r\n\r\n        yearSelect: options.yearSelect,\r\n        monthSelect: options.monthSelect,\r\n        previousMonthSelect: options.previousMonthSelect,\r\n        nextMonthSelect: options.nextMonthSelect\r\n    }\r\n\r\n    const [maxDateLimit, setmaxDateLimit] = useState({ year: 0, month: 0, day: 0 });\r\n    useEffect(() => {\r\n        if (maxDate || maxDateToday) {\r\n            let maxDateMapped: any;\r\n            if (maxDate) {\r\n                maxDateMapped = maxDate?.split(\"-\");\r\n            }\r\n            else if (maxDateToday) {\r\n                maxDateMapped = ADToBS(new Date()).split(\"-\");\r\n            }\r\n            setmaxDateLimit({ year: +maxDateMapped[0], month: +maxDateMapped[1], day: +maxDateMapped[2] });\r\n        } else {\r\n            setmaxDateLimit({ year: 0, month: 0, day: 0 });\r\n        }\r\n    }, [maxDate, maxDateToday])\r\n\r\n    const [minDateLimit, setminDateLimit] = useState({ year: 0, month: 0, day: 0 });\r\n    useEffect(() => {\r\n        if (minDate || minDateToday) {\r\n            let minDateMapped: any;\r\n            if (minDate) {\r\n                minDateMapped = minDate?.split(\"-\");\r\n            }\r\n            else if (minDateToday) {\r\n                minDateMapped = ADToBS(new Date()).split(\"-\");\r\n            }\r\n            setminDateLimit({ year: +minDateMapped[0], month: +minDateMapped[1], day: +minDateMapped[2] });\r\n        } else {\r\n            setminDateLimit({ year: 0, month: 0, day: 0 });\r\n        }\r\n    }, [minDate, minDateToday])\r\n\r\n    return (\r\n        <div ref={nepaliDatePickerWrapper} className={`nepali-date-picker ${wrapperClassName || \"\"}`}>\r\n            <input\r\n                type='text'\r\n                ref={nepaliDatePickerInput}\r\n                className={className}\r\n                id={id}\r\n                name={name}\r\n                readOnly={disabled}\r\n                autoComplete=\"off\"\r\n                value={date}\r\n                onClick={() => setShowCalendar(() => !showCalendar)}\r\n            />\r\n            <i className=\"ic-calendar\" onClick={() => setShowCalendar(() => !showCalendar)}></i>\r\n            {showCalendar &&\r\n                <Calender\r\n                    value={date}\r\n                    events={datepickerEvents}\r\n                    maxDate={maxDateLimit}\r\n                    minDate={minDateLimit}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NepaliDatePicker;","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\IncomeExpendGraph.tsx",["2515"],"import GeneralChart from \"components/UI/Charts/General\";\r\nimport IncomeExpendTable from \"core/Public/Home/IncomeExpend/IncomeExpendTable\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getExpenseCumulativeAction } from \"store/modules/report/expenseCumilitiveCashFlow\";\r\nimport { getIncomeExpenseAction } from \"store/modules/report/incomeExpense\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getYearFromDate } from \"utils/utilsFunction/date-converter\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst IncomeExpendGraph = (props: Props) => {\r\n  const { incomeExpenseData } = props;\r\n  const { t } = useTranslation([\"home\"]);\r\n\r\n  const [years, setYears] = useState<(string | number)[]>([]);\r\n  const [income, setIncome] = useState<(string | number)[]>([]);\r\n  const [expense, setExpense] = useState<(string | number)[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      props.getExpenseCumulativeAction(props.schemeSlug);\r\n    }\r\n  }, [props.schemeSlug]);\r\n\r\n  useEffect(() => {\r\n    if (incomeExpenseData) {\r\n      const yearArray = incomeExpenseData?.expected_income?.map(\r\n        (item) =>\r\n          ` ${getNumberByLanguage(getYearFromDate(item.date_from))} - ${getNumberByLanguage(\r\n            getYearFromDate(item.date_to)\r\n          )}`\r\n      );\r\n      const incomeArray = incomeExpenseData?.expected_income?.map((item) => item.income_amount);\r\n      const expenseArray = incomeExpenseData?.expected_expense?.map((item) => item.expense_amount);\r\n\r\n      setYears(yearArray);\r\n      setIncome(incomeArray);\r\n      setExpense(expenseArray);\r\n    }\r\n  }, [incomeExpenseData]);\r\n\r\n  console.log(incomeExpenseData, \"<<<<<<<<incomeExpenseData\");\r\n\r\n  return (\r\n    <>\r\n      <GeneralChart\r\n        minHeight={350}\r\n        options={{\r\n          tooltip: {\r\n            trigger: \"axis\",\r\n            axisPointer: {\r\n              type: \"shadow\",\r\n            },\r\n            // formatter: handleCustomTooltip,\r\n          },\r\n          legend: {\r\n            show: false,\r\n          },\r\n          grid: {\r\n            left: \"3%\",\r\n            right: \"4%\",\r\n            bottom: \"3%\",\r\n            top: \"8%\",\r\n            containLabel: true,\r\n          },\r\n          xAxis: {\r\n            type: \"category\",\r\n            boundaryGap: false,\r\n            data: years,\r\n            axisLabel: {\r\n              formatter: function (name) {\r\n                return name?.split(\"-\")[0]?.replace(\"Year\", \"\");\r\n              },\r\n            },\r\n          },\r\n          yAxis: {\r\n            type: \"value\",\r\n            axisLabel: {\r\n              formatter: function (name) {\r\n                return getNumberByLanguage(name);\r\n              },\r\n            },\r\n          },\r\n          series: [\r\n            {\r\n              name: `${t(\"home:total\")} ${t(\"home:income\")} `,\r\n              type: \"line\",\r\n              smooth: true,\r\n              data: income,\r\n              lineStyle: { color: \"#4DFFFF\" },\r\n            },\r\n            {\r\n              name: `${t(\"home:total\")} ${t(\"home:expense\")} `,\r\n              type: \"line\",\r\n              smooth: true,\r\n              data: expense,\r\n              lineStyle: { color: \"#ff4D4D\" },\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n\r\n      <IncomeExpendTable heading={years} income={income} expense={expense} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  incomeExpenseData: state.reportData.expenseCumulativeCashFlowData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getIncomeExpenseAction: getIncomeExpenseAction,\r\n  getExpenseCumulativeAction: getExpenseCumulativeAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(IncomeExpendGraph);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationGraph.tsx",["2516","2517"],"import GeneralChart from \"components/UI/Charts/General\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getYearFromDate } from \"utils/utilsFunction/date-converter\";\r\nimport DataTable from \"./DataTable\";\r\n\r\nconst config = {\r\n  name: \"\",\r\n  type: \"line\",\r\n  smooth: true,\r\n  data: [],\r\n};\r\n\r\ntype SeriesConfig = {\r\n  name: string;\r\n  type: string;\r\n  smooth: boolean;\r\n  data: (string | number)[];\r\n};\r\n\r\ntype ChartDataType = {\r\n  xAxis: (string | number)[];\r\n  total_supply_avg?: (string | number)[];\r\n  total_supply?: (string | number)[];\r\n  non_revenue_water?: (string | number)[];\r\n};\r\n\r\ninterface Props extends PropsFromRedux {\r\n  type?: string;\r\n  options: any[];\r\n  compareKey: string;\r\n  defaultSelected: string[];\r\n}\r\n\r\nconst LineChart = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [chartData, setChartData] = useState<ChartDataType>();\r\n\r\n  const [seriesData, setSeriesData] = useState<SeriesConfig[]>();\r\n\r\n  const [tableData, setTableData] = useState<any>();\r\n\r\n  const [selected, setSelected] = useState<string[]>(props.defaultSelected);\r\n\r\n  useEffect(() => {\r\n    const newData: ChartDataType = {\r\n      xAxis: props.waterSupplyData?.supply?.map(\r\n        (item, index) =>\r\n          `${t(\"home:year\")} ${getNumberByLanguage(index + 1)} -  ${getNumberByLanguage(\r\n            getYearFromDate(item.date_from)\r\n          )} - ${getNumberByLanguage(getYearFromDate(item.date_to))}`\r\n      ),\r\n\r\n      total_supply_avg: props.waterSupplyData?.supply?.map((item) => Number(item.total_supply_avg)),\r\n      total_supply: props.waterSupplyData?.supply?.map((item) => Number(item.total_supply)),\r\n      non_revenue_water: props.waterSupplyData?.supply?.map((item) =>\r\n        Number(item.non_revenue_water)\r\n      ),\r\n    };\r\n    setChartData(newData);\r\n  }, [props.waterSupplyData]);\r\n\r\n  const handleSelect = (name: string) => {\r\n    if (selected?.includes(name)) {\r\n      const filteredData = selected.filter((item) => item !== name);\r\n      setSelected(filteredData);\r\n    } else {\r\n      setSelected([...selected, name]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selectedData = selected?.map((item) => ({\r\n      ...config,\r\n      name: props.options.find((opt) => opt.id === item)?.name || \"\",\r\n      data: chartData && chartData[item],\r\n      itemStyle: {\r\n        color: props.options.find((opt) => opt.id === item)?.color || \"\",\r\n      },\r\n    }));\r\n\r\n    const tableData = selected?.map((item) => ({\r\n      name: props.options.find((opt) => opt.id === item)?.name || \"\",\r\n      color: props.options.find((opt) => opt.id === item)?.color || \"\",\r\n      data: chartData && chartData[item],\r\n    }));\r\n\r\n    setSeriesData(selectedData);\r\n    setTableData(tableData);\r\n  }, [chartData, selected]);\r\n\r\n  console.log(seriesData, \">>seriesData\")\r\n\r\n  const optionData = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n      },\r\n    },\r\n    legend: {\r\n      show: true,\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"5%\",\r\n      bottom: \"3%\",\r\n      //   top: \"6%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      boundaryGap: false,\r\n      data: chartData?.xAxis,\r\n      axisLabel: {\r\n        formatter: function (name) {\r\n          return name?.split(\"-\")[0]?.replace(\"Year\", \"\");\r\n        },\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      axisLabel: {\r\n        formatter: function (name) {\r\n          return getNumberByLanguage(name);\r\n        },\r\n      },\r\n    },\r\n    series: seriesData,\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-9\">\r\n        <GeneralChart minHeight={400} options={optionData} />\r\n        {tableData?.length > 0 && props.type && (\r\n          <DataTable years={chartData?.xAxis} tableData={tableData} type={props.type} />\r\n        )}\r\n      </div>\r\n      <div className=\"col-md-3 chartOptions\">\r\n        <h6>Select</h6>\r\n        <p>Visualization Parameters</p>\r\n\r\n        <ul>\r\n          {props.options?.map((item) => (\r\n            <li key={item.id}>\r\n              <CustomCheckBox\r\n                id={\"\" + item.id}\r\n                label={item.name}\r\n                onChange={(e) => handleSelect(item.id)}\r\n                checked={selected.includes(item.id)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  waterSupplyData: state.reportData.waterSupplyData.data,\r\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\r\n  actualCF: state.reportData.actualCumulativeCashFlowData.data,\r\n  expenseCF: state.reportData.expenseCumulativeCashFlowData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(LineChart);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationGraphThisYear.tsx",["2518","2519","2520"],"import GeneralChart from \"components/UI/Charts/General\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\nimport { getFiscalYearData, getMonthByLanguageAndScheme } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport DataTable from \"./DataTable\";\r\n\r\nconst config = {\r\n  name: \"\",\r\n  type: \"line\",\r\n  smooth: true,\r\n  data: [],\r\n};\r\n\r\ntype SeriesConfig = {\r\n  name: string;\r\n  type: string;\r\n  smooth: boolean;\r\n  data: (string | number)[];\r\n};\r\n\r\ntype ChartDataType = {\r\n  xAxis: (string | number)[];\r\n  total_supply_avg?: (string | number)[];\r\n  total_supply?: (string | number)[];\r\n  non_revenue_water?: (string | number)[];\r\n};\r\n\r\ninterface Props extends PropsFromRedux {\r\n  type?: string;\r\n  options: any[];\r\n  compareKey?: string;\r\n  selectedYear: number;\r\n  defaultSelected: string[];\r\n}\r\n\r\nconst LineChart = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [chartData, setChartData] = useState<ChartDataType>();\r\n\r\n  const [seriesData, setSeriesData] = useState<SeriesConfig[]>();\r\n\r\n  const [tableData, setTableData] = useState<any>();\r\n\r\n  const [selected, setSelected] = useState<string[]>(props.defaultSelected);\r\n\r\n  const getDataByArray = () => {};\r\n\r\n  useEffect(() => {\r\n    if (props.intervalData && props.waterSupplyData) {\r\n      const fiscalYearArray = getFiscalYearData(\r\n        props.intervalData,\r\n        props.schemeDetails?.system_date_format\r\n      );\r\n\r\n      const newData: ChartDataType = {\r\n        xAxis: fiscalYearArray?.map((item) => {\r\n          return getMonthByLanguageAndScheme(item, props.schemeDetails?.system_date_format);\r\n        }),\r\n        total_supply_avg: fiscalYearArray?.map((item) => {\r\n          return (\r\n            props.waterSupplyData?.supply?.find((inc) => {\r\n              return +inc.supply_date__month < 10\r\n                ? +inc.supply_date__month?.toString()?.replace(\"0\", \"\") === item\r\n                : +inc.supply_date__month === item;\r\n            })?.total_supply_avg || 0\r\n          );\r\n        }),\r\n        total_supply: fiscalYearArray?.map((item) => {\r\n          return (\r\n            props.waterSupplyData?.supply?.find((inc) => {\r\n              return +inc.supply_date__month < 10\r\n                ? +inc.supply_date__month?.toString()?.replace(\"0\", \"\") === item\r\n                : +inc.supply_date__month === item;\r\n            })?.total_supply || 0\r\n          );\r\n        }),\r\n        non_revenue_water: fiscalYearArray?.map((item) => {\r\n          return (\r\n            props.waterSupplyData?.supply?.find((inc) => {\r\n              return +inc.supply_date__month < 10\r\n                ? +inc.supply_date__month?.toString()?.replace(\"0\", \"\") === item\r\n                : +inc.supply_date__month === item;\r\n            })?.non_revenue_water || 0\r\n          );\r\n        }),\r\n      };\r\n\r\n\r\n      setChartData(newData);\r\n    }\r\n  }, [props.waterSupplyData, props.schemeDetails, props.intervalData]);\r\n\r\n  const handleSelect = (name: string) => {\r\n    if (selected?.includes(name)) {\r\n      const filteredData = selected.filter((item) => item !== name);\r\n      setSelected(filteredData);\r\n    } else {\r\n      setSelected([...selected, name]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selectedData = selected.map((item) => ({\r\n      ...config,\r\n      name: props.options.find((opt) => opt.id === item)?.name || \"\",\r\n      data: chartData && chartData[item],\r\n      itemStyle: {\r\n        color: props.options.find((opt) => opt.id === item)?.color || \"\",\r\n      },\r\n    }));\r\n\r\n\r\n\r\n    const tableData = selected.map((item) => ({\r\n      name: props.options.find((opt) => opt.id === item)?.name || \"\",\r\n      color: props.options.find((opt) => opt.id === item)?.color || \"\",\r\n      data: chartData && chartData[item],\r\n    }));\r\n\r\n    setSeriesData(selectedData);\r\n    setTableData(tableData);\r\n  }, [chartData, selected]);\r\n\r\n  console.log(seriesData, \"<<<<<newData\")\r\n\r\n\r\n  const optionData = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n      },\r\n    },\r\n    legend: {\r\n      show: true,\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"5%\",\r\n      bottom: \"3%\",\r\n      //   top: \"6%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      boundaryGap: false,\r\n      data: chartData?.xAxis,\r\n      axisLabel: {\r\n        formatter: function (name) {\r\n          return name?.replace(props.type, \"\");\r\n        },\r\n        rotate: 25,\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n    },\r\n    series: seriesData,\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-9\">\r\n        <GeneralChart minHeight={400} options={optionData} />\r\n        {tableData?.length > 0 && props.type && (\r\n          <DataTable years={chartData?.xAxis} tableData={tableData} type={props.type} />\r\n        )}\r\n      </div>\r\n      <div className=\"col-md-3 chartOptions\">\r\n        <h6>Select</h6>\r\n        <p>Visualization Parameters</p>\r\n\r\n        <ul>\r\n          {props.options.map((item) => (\r\n            <li key={item.id}>\r\n              <CustomCheckBox\r\n                id={\"\" + item.id}\r\n                label={item.name}\r\n                onChange={(e) => handleSelect(item.id)}\r\n                checked={selected.includes(item.id)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  waterSupplyData: state.reportData.waterSupplyData.data,\r\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\r\n  actualCF: state.reportData.actualCumulativeCashFlowData.data,\r\n  expenseCF: state.reportData.expenseCumulativeCashFlowData.data,\r\n  intervalData: state.waterSchemeData.getYearIntervals.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(LineChart);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationBarGraphThisWeek.tsx",["2521","2522"],"import GeneralChart from \"components/UI/Charts/General\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\n\r\nconst config = {\r\n  name: \"\",\r\n  type: \"bar\",\r\n  smooth: true,\r\n  yAxisIndex: 0,\r\n  data: [],\r\n};\r\n\r\ntype SeriesConfig = {\r\n  name: string;\r\n  type: string;\r\n  smooth: boolean;\r\n  data: (string | number)[];\r\n};\r\n\r\ntype ChartDataType = {\r\n  xAxis: (string | number)[];\r\n  total_supply_avg?: (string | number)[];\r\n  total_supply?: (string | number)[];\r\n  non_revenue_water?: (string | number)[];\r\n};\r\n\r\ninterface Props extends PropsFromRedux {\r\n  type?: string;\r\n  options: any[]; \r\n  compareKey: string;\r\n  defaultSelected: string[];\r\n}\r\n\r\nconst VisualizationBarGraph = (props: Props) => {\r\n  const [chartData, setChartData] = useState<ChartDataType>();\r\n\r\n  const [seriesData, setSeriesData] = useState<SeriesConfig[]>();\r\n\r\n  //   const [tableData, setTableData] = useState<any>();\r\n\r\n  const [selected, setSelected] = useState<string[]>(props.defaultSelected);\r\n\r\n  useEffect(() => {\r\n    const newData: ChartDataType = {\r\n      xAxis: props.waterSupplyData?.supply?.map((item) => `${item[props.compareKey]}`),\r\n      total_supply: props.waterSupplyData?.supply?.map((item) => item.total_supply),\r\n      total_supply_avg: props.waterSupplyData?.supply?.map((item) => item.daily_avg),\r\n      non_revenue_water: props.waterSupplyData?.supply?.map((item) => item.non_revenue_water),\r\n    };\r\n\r\n    console.log(props.waterSupplyData?.supply, \"<<<<<<<<<<\")\r\n    setChartData(newData);\r\n  }, [props.waterSupplyData]);\r\n\r\n  const handleSelect = (name: string) => {\r\n    if (selected?.includes(name)) {\r\n      const filteredData = selected.filter((item) => item !== name);\r\n      setSelected(filteredData);\r\n    } else {\r\n      setSelected([...selected, name]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selectedData = selected.map((item, index) => ({\r\n      ...config,\r\n      name: props.options.find((opt) => opt.id === item)?.name || \"\",\r\n      type: \"bar\",\r\n      data: chartData && chartData[item],\r\n      yAxisIndex: index,\r\n      itemStyle: {\r\n        color: props.options.find((opt) => opt.id === item)?.color || \"\",\r\n      },\r\n    }));\r\n\r\n    console.log(selectedData, \"----------\")\r\n    setSeriesData(selectedData);\r\n    // setTableData(tableData);\r\n  }, [chartData, selected]);\r\n\r\n  const optionData = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n      },\r\n    },\r\n\r\n    xAxis: [\r\n      {\r\n        type: \"category\",\r\n        data: chartData?.xAxis,\r\n        axisLabel: { interval: 0, rotate: 25 },\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        type: \"value\",\r\n        name: \"\",\r\n        // axisLabel: {\r\n        //   formatter: \"{value} ml\",\r\n        // },\r\n      },\r\n      {\r\n        type: \"value\",\r\n        name: \"\",\r\n        // axisLabel: {\r\n        //   show: false\r\n        // },\r\n      },\r\n    ],\r\n    series: seriesData,\r\n  };\r\n\r\n  console.log(chartData, \"seriesDataseriesData\")\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-9\">\r\n        <GeneralChart minHeight={400} options={optionData} />\r\n        {/* {tableData?.length > 0 && props.type && (\r\n          <DataTable\r\n            years={chartData?.xAxis}\r\n            tableData={tableData}\r\n            type={props.type}\r\n          />\r\n        )} */}\r\n      </div>\r\n      <div className=\"col-md-3 chartOptions\">\r\n        <h6>Select</h6>\r\n        <p>Visualization Parameters</p>\r\n\r\n        <ul>\r\n          {props.options.map((item) => (\r\n            <li key={item.id}>\r\n              <CustomCheckBox\r\n                id={\"\" + item.id}\r\n                label={item.name}\r\n                onChange={(e) => handleSelect(item.id)}\r\n                checked={selected.includes(item.id)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  waterSupplyData: state.reportData.waterSupplyData.data,\r\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\r\n  actualCF: state.reportData.actualCumulativeCashFlowData.data,\r\n  expenseCF: state.reportData.expenseCumulativeCashFlowData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(VisualizationBarGraph);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationBarGraph.tsx",["2523","2524"],"import GeneralChart from \"components/UI/Charts/General\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\n\r\nconst config = {\r\n  name: \"\",\r\n  type: \"\",\r\n  smooth: true,\r\n  yAxisIndex: 0,\r\n  data: [],\r\n};\r\n\r\ntype SeriesConfig = {\r\n  name: string;\r\n  type: string;\r\n  smooth: boolean;\r\n  data: (string | number)[];\r\n};\r\n\r\ntype ChartDataType = {\r\n  xAxis: (string | number)[];\r\n  total_supply?: (string | number)[]; \r\n  daily_target?: (string | number)[];\r\n};\r\n\r\ninterface Props extends PropsFromRedux {\r\n  type?: string;\r\n  options: any[];\r\n  compareKey: string;\r\n  defaultSelected: string[];\r\n}\r\n\r\nconst VisualizationBarGraph = (props: Props) => {\r\n  const [chartData, setChartData] = useState<ChartDataType>();\r\n\r\n  const [seriesData, setSeriesData] = useState<SeriesConfig[]>(); \r\n\r\n  const [selected, setSelected] = useState<string[]>(props.defaultSelected);\r\n\r\n  useEffect(() => {\r\n    const newData: ChartDataType = {\r\n      xAxis: props.waterSupplyData?.supply?.map((item) => `${item[props.compareKey]}`),\r\n      total_supply: props.waterSupplyData?.supply?.map((item) => item.total_supply), \r\n      daily_target: props.waterSupplyData?.supply?.map((item) => props.waterSupplyData?.daily_target), \r\n    }; \r\n    setChartData(newData);\r\n  }, [props.waterSupplyData]);\r\n\r\n  const handleSelect = (name: string) => {\r\n    if (selected?.includes(name)) {\r\n      const filteredData = selected.filter((item) => item !== name);\r\n      setSelected(filteredData);\r\n    } else {\r\n      setSelected([...selected, name]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selectedData = selected?.map((item, index) => ({\r\n      ...config,\r\n      name: props.options.find((opt) => opt.id === item)?.name || \"\",\r\n      type: \"bar\",\r\n      data: chartData && chartData[item],\r\n      yAxisIndex: index,\r\n      itemStyle: {\r\n        color: props.options.find((opt) => opt.id === item)?.color || \"\",\r\n      },\r\n    }));\r\n    setSeriesData(selectedData);\r\n  }, [chartData, selected]);\r\n\r\n  const optionData = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n      },\r\n    },\r\n\r\n    xAxis: [\r\n      {\r\n        type: \"category\",\r\n        data: chartData?.xAxis,\r\n        axisLabel: { interval: 0, rotate: 25 },\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        type: \"value\",\r\n        name: \"\", \r\n      },\r\n      {\r\n        type: \"value\",\r\n        name: \"\", \r\n      },\r\n    ],\r\n    series: seriesData,\r\n  };\r\n\r\n  console.log(seriesData, \"seriessdaddadadad\")\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-9\">\r\n        <GeneralChart minHeight={400} options={optionData} /> \r\n      </div>\r\n      <div className=\"col-md-3 chartOptions\">\r\n        <h6>Select</h6>\r\n        <p>Visualization Parameters</p>\r\n\r\n        <ul>\r\n          {props.options?.map((item) => (\r\n            <li key={item.id}>\r\n              <CustomCheckBox\r\n                id={\"\" + item.id}\r\n                label={item.name}\r\n                onChange={(e) => handleSelect(item.id)}\r\n                checked={selected.includes(item.id)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  waterSupplyData: state.reportData.waterSupplyData.data,\r\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\r\n  actualCF: state.reportData.actualCumulativeCashFlowData.data,\r\n  expenseCF: state.reportData.expenseCumulativeCashFlowData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(VisualizationBarGraph);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\FormikValidationError\\FormikValidationError.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\EnglishDatepicker\\EnglishDatepicker.tsx",["2525"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./EnglishDatepicker.scss\";\r\n\r\ninterface DateProps {\r\n  id?: string;\r\n  name?: string;\r\n  className?: string;\r\n  placement?: string;\r\n  popperModifiers?: { [key: string]: any };\r\n  wrapperClassName?: string;\r\n  handleChange: (date: any) => void;\r\n  value?: any;\r\n  minDate?: any;\r\n  maxDate?: any;\r\n  minTime?: any;\r\n  maxTime?: any;\r\n  showTimeSelect?: boolean;\r\n  disabled?: boolean;\r\n  placeholder?: string;\r\n  dateFormat?: string;\r\n  showYearPicker?: boolean;\r\n  showMonthYearPicker?: boolean;\r\n  showTimeSelectOnly?: boolean;\r\n  timeIntervals?: number;\r\n}\r\nconst EnglishDatePicker: React.SFC<DateProps> = (props) => {\r\n  const {\r\n    id,\r\n    name,\r\n    disabled = false,\r\n    className,\r\n    placement = \"bottom-start\",\r\n    popperModifiers,\r\n    wrapperClassName = \"\",\r\n    value,\r\n    dateFormat,\r\n    minDate,\r\n    maxDate,\r\n    minTime,\r\n    maxTime,\r\n    placeholder,\r\n    showYearPicker = false,\r\n    showMonthYearPicker = false,\r\n    showTimeSelectOnly = false,\r\n    handleChange,\r\n    showTimeSelect,\r\n    timeIntervals = 15,\r\n  } = props;\r\n  const _calendar: any = useRef<DatePicker>();\r\n\r\n  const [selectedDate, setselectedDate] = useState<Date | null | undefined>(null);\r\n  // If invalid date\r\n  useEffect(() => {\r\n    try {\r\n      if (value) {\r\n        const date = new Date(value);\r\n        let currentValue = date.getTime() ? date : null;\r\n        setselectedDate(currentValue);\r\n      } else {\r\n        setselectedDate(null);\r\n      }\r\n    } catch (e) {\r\n      setselectedDate(null);\r\n    }\r\n  }, [value]);\r\n\r\n  return (\r\n    <DatePicker\r\n      ref={_calendar}\r\n      id={id}\r\n      autoComplete={\"off\"}\r\n      name={name}\r\n      wrapperClassName={`${wrapperClassName} d-block`}\r\n      className={className}\r\n      selected={selectedDate}\r\n      minDate={minDate ? new Date(minDate) : null}\r\n      maxDate={maxDate ? new Date(maxDate) : null}\r\n      minTime={minTime}\r\n      maxTime={maxTime}\r\n      onChange={handleChange}\r\n      onChangeRaw={(e) => e.preventDefault()} //Disables input\r\n      showTimeSelect={showTimeSelect}\r\n      timeFormat=\"HH:mm\"\r\n      timeIntervals={timeIntervals}\r\n      timeCaption=\"Time\"\r\n      popperPlacement={\"bottom-start\"}\r\n      popperModifiers={popperModifiers}\r\n      dateFormat={dateFormat ? dateFormat : showTimeSelect ? \"yyyy-MM-dd h:mm aa\" : \"yyyy-MM-dd\"}\r\n      showYearDropdown\r\n      showMonthDropdown\r\n      disabled={disabled}\r\n      showTimeSelectOnly={showTimeSelectOnly}\r\n      placeholderText={placeholder || \"\"}\r\n      showYearPicker={showYearPicker}\r\n      showMonthYearPicker={showMonthYearPicker}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EnglishDatePicker;\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\BarChart\\ChartThisYear.tsx",["2526","2527"],"import GeneralChart from \"components/UI/Charts/General\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\nimport { getFiscalYearData, getMonthByLanguageAndScheme, getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { MaintainanceCostSingleType } from \"store/modules/report/maintainanceCost\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport DataTable from \"./DataTable\";\r\n\r\ntype SeriesConfig = {\r\n  name: string | undefined;\r\n  type: string;\r\n  stack: string;\r\n  areaStyle: {\r\n    color: string | undefined;\r\n  };\r\n  data: number[];\r\n};\r\n\r\ninterface singleItemType {\r\n  value: any;\r\n  itemStyle: {\r\n    color: string;\r\n  };\r\n}\r\n\r\ninterface ChartDataType {\r\n  actual_unsegregated: singleItemType[];\r\n  actual_material: singleItemType[];\r\n  actual_labor: singleItemType[];\r\n  actual_replacement: singleItemType[];\r\n  expected_unsegregated: singleItemType[];\r\n  expected_material: singleItemType[];\r\n  expected_labor: singleItemType[];\r\n  expected_replacement: singleItemType[];\r\n  expected_total;\r\n  actual_total;\r\n  years: (string | number)[];\r\n}\r\n\r\ninterface Props extends PropsFromRedux {\r\n  selected: string[];\r\n  setSelected: any;\r\n}\r\n\r\nconst BarChartThisYear = (props: Props) => {\r\n  const { selected, setSelected } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const [chartData, setChartData] = useState<ChartDataType>();\r\n\r\n  const [seriesData, setSeriesData] = useState<SeriesConfig[]>();\r\n\r\n  const [tableData, setTableData] = useState<any>();\r\n\r\n  const options = [\r\n    {\r\n      id: \"actual_unsegregated\",\r\n      name: `${t(\"home:actual\")} ${t(\"home:unsegregated\")}`,\r\n      color: \"#e5f1ff\",\r\n    },\r\n    {\r\n      id: \"actual_material\",\r\n      name: `${t(\"home:actual\")} ${t(\"home:consumable\")}`,\r\n      color: \"#69a7f1\",\r\n    },\r\n    {\r\n      id: \"actual_labor\",\r\n      name: `${t(\"home:actual\")} ${t(\"home:labour\")}`,\r\n      color: \"#2680eb\",\r\n    },\r\n    {\r\n      id: \"actual_replacement\",\r\n      name: `${t(\"home:actual\")} ${t(\"home:replacement\")}`,\r\n      color: \"#accef7\",\r\n    },\r\n    {\r\n      id: \"expected_unsegregated\",\r\n      name: `${t(\"home:expected\")} ${t(\"home:unsegregated\")}`,\r\n      color: \"#ffefdb\",\r\n    },\r\n    {\r\n      id: \"expected_material\",\r\n      name: `${t(\"home:expected\")} ${t(\"home:consumable\")}`,\r\n      color: \"#f1b369\",\r\n    },\r\n    {\r\n      id: \"expected_labor\",\r\n      name: `${t(\"home:expected\")} ${t(\"home:labour\")}`,\r\n      color: \"#eb9126\",\r\n    },\r\n    {\r\n      id: \"expected_replacement\",\r\n      name: `${t(\"home:expected\")} ${t(\"home:replacement\")}`,\r\n      color: \"#f7d5ac\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (props.maintainanceCost && props.intervalData) {\r\n      const fiscalYearArray = getFiscalYearData(\r\n        props.intervalData,\r\n        props.schemeDetails?.system_date_format\r\n      );\r\n\r\n      const sortAndMapArray = (\r\n        array: MaintainanceCostSingleType[],\r\n        monthKey: string,\r\n        key: string,\r\n        color: string\r\n      ) => {\r\n        return fiscalYearArray?.map((item) => {\r\n          const findElement = array?.find((inc) => {\r\n\r\n            console.log(inc, item , \"testaaaa\")\r\n            return +inc[monthKey] < 10\r\n              ? +inc[monthKey]?.toString()?.replace(\"0\", \"\") === +item\r\n              : +inc[monthKey] === +item;\r\n          });\r\n          return {\r\n            value: findElement ? findElement[key] : 0,\r\n            itemStyle: { color },\r\n          };\r\n        });\r\n      };\r\n\r\n      const chartData = {\r\n        years: fiscalYearArray?.map((item) => {\r\n          return getMonthByLanguageAndScheme(item, props.schemeDetails?.system_date_format);\r\n        }),\r\n        actual_unsegregated: sortAndMapArray(\r\n          props.maintainanceCost.actual_cost,\r\n          \"maintenance_date__month\",\r\n          \"unsegregated_cost\",\r\n          \"rgba(196,196,196,1)\"\r\n        ),\r\n        actual_material: sortAndMapArray(\r\n          props.maintainanceCost.actual_cost,\r\n          \"maintenance_date__month\",\r\n          \"material_cost\",\r\n          \"rgba(215,215,215,1)\"\r\n        ),\r\n        actual_labor: sortAndMapArray(\r\n          props.maintainanceCost.actual_cost,\r\n          \"maintenance_date__month\",\r\n          \"labour_cost\",\r\n          \"rgba(229,229,229,1)\"\r\n        ),\r\n        actual_replacement: sortAndMapArray(\r\n          props.maintainanceCost.actual_cost,\r\n          \"maintenance_date__month\",\r\n          \"replacement_cost\",\r\n          \"rgba(242,242,242,1)\"\r\n        ),\r\n        expected_unsegregated: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"next_action__month\",\r\n          \"unsegregated_cost\",\r\n          \"rgba(38,128,235,1)\"\r\n        ),\r\n        expected_material: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"next_action__month\",\r\n          \"material_cost\",\r\n          \"rgba(139,173,213,1)\"\r\n        ),\r\n        expected_labor: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"next_action__month\",\r\n          \"labour_cost\",\r\n          \"rgba(189,213,242,1)\"\r\n        ),\r\n        expected_replacement: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"next_action__month\",\r\n          \"replacement_cost\",\r\n          \"rgba(204,221,234,1)\"\r\n        ),\r\n        expected_total: props.maintainanceCost.expected_cost.map((item) => ({\r\n          date: item.next_action__month,\r\n          value: item.actual_cost_total || 0,\r\n        })),\r\n\r\n        actual_total: props.maintainanceCost.actual_cost.map((item) => ({\r\n          date: item.next_action__month,\r\n          value: item.actual_cost_total || 0,\r\n        })),\r\n      };\r\n\r\n      setChartData(chartData);\r\n    }\r\n  }, [props.language, props.maintainanceCost, props.intervalData]);\r\n\r\n  const handleSelect = (name: string) => {\r\n    if (selected?.includes(name)) {\r\n      const filteredData = selected.filter((item) => item !== name);\r\n      setSelected(filteredData);\r\n    } else {\r\n      setSelected([...selected, name]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selectedData = selected.map((item) => ({\r\n      name: options.find((opt) => opt.id === item)?.name,\r\n      type: \"bar\",\r\n      stack: item?.includes(\"expec\") ? \"expected\" : \"actual\",\r\n      areaStyle: {\r\n        color: options.find((opt) => opt.id === item)?.color,\r\n      },\r\n      data: chartData && chartData[item],\r\n    }));\r\n\r\n    const tableData = selected.map((item) => ({\r\n      name: options.find((opt) => opt.id === item)?.name || \"\",\r\n      color: options.find((opt) => opt.id === item)?.color || \"\",\r\n      data: chartData && chartData[item],\r\n    }));\r\n\r\n    console.log(tableData, \"tableDatatableData\");\r\n\r\n    setSeriesData(selectedData);\r\n    setTableData(tableData);\r\n  }, [chartData, selected]);\r\n\r\n  const optionData = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n      },\r\n      // formatter: handleCustomTooltip,\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"4%\",\r\n      bottom: \"3%\",\r\n      top: \"8%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      data: chartData?.years,\r\n      axisLabel: {\r\n        formatter: function (data) {\r\n          return data?.replace(\"Year\", \"\") || \" \";\r\n        },\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      axisLabel: {\r\n        formatter: function (name) {\r\n          return getNumberByLanguage(name);\r\n        },\r\n      },\r\n    },\r\n    series: seriesData,\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-9\">\r\n        <GeneralChart minHeight={300} options={optionData} />\r\n        {tableData?.length > 0 && (\r\n          <DataTable months years={chartData?.years} tableData={tableData} />\r\n        )}\r\n      </div>\r\n      <div className=\"col-md-3 chartOptions\">\r\n        <h6>Select</h6>\r\n        <p>Visualization Parameters</p>\r\n\r\n        <ul>\r\n          {options.map((item) => (\r\n            <li key={item.id}>\r\n              <CustomCheckBox\r\n                id={\"\" + item.id}\r\n                label={item.name}\r\n                onChange={(e) => handleSelect(item.id)}\r\n                checked={selected.includes(item.id)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  language: state.i18nextData.languageType,\r\n  maintainanceCost: state.reportData.maintainanceCostData.data,\r\n  intervalData: state.waterSchemeData.getYearIntervals.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(BarChartThisYear);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\configData.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\index.tsx",["2528","2529"],"import { EditIcon } from \"assets/images/xd\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getSchemeDataAction } from \"store/modules/waterScheme/getWaterSchemeData\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport ManageSupplyBelts from \"./ManageBeneficiaries\";\r\n\r\ninterface IProps extends PropsFromRedux {}\r\n\r\nconst Beneficiaries = (props: IProps) => {\r\n  const { t } = useTranslation([\"home\"]);\r\n\r\n  const [modal, setModal] = React.useState(false);\r\n\r\n  const toggleModal = () => setModal(!modal);\r\n\r\n  React.useEffect(() => {\r\n    if (props.langugae) {\r\n      props.getSchemeDataAction(props.langugae);\r\n    }\r\n  }, [props.langugae]);\r\n\r\n  return (\r\n    <div className=\"tableCard dashboard\">\r\n      <div className=\"table-scroll\">\r\n        <div className=\"data-table data-table-even-stripe\">\r\n          <table className=\"table mt-2\">\r\n            <thead className=\"paddingHeader\">\r\n              <tr>\r\n                <th className=\"\">{t(\"home:applyDate\")}</th>\r\n                <th> {t(\"home:institutions\")}</th>\r\n                <th> {t(\"home:commercial\")}</th>\r\n                <th> {t(\"home:household\")}</th>\r\n                <th> {t(\"home:public\")}</th>\r\n                <th className=\"action\" role=\"button\" onClick={() => toggleModal()}>\r\n                  <img src={EditIcon} />\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.waterSchemeData &&\r\n                props.waterSchemeData instanceof Array &&\r\n                props.waterSchemeData?.map((item) => (\r\n                  <tr key={item.id}>\r\n                    <td>{getNumberByLanguage(item.apply_date)}</td>\r\n                    <td>{getNumberByLanguage(item.institutional_connection)}</td>\r\n                    <td>{getNumberByLanguage(item.commercial_connection)}</td>\r\n                    <td>{getNumberByLanguage(item.household_connection)}</td>\r\n                    <td>{getNumberByLanguage(item.public_connection)}</td>\r\n                    <td></td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <GeneralModal\r\n        open={modal}\r\n        toggle={toggleModal}\r\n        title={t(\"home:edit\") + \" \" + t(\"home:beneficiary\") + \" \" + t(\"home:information\")}\r\n        size=\"xl\"\r\n      >\r\n        <ManageSupplyBelts toggle={setModal} />\r\n      </GeneralModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  langugae: state.i18nextData.languageType,\r\n  waterSchemeData: state.waterSchemeData.getWaterSchemeData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getSchemeDataAction: getSchemeDataAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Beneficiaries);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\InflationParameters\\index.tsx",["2530","2531","2532","2533"],"import FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getInflationParametersAction } from \"store/modules/inflationParameters/getInflationParameters\";\r\nimport { postInflationParametersAction } from \"store/modules/inflationParameters/postInflationParameters\";\r\nimport { updateInflationparametersAction } from \"store/modules/inflationParameters/updateInflationParameters\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\n\r\nconst validationSchema = Yup.object({\r\n  rate: Yup.string().required(\"This field is required\"),\r\n  dis_allow_edit: Yup.mixed().nullable().required(\"This field is required\"),\r\n});\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst InflationParameters = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [initialData, setInitialData] = React.useState({\r\n    rate: 0,\r\n    dis_allow_edit: null as null | OptionType,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.language) {\r\n      props.getInflationParametersAction(props.language);\r\n    }\r\n  }, [props.language]);\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      let response;\r\n      const requestData = {\r\n        ...values,\r\n        dis_allow_edit: values?.dis_allow_edit?.value,\r\n      };\r\n\r\n      if (\r\n        props.inflationParametersList instanceof Array &&\r\n        props.inflationParametersList?.length > 0\r\n      ) {\r\n        const editData = props.inflationParametersList[0];\r\n        response = await props.updateInflationparametersAction(\r\n          props.language,\r\n          editData.id,\r\n          requestData\r\n        );\r\n      } else {\r\n        response = await props.postInflationParametersAction(props.language, requestData);\r\n      }\r\n\r\n      if (response.status === 201 || response.status === 200) {\r\n        if (response.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          setInitialData({\r\n            rate: 0,\r\n            dis_allow_edit: null,\r\n          });\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n        props.getInflationParametersAction(props.language);\r\n      }\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      props.inflationParametersList instanceof Array &&\r\n      props.inflationParametersList?.length > 0\r\n    ) {\r\n      const editData = props.inflationParametersList[0];\r\n      setInitialData({\r\n        ...editData,\r\n        dis_allow_edit: editData?.dis_allow_edit\r\n          ? { label: \"Yes\", value: true }\r\n          : { label: \"No\", value: false },\r\n      });\r\n    }\r\n  }, [props.inflationParametersList]);\r\n\r\n  console.log(props.inflationParametersList, \"inflationParametersList\");\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row rate_form align-items-center\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:daeams\")}{\" \"}\r\n              <TooltipLabel\r\n                id={\"twatm\"}\r\n                text={`This will affect  the Mobile App's Cashbook month Closing`}\r\n              />\r\n              :\r\n            </label>\r\n\r\n            <StyledSelect\r\n              name=\"dis_allow_edit\"\r\n              options={[\r\n                { label: \"Yes\", value: true },\r\n                { label: \"No\", value: false },\r\n              ]}\r\n              value={values.dis_allow_edit}\r\n              onChange={({ name, value }) => {\r\n                setFieldValue(name, value);\r\n                handleSubmit()\r\n              }}\r\n              onBlur={() => {\r\n                setFieldTouched(\"dis_allow_edit\", true);\r\n              }}\r\n            />\r\n            <FormikValidationError name=\"dis_allow_edit\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  postLoading: state.inflationParametersData.postInflationParameters.isFetching,\r\n  updateLoading: state.inflationParametersData.postInflationParameters.isFetching,\r\n  inflationParametersList: state.inflationParametersData.getInflationParameters.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postInflationParametersAction: postInflationParametersAction,\r\n  updateInflationparametersAction: updateInflationparametersAction,\r\n  getInflationParametersAction: getInflationParametersAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(InflationParameters);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\GeneralInfo\\index.tsx",["2534","2535","2536","2537"],"import NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport { default as StyledSelect } from \"components/React/StyledSelect/CreatableSelect\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\nimport { SYSTEM_DATE_FORMAT_OPTIONS } from \"constants/constants\";\r\nimport { useFormik } from \"formik\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps, useDispatch, useSelector } from \"react-redux\";\r\nimport { updateWaterSchemeDetailsAction } from \"store/modules/waterScheme/updateWaterSchemeDetails\";\r\nimport { getWaterSchemeDetailsAction } from \"store/modules/waterScheme/waterSchemeDetails\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport formatDate from \"utils/utilsFunction/date-converter\";\r\nimport { generalInfoInitialValues, generalInfoValidationSchema } from \"./scheme\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst GeneralInfo = (props: Props) => {\r\n  const { t } = useTranslation(\"home\");\r\n\r\n  const dispatch = useDispatch();\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const [initialData, setInitialData] =\r\n    useState<typeof generalInfoInitialValues>(generalInfoInitialValues);\r\n\r\n  const userDetails = useSelector((state: RootState) => state.userDetails);\r\n\r\n  const waterSchemeDetails = useSelector(\r\n    (state: RootState) => state.waterSchemeData.waterSchemeDetailsData.data\r\n  );\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: generalInfoValidationSchema,\r\n    onSubmit: async (values: any) => {\r\n      const requestData = {\r\n        ...values,\r\n        system_date_format: values?.system_date_format?.value,\r\n      };\r\n      let res: any = await props.updateWaterSchemeDetailsAction(\r\n        waterSchemeDetails?.system_date_format,\r\n        waterSchemeDetails?.slug,\r\n        requestData\r\n      );\r\n\r\n      if (res.status === 201 || res.status === 200) {\r\n        toast.success(t(\"home:updateSuccess\"));\r\n        toggleModal();\r\n      } else {\r\n        const errors = Object.values(res.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  const toggleModal = () => setEdit(!edit);\r\n\r\n  React.useEffect(() => {\r\n    if (userDetails?.slug) {\r\n      dispatch(getWaterSchemeDetailsAction(userDetails?.slug));\r\n    }\r\n  }, [userDetails]);\r\n\r\n  React.useEffect(() => {\r\n    if (waterSchemeDetails) {\r\n      setInitialData({\r\n        currency: waterSchemeDetails?.currency || \"\",\r\n        location: waterSchemeDetails?.location,\r\n        scheme_name: waterSchemeDetails?.scheme_name,\r\n        system_built_date: formatDate(waterSchemeDetails?.system_built_date),\r\n        longitude: waterSchemeDetails?.longitude,\r\n        latitude: waterSchemeDetails?.latitude,\r\n        water_source: waterSchemeDetails?.water_source,\r\n        daily_target: \"\" + waterSchemeDetails?.daily_target,\r\n        period: \"\" + waterSchemeDetails?.period || \"\",\r\n        system_date_format:\r\n          SYSTEM_DATE_FORMAT_OPTIONS?.find(\r\n            (item) => item.value === waterSchemeDetails?.system_date_format\r\n          ) || (null as any),\r\n        tool_start_date: waterSchemeDetails?.tool_start_date,\r\n      });\r\n    }\r\n  }, [waterSchemeDetails]);\r\n\r\n  const handleCreateOption = (event) => {\r\n    const waterDource: any = values.water_source;\r\n    waterDource?.push({ label: event, value: event });\r\n    setFieldValue(\"water_source\", waterDource);\r\n  };\r\n\r\n  console.log(errors, \"<<<<<<\");\r\n\r\n  return (\r\n    <GeneralCard title={t(\"home:generalInformation\")} className=\"text-left\" action={toggleModal}>\r\n      <div className=\"data-info\">\r\n        <h6 className=\"title\">\r\n          {t(\"home:scheme\")} {t(\"home:name\")}:{\" \"}\r\n        </h6>\r\n        <p className=\"desc\">{waterSchemeDetails?.scheme_name}</p>\r\n      </div>\r\n      <div className=\"data-info\">\r\n        <h6 className=\"title\">{t(\"home:location\")}: </h6>\r\n        <p className=\"desc\">{waterSchemeDetails?.location}</p>\r\n      </div>\r\n      <div className=\"data-info\">\r\n        <h6 className=\"title\">{t(\"home:waterSource\")}: </h6>\r\n        <p className=\"desc\">{waterSchemeDetails?.water_source}</p>\r\n      </div>\r\n\r\n      <div className=\"data-info\">\r\n        <h6 className=\"title\">\r\n          {t(\"home:systemBuiltDate\")}{\" \"}\r\n          {/* <TooltipLabel\r\n            id={\"sbdate\"}\r\n            text={`Calendar date on which a Water System was built.It does not affect the book \r\nkeeping or in any financial projection.`}\r\n          /> */}\r\n        </h6>\r\n        <p className=\"desc\">\r\n          {getNumberByLanguage(\r\n            new Date(waterSchemeDetails?.system_built_date)?.toLocaleDateString()\r\n          )}\r\n        </p>\r\n      </div>\r\n\r\n      <GeneralModal\r\n        open={edit}\r\n        toggle={toggleModal}\r\n        title={t(\"home:edit\") + \" \" + t(\"home:generalInformation\")}\r\n        size=\"xl\"\r\n      >\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            handleSubmit();\r\n          }}\r\n          className=\"verticalForm\"\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:scheme\")} {t(\"home:name\")}:\r\n                </label>\r\n\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"scheme_name\"\r\n                  value={values.scheme_name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"scheme_name\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:location\")}:\r\n                </label>\r\n\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"location\"\r\n                  value={values.location}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"location\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:waterSource\")}{\" \"}\r\n                  <TooltipLabel\r\n                    id={\"sowsas\"}\r\n                    text={`Sources of water such as (ground water, spring, rivers)`}\r\n                  />\r\n                  :\r\n                </label>\r\n\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"water_source\"\r\n                  value={values.water_source}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n\r\n                <FormikValidationError name=\"water_source\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:dailyTarget\")}{\" \"}\r\n                  <TooltipLabel id={\"twspd\"} text={`Total water supply (in liters) per day `} />:\r\n                </label>\r\n\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"daily_target\"\r\n                  type=\"number\"\r\n                  value={values.daily_target}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"daily_target\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:vsf\")} ( Year ){\" \"}\r\n                  <TooltipLabel\r\n                    id={\"sbdates\"}\r\n                    text={`The number of years for which the data will be visualized`}\r\n                  />\r\n                  :\r\n                </label>\r\n\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"period\"\r\n                  type=\"number\"\r\n                  value={values.period}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"period\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:currency\")}{\" \"}\r\n                  <TooltipLabel id={\"curr\"} text={`The unit of currency to be used. `} />:\r\n                </label>\r\n\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"currency\"\r\n                  type=\"text\"\r\n                  value={values.currency}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"currency\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:systemDateFormat\")}{\" \"}\r\n                  <TooltipLabel\r\n                    id={\"systemDateFormat\"}\r\n                    text={`The format and month names to display with visualization. Current options are EN for English and NP for Nepali.`}\r\n                  />\r\n                  :\r\n                </label>\r\n\r\n                <StyledSelect\r\n                  name=\"system_date_format\"\r\n                  value={values?.system_date_format}\r\n                  options={SYSTEM_DATE_FORMAT_OPTIONS}\r\n                  onChange={({ name, value }) => {\r\n                    setFieldValue(name, value);\r\n                  }}\r\n                  onBlur={() => {\r\n                    setFieldTouched(\"system_date_format\", true);\r\n                  }}\r\n                />\r\n                <FormikValidationError name=\"location\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:systemBuiltDate\")}{\" \"}\r\n                  <TooltipLabel\r\n                    id={\"sbdate\"}\r\n                    text={`Calendar date on which a Water System was built.It does not affect the book \r\nkeeping or in any financial projection.`}\r\n                  />\r\n                  :\r\n                </label>\r\n\r\n                {values.system_date_format?.value === \"nep\" ? (\r\n                  <>\r\n                    <NepaliDatePicker\r\n                      value={values.system_built_date}\r\n                      name=\"system_built_date\"\r\n                      onChange={(e) => {\r\n                        setFieldValue(\"system_built_date\", e);\r\n                      }}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <EnglishDatePicker\r\n                      name=\"system_built_date\"\r\n                      value={values.system_built_date}\r\n                      handleChange={(e) => {\r\n                        setFieldValue(\"system_built_date\", formatDate(e));\r\n                      }}\r\n                    />\r\n                  </>\r\n                )}\r\n                <FormikValidationError name=\"system_built_date\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:longitude\")}:\r\n                </label>\r\n\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"longitude\"\r\n                  type=\"text\"\r\n                  value={values.longitude}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n\r\n                <FormikValidationError name=\"longitude\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:latitude\")}:\r\n                </label>\r\n\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"latitude\"\r\n                  type=\"text\"\r\n                  value={values.latitude}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n\r\n                <FormikValidationError name=\"latitude\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:toolStartDate\")}{\" \"}\r\n                  <TooltipLabel\r\n                    id={\"tsdate\"}\r\n                    text={`The calendar date on which this tool is instantiated for this water system. All projections and records starts at this date. `}\r\n                  />\r\n                  :\r\n                </label>\r\n\r\n                {values.system_date_format?.value === \"nep\" ? (\r\n                  <>\r\n                    <NepaliDatePicker\r\n                      value={values.tool_start_date}\r\n                      name=\"tool_start_date\"\r\n                      onChange={(e) => {\r\n                        setFieldValue(\"tool_start_date\", e);\r\n                      }}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <EnglishDatePicker\r\n                      name=\"tool_start_date\"\r\n                      value={values.tool_start_date}\r\n                      handleChange={(e) => {\r\n                        setFieldValue(\"tool_start_date\", formatDate(e));\r\n                      }}\r\n                    />\r\n                  </>\r\n                )}\r\n                <FormikValidationError name=\"location\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 text-right mt-5\">\r\n              <Button\r\n                className=\"btn custom-btn  mr-3\"\r\n                text={t(\"home:save\")}\r\n                type=\"submit\"\r\n                loading={props.buttonLoading}\r\n                disabled={props.buttonLoading}\r\n              />\r\n              <Button\r\n                className=\"btn custom-btn-outlined mr-3\"\r\n                text={t(\"home:cancel\")}\r\n                type=\"button\"\r\n                onClick={toggleModal}\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </GeneralModal>\r\n    </GeneralCard>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  buttonLoading: state.waterSchemeData.updateWaterSchemeDetails.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateWaterSchemeDetailsAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(GeneralInfo);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\MobileUser\\index.tsx",["2538"],"import { UserIcon } from \"assets/images/xd\";\r\nimport { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getSchemeUserAction } from \"store/modules/waterScheme/getWaterSchemeUser\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport ManageMobileUser from \"./ManageMobileUser\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst MobileUser = (props: Props) => {\r\n  const { t } = useTranslation([\"home\"]);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const toggle = () => setOpen(!open);\r\n\r\n  React.useEffect(() => {\r\n    props.getSchemeUserAction();\r\n  }, []);\r\n\r\n  return (\r\n    <GeneralCard title={t(\"home:mobileAppUsers\")} action={toggle}>\r\n      <div className=\"mobile\">\r\n        <div className=\"mobile-content\">\r\n          {props.caretakerList &&\r\n            props.caretakerList instanceof Array &&\r\n            props.caretakerList.map((item) => (\r\n              <div className=\"mobile-user\" key={item.id}>\r\n                <div className=\"mobile-user-info\">\r\n                  <img src={UserIcon} alt=\"\" className=\"img\" />\r\n                  <div className=\"details\">\r\n                    <h6 className=\"name\">{item.name}</h6>\r\n                    {item.is_care_taker && <p className=\"designation\">{t(\"home:caretaker\")}</p>}\r\n                  </div>\r\n                </div>\r\n                <div className=\"mobile-user-contact\">\r\n                  <p className=\"contact\"> {getNumberByLanguage(item.phone_number)}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n      <GeneralModal\r\n        title={t(\"home:addEdit\") + \" \" + t(\"home:mobileAppUsers\")}\r\n        open={open}\r\n        toggle={toggle}\r\n      >\r\n        <ManageMobileUser toggle={toggle} />\r\n      </GeneralModal>\r\n    </GeneralCard>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  caretakerList: state.waterSchemeData.getWaterSchemeUser.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getSchemeUserAction: getSchemeUserAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(MobileUser);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\index.tsx",["2539"],"import { EditIcon } from \"assets/images/xd\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getWaterSupplyScheduleAction } from \"store/modules/waterSupplySchedule/getWaterSupplySchedule\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport ManageSupply from \"./ManageSupply\";\r\n\r\nexport const formatTime = (time) => {\r\n  const splitTime = time?.split(\":\");\r\n  return splitTime[0] + \":\" + splitTime[1];\r\n};\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst SupplySchedule = (props: Props) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const toggle = () => setOpen(!open);\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      props.getWaterSupplyScheduleAction(props.language, props.schemeSlug);\r\n    }\r\n  }, [props.language, props.schemeSlug]);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"home-right-card\">\r\n      <div className=\"home-right-header\">\r\n        <h6 className=\"home-right-title\">{t(\"home:supplySchedule\")}</h6>\r\n        <div className=\"action\" role=\"button\" onClick={toggle}>\r\n          <img className=\"action\" src={EditIcon} alt=\"\" />\r\n        </div>\r\n      </div>\r\n\r\n      {props.supplySchedule &&\r\n        props.supplySchedule instanceof Array &&\r\n        props.supplySchedule.map((item, index) => (\r\n          <div className=\"home-right-info\" key={index}>\r\n            <h6>{item.day?.toUpperCase()}</h6>\r\n            <span>\r\n              <p>\r\n                {getNumberByLanguage(formatTime(item.time_from))} :\r\n                {getNumberByLanguage(formatTime(item.time_to))}\r\n              </p>\r\n            </span>\r\n          </div>\r\n        ))}\r\n\r\n      <GeneralModal\r\n        title={t(\"home:addEdit\") + \" \" + t(\"home:supplySchedule\")}\r\n        open={open}\r\n        toggle={toggle}\r\n      >\r\n        <ManageSupply toggle={toggle} />\r\n      </GeneralModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  supplySchedule: state.waterSupplyData.waterScheduleData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getWaterSupplyScheduleAction: getWaterSupplyScheduleAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(SupplySchedule);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\Maintainance\\index.tsx",["2540"],"import classnames from \"classnames\";\r\nimport { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Col, Nav, NavItem, NavLink, Row, TabContent, TabPane } from \"reactstrap\";\r\nimport { getMaintainanceCostAction } from \"store/modules/report/maintainanceCost\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport MaintainanceCostChart from \"./MaintainanceCostChart\";\r\nimport MaintainanceCostChartThisYear from \"./MaintainanceCostChartThisYear\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst Maintainance = (props: Props) => {\r\n  const { t } = useTranslation([\"home\"]);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const component = React.useRef<any>(null);\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      if (activeTab === \"1\") {\r\n        props.getMaintainanceCostAction(props.schemeSlug);\r\n      } else {\r\n        props.getMaintainanceCostAction(props.schemeSlug, true);\r\n      }\r\n    }\r\n  }, [props.language, activeTab, props.schemeSlug]);\r\n\r\n  return (\r\n    <div className=\"container py-3 cash-book\">\r\n      <GeneralCard title={t(\"home:maintainance\") + \" \" + t(\"home:cost\")} print={true}>\r\n        <div className=\"cash-content\">\r\n          <div className=\"flex-between\">\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"1\" })}\r\n                  onClick={() => {\r\n                    toggle(\"1\");\r\n                  }}\r\n                >\r\n                  {t(\"home:allTime\")}\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"2\" })}\r\n                  onClick={() => {\r\n                    toggle(\"2\");\r\n                  }}\r\n                >\r\n                  {t(\"home:thisYear\")}\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n\r\n            <span className=\"info-text\">\r\n              {t(\"home:allAmountInRupee\")} {props.currency}\r\n            </span>\r\n          </div>\r\n\r\n          <TabContent activeTab={activeTab} className=\"mt-2\" ref={component}>\r\n            <TabPane tabId=\"1\">\r\n              <Row>\r\n                <Col sm=\"12\">{activeTab === \"1\" && <MaintainanceCostChart />}</Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              <Row>\r\n                <Col sm=\"12\">{activeTab === \"2\" && <MaintainanceCostChartThisYear />}</Col>\r\n              </Row>\r\n            </TabPane>\r\n          </TabContent>\r\n        </div>\r\n      </GeneralCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\r\n  waterTarrifs: state.waterTarrifsData.waterTarrifData.data,\r\n  waterSupplyData: state.waterSupplyData.waterScheduleData.data,\r\n  currency: state.waterSchemeData.waterSchemeDetailsData.data?.currency,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getMaintainanceCostAction: getMaintainanceCostAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Maintainance);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\index.tsx",["2541"],"import classnames from \"classnames\";\r\nimport { GeneralCard } from \"components/UI/GeneralCard\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Col, Nav, NavItem, NavLink, Row, TabContent, TabPane } from \"reactstrap\";\r\nimport { getIncomeExpenseAction } from \"store/modules/report/incomeExpense\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport IncomeExpendGraph from \"./IncomeExpendGraph\";\r\nimport IncomeExpendGraphThisYear from \"./IncomeExpendGraphThisYear\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst IncomeExpend = (props: Props) => {\r\n  const { t } = useTranslation([\"home\"]);\r\n\r\n  const component = React.useRef<any>(null);\r\n\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      if (activeTab === \"1\") {\r\n        props.getIncomeExpenseAction(props.language, props.schemeSlug);\r\n      } else {\r\n        props.getIncomeExpenseAction(props.language, props.schemeSlug, true);\r\n      }\r\n    }\r\n  }, [props.language, activeTab, props.schemeSlug]);\r\n\r\n  return (\r\n    <div className=\"container py-3 cash-book\">\r\n      <GeneralCard title={t(\"home:incomeExpenditure\")} print={true} >\r\n        <div className=\"cash-content\">\r\n          <div className=\"flex-between\">\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"1\" })}\r\n                  onClick={() => {\r\n                    toggle(\"1\");\r\n                  }}\r\n                >\r\n                  {t(\"home:allTime\")}\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === \"2\" })}\r\n                  onClick={() => {\r\n                    toggle(\"2\");\r\n                  }}\r\n                >\r\n                  {t(\"home:thisYear\")}\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <span className=\"info-text\">\r\n              {t(\"home:allAmountInRupee\")} {props.currency}\r\n            </span>\r\n          </div>\r\n\r\n          <TabContent activeTab={activeTab} className=\"mt-2\" ref={component}>\r\n            <TabPane tabId=\"1\">\r\n              <Row>\r\n                <Col sm=\"12\">{activeTab === \"1\" && <IncomeExpendGraph />}</Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              <Row>\r\n                <Col sm=\"12\">{activeTab === \"2\" && <IncomeExpendGraphThisYear />}</Col>\r\n              </Row>\r\n            </TabPane>\r\n          </TabContent>\r\n        </div>\r\n      </GeneralCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  currency: state.waterSchemeData.waterSchemeDetailsData.data?.currency,\r\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getIncomeExpenseAction: getIncomeExpenseAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(IncomeExpend);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\index.tsx",["2542"],"import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  DashboardComponentInfoType,\r\n  getDashboardComponentInfoAction,\r\n} from \"store/modules/maintainance/dashboardComponentInfo\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport CostDataHeader, { CostData } from \"./Components/CostData\";\r\nimport NormalDataHeader, { NormalData } from \"./Components/NormalData\";\r\nimport RiskDataHeader, { RiskData } from \"./Components/RiskData\";\r\nimport Thumbnail from \"assets/images/thumbnail.png\";\r\nimport { SRLWrapper } from \"simple-react-lightbox\";\r\n\r\ninterface IProps extends PropsFromRedux {}\r\n\r\nconst AssetTable = (props: IProps) => {\r\n  const { t } = useTranslation([\"maintainance\"]);\r\n\r\n  const [showRisk, setShowRisk] = React.useState(false);\r\n  const [showCost, setShowCost] = React.useState(false);\r\n\r\n  const [tableData, setTableData] = React.useState<any>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      props.getDashboardComponentInfoAction(props.language, props.schemeSlug);\r\n    }\r\n  }, [props.language, props.schemeSlug]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.componentData) {\r\n      const newGroupedData: any = {};\r\n\r\n      props.componentData?.forEach((data) => {\r\n        if (data.component.category.name in newGroupedData) {\r\n          newGroupedData[data.component.category.name].push(data);\r\n        } else {\r\n          newGroupedData[data.component.category.name] = [data];\r\n        }\r\n      });\r\n      setTableData(newGroupedData);\r\n    }\r\n  }, [props.componentData]);\r\n\r\n  console.log(tableData, \"newGroupedData\");\r\n  return (\r\n    <div className=\"tabular\">\r\n      <table className=\"table-02\">\r\n        <tbody>\r\n          <>\r\n            <tr className=\"\">\r\n              <th scope=\"col\" colSpan={5}></th>\r\n              <th\r\n                scope=\"col\"\r\n                className={showRisk || showCost ? \"placeholder\" : \"top-headers\"}\r\n                colSpan={3}\r\n              >\r\n                {!showRisk && !showCost && t(\"maintainance:mitigation\")}\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={showRisk || showCost ? \"placeholder\" : \"top-headers\"}\r\n                colSpan={3}\r\n              >\r\n                {!showRisk && !showCost && t(\"maintainance:responsible\")}\r\n              </th>\r\n            </tr>\r\n          </>\r\n\r\n          <tr className=\"header\">\r\n            <th scope=\"col\" className=\"bg-header\" style={{ width: 400 }}>\r\n              {t(\"maintainance:assetComponent\")}\r\n            </th>\r\n            <th scope=\"col\" className=\"bg-header\">\r\n              {t(\"maintainance:dopf\")}\r\n            </th>\r\n            <th scope=\"col\" className=\"bg-header\">\r\n              {t(\"maintainance:lifespan\")}\r\n            </th>\r\n\r\n            {showCost ? (\r\n              <CostDataHeader onClick={() => setShowCost(false)} />\r\n            ) : showRisk ? (\r\n              <>\r\n                <RiskDataHeader onClick={() => setShowRisk(false)} />\r\n              </>\r\n            ) : (\r\n              <th\r\n                scope=\"col\"\r\n                rowSpan={2}\r\n                className=\"expand-header risk-tab\"\r\n                role=\"button\"\r\n                onClick={() => setShowRisk(!showRisk)}\r\n              >\r\n                <span className=\"pill\" role=\"button\" onClick={() => setShowRisk(!showRisk)}>\r\n                  {t(\"maintainance:risk\")}\r\n                </span>\r\n                {t(\"maintainance:click\")}\r\n              </th>\r\n            )}\r\n\r\n            {showRisk || showCost ? (\r\n              <></>\r\n            ) : (\r\n              <th\r\n                scope=\"col\"\r\n                rowSpan={2}\r\n                className=\"expand-header  cost-tab\"\r\n                role=\"button\"\r\n                onClick={() => setShowCost(!showCost)}\r\n              >\r\n                <span className=\"pill\" role=\"button\" onClick={() => setShowCost(!showCost)}>\r\n                  {t(\"maintainance:cost\")}\r\n                </span>\r\n                {t(\"maintainance:click\")}\r\n              </th>\r\n            )}\r\n\r\n            {showRisk ||\r\n              (showCost ? (\r\n                <></>\r\n              ) : (\r\n                <>\r\n                  <NormalDataHeader />\r\n                </>\r\n              ))}\r\n          </tr>\r\n\r\n          {tableData &&\r\n            Object.entries(tableData).map((item) => {\r\n              return (\r\n                <React.Fragment>\r\n                  <tr>\r\n                    <td colSpan={showCost ? 8 : 3} className=\"component-title\">\r\n                      {item[0]}\r\n                    </td>\r\n                    <td></td>\r\n                  </tr>\r\n                  {item[1] instanceof Array &&\r\n                    item[1].map((data: DashboardComponentInfoType) => (\r\n                      <tr>\r\n                        <td>\r\n                          <div className=\"d-flex\">\r\n                            <div className=\"component-image-wrapper\">\r\n                              <SRLWrapper>\r\n                                <img src={data.componant_picture || Thumbnail} alt=\"\" />\r\n                              </SRLWrapper>\r\n                            </div>\r\n                            {data.component.name}\r\n                          </div>\r\n                        </td>\r\n                        <td>{data.possible_failure}</td>\r\n                        <td>{data.maintenance_interval} {data.interval_unit}</td>\r\n                        {!showRisk && (\r\n                          <td\r\n                            className={`\r\n                        ${\r\n                          data.resulting_risk_score <= 4\r\n                            ? \"bg-green\"\r\n                            : data.resulting_risk_score <= 8\r\n                            ? \"bg-yellow\"\r\n                            : data.resulting_risk_score <= 12\r\n                            ? \"bg-orange\"\r\n                            : \"bg-red\"\r\n                        }\r\n                        `}\r\n                            role=\"button\"\r\n                            onClick={() => setShowRisk(!showRisk)}\r\n                          >\r\n                            {data.resulting_risk_score}\r\n                          </td>\r\n                        )}\r\n                        {showRisk || showCost ? (\r\n                          <></>\r\n                        ) : (\r\n                          <td className=\"text-center\">\r\n                            {props.currency} {data.seggregated_or_unseggregated_cost}\r\n                          </td>\r\n                        )}\r\n                        {showRisk || showCost ? (\r\n                          <>\r\n                            {showCost ? (\r\n                              <CostData data={data} currency={props.currency} />\r\n                            ) : showRisk ? (\r\n                              <>\r\n                                <RiskData data={data} onClick={() => setShowRisk(false)} />\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <NormalData data={data} />\r\n                          </>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  currency: state.waterSchemeData.waterSchemeDetailsData.data?.currency,\r\n  componentData: state.maintainanceData.dashboardComponentInfoData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getDashboardComponentInfoAction: getDashboardComponentInfoAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(AssetTable);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\InflationParamters\\ManageOtherParameters\\index.tsx",["2543","2544","2545","2546","2547"],"import FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getInflationParametersAction } from \"store/modules/inflationParameters/getInflationParameters\";\r\nimport { postInflationParametersAction } from \"store/modules/inflationParameters/postInflationParameters\";\r\nimport { updateInflationparametersAction } from \"store/modules/inflationParameters/updateInflationParameters\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\n\r\nconst validationSchema = Yup.object({\r\n  rate: Yup.string().required(\"This field is required\"),\r\n});\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst ManageOtherParamaters = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [initialData, setInitialData] = React.useState({\r\n    rate: 0,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.language) {\r\n      props.getInflationParametersAction(props.language);\r\n    }\r\n  }, [props.language]);\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      let response;\r\n      const requestData = {\r\n        ...values, \r\n      };\r\n\r\n      if (\r\n        props.inflationParametersList instanceof Array &&\r\n        props.inflationParametersList?.length > 0\r\n      ) {\r\n        const editData = props.inflationParametersList[0];\r\n        response = await props.updateInflationparametersAction(\r\n          props.language,\r\n          editData.id,\r\n          requestData\r\n        );\r\n      } else {\r\n        response = await props.postInflationParametersAction(props.language, requestData);\r\n      }\r\n\r\n      if (response.status === 201 || response.status === 200) {\r\n        if (response.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          setInitialData({\r\n            rate: 0,\r\n          });\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n        props.getInflationParametersAction(props.language);\r\n      }\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      props.inflationParametersList instanceof Array &&\r\n      props.inflationParametersList?.length > 0\r\n    ) {\r\n      const editData = props.inflationParametersList[0];\r\n      setInitialData({\r\n        ...editData,\r\n      });\r\n    }\r\n  }, [props.inflationParametersList]);\r\n\r\n  console.log(props.inflationParametersList, \"inflationParametersList\");\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row rate_form align-items-center\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:inflation\")} :\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"rate\"\r\n              value={values.rate}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"rate\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"col-md-12 mt-2 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn\"\r\n            text={t(\"home:save\")}\r\n            type=\"submit\"\r\n            disabled={props.postLoading || props.updateLoading}\r\n            loading={props.postLoading || props.updateLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  postLoading: state.inflationParametersData.postInflationParameters.isFetching,\r\n  updateLoading: state.inflationParametersData.postInflationParameters.isFetching,\r\n  inflationParametersList: state.inflationParametersData.getInflationParameters.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postInflationParametersAction: postInflationParametersAction,\r\n  updateInflationparametersAction: updateInflationparametersAction,\r\n  getInflationParametersAction: getInflationParametersAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(ManageOtherParamaters);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\ManageOtherExpenses\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\index.tsx",["2548"],"import { DeleteIcon, EditIconDark } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { deleteComponentInfoAction } from \"store/modules/componentInfo/deleteComponentInfo\";\r\nimport { getComponentInfoByIdAction } from \"store/modules/componentInfo/getComponentInfoById\";\r\nimport {\r\n  DashboardComponentInfoType,\r\n  getDashboardComponentInfoAction,\r\n} from \"store/modules/maintainance/dashboardComponentInfo\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport ComponentInfoForm from \"./ComponentInfoForm\";\r\nimport CostDataHeader, { CostData } from \"./Components/CostData\";\r\nimport NormalDataHeader, { NormalData } from \"./Components/NormalData\";\r\nimport RiskDataHeader, { RiskData } from \"./Components/RiskData\";\r\nimport { SRLWrapper } from \"simple-react-lightbox\";\r\nimport Thumbnail from \"assets/images/thumbnail.png\";\r\n\r\n\r\ninterface IProps extends PropsFromRedux {}\r\n\r\nconst AssetTable = (props: IProps) => {\r\n  const { t } = useTranslation([\"maintainance\"]);\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } =\r\n    useDeleteConfirmation();\r\n\r\n  const [editData, setEditData] = React.useState<any>(null);\r\n  const [modalForm, setModalForm] = React.useState(false);\r\n\r\n  const [showRisk, setShowRisk] = React.useState(false);\r\n  const [showCost, setShowCost] = React.useState(false);\r\n\r\n  const [tableData, setTableData] = React.useState<any>(null);\r\n\r\n  const toggleComponentModal = () => {\r\n    if (modalForm) {\r\n      setEditData(null);\r\n    }\r\n    setModalForm(!modalForm);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      props.getDashboardComponentInfoAction(props.language, props.schemeSlug);\r\n    }\r\n  }, [props.language, props.schemeSlug]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.componentData) {\r\n      const newGroupedData: any = {};\r\n\r\n      props.componentData.forEach((data) => {\r\n        if (data.component.category.name in newGroupedData) {\r\n          newGroupedData[data.component.category.name].push(data);\r\n        } else {\r\n          newGroupedData[data.component.category.name] = [data];\r\n        }\r\n      });\r\n      setTableData(newGroupedData);\r\n    }\r\n  }, [props.componentData]);\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      const response = await props.deleteComponentInfoAction(editId);\r\n      if (response.status === 204) {\r\n        toast.success(t(\"home:deleteSuccess\"));\r\n        props.getDashboardComponentInfoAction(props.language, props.schemeSlug);\r\n        resetDeleteData();\r\n      } else {\r\n        toast.error(t(\"home:deleteError\"));\r\n        resetDeleteData();\r\n      }\r\n    } catch (error) {\r\n      console.log(error, \"error\");\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (id, component) => {\r\n    props.getComponentInfoByIdAction(props.language, id).then((res) => {\r\n      if (res.data) {\r\n        setEditData({ ...res.data, component });\r\n      }\r\n    });\r\n  };\r\n\r\n  console.log(tableData, \"newGroupedData\");\r\n  return (\r\n    <div className=\"tabular\">\r\n      <table className=\"table-02\">\r\n        <tbody>\r\n          <>\r\n            <tr className=\"\">\r\n              <th scope=\"col\" colSpan={6}>\r\n                <Button\r\n                  className=\"btn custom-btn mb-2\"\r\n                  text={t(\"maintainance:aci\")}\r\n                  type=\"submit\"\r\n                  onClick={toggleComponentModal}\r\n                  // disabled={authorizing}\r\n                  // loading={authorizing}\r\n                />\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={showRisk || showCost ? \"placeholder\" : \"top-headers\"}\r\n                colSpan={3}\r\n              >\r\n                {!showRisk && !showCost && t(\"maintainance:mitigation\")}\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={showRisk || showCost ? \"placeholder\" : \"top-headers\"}\r\n                colSpan={3}\r\n              >\r\n                {!showRisk && !showCost && t(\"maintainance:responsible\")}\r\n              </th>\r\n            </tr>\r\n          </>\r\n\r\n          <tr className=\"header\">\r\n            <th scope=\"col\" className=\"bg-header\" style={{ width: 350, borderRadius: \"5px 0 0 0\" }}>\r\n              {t(\"maintainance:assetComponent\")}\r\n            </th>\r\n            <th scope=\"col\" className=\"bg-header\" colSpan={1} style={{  }}>\r\n              {t(\"maintainance:dopf\")}\r\n            </th>\r\n            <th scope=\"col\" className=\"bg-header\" style={{  }}>\r\n              {t(\"maintainance:lifespan\")}\r\n            </th>\r\n            <th scope=\"col\" className=\"bg-header\" style={{ borderRadius: \"0 5px 0 0\" }}>\r\n              {t(\"home:action\")}\r\n            </th>\r\n\r\n            {showCost ? (\r\n              <CostDataHeader onClick={() => setShowCost(false)} />\r\n            ) : showRisk ? (\r\n              <>\r\n                <RiskDataHeader onClick={() => setShowRisk(false)} />\r\n              </>\r\n            ) : (\r\n              <th\r\n                scope=\"col\"\r\n                rowSpan={2}\r\n                className=\"expand-header risk-tab\"\r\n                role=\"button\"\r\n                onClick={() => setShowRisk(!showRisk)}\r\n              >\r\n                <span className=\"pill\" role=\"button\" onClick={() => setShowRisk(!showRisk)}>\r\n                  {t(\"maintainance:risk\")}\r\n                </span>\r\n                {t(\"maintainance:click\")}\r\n              </th>\r\n            )}\r\n\r\n            {showRisk || showCost ? (\r\n              <></>\r\n            ) : (\r\n              <th\r\n                scope=\"col\"\r\n                rowSpan={2}\r\n                className=\"expand-header  cost-tab\"\r\n                role=\"button\"\r\n                onClick={() => setShowCost(!showCost)}\r\n              >\r\n                <span className=\"pill\" role=\"button\" onClick={() => setShowCost(!showCost)}>\r\n                  {t(\"maintainance:cost\")}\r\n                </span>\r\n                {t(\"maintainance:click\")}\r\n              </th>\r\n            )}\r\n\r\n            {showRisk ||\r\n              (showCost ? (\r\n                <></>\r\n              ) : (\r\n                <>\r\n                  <NormalDataHeader />\r\n                </>\r\n              ))}\r\n          </tr>\r\n\r\n          {tableData &&\r\n            Object.entries(tableData).map((item) => {\r\n              return (\r\n                <React.Fragment>\r\n                  <tr>\r\n                    <td colSpan={showCost ? 9 : 4} className=\"component-title\">\r\n                      {item[0]}\r\n                    </td>\r\n                    <td></td>\r\n                  </tr>\r\n                  {item[1] instanceof Array &&\r\n                    item[1].map((data: DashboardComponentInfoType) => (\r\n                      <tr>\r\n                        <td>\r\n                          <div className=\"d-flex\">\r\n                            <div className=\"component-image-wrapper\">\r\n                              <SRLWrapper >\r\n                                <img src={data.componant_picture || Thumbnail} alt=\"\" />\r\n                              </SRLWrapper>\r\n                            </div>\r\n                            {data.component.name}\r\n                          </div>\r\n                        </td>\r\n                        <td>{data.possible_failure}</td>\r\n                        <td>{data.maintenance_interval} {data.interval_unit}</td>\r\n                        <td className=\"action\">\r\n                          <div\r\n                            role=\"button\"\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              handleEditClick(data.id, data.component);\r\n                              toggleComponentModal();\r\n                            }}\r\n                          >\r\n                            <img src={EditIconDark} alt=\"\" />\r\n                          </div>\r\n                          <div\r\n                            role=\"button\"\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              handleDeleteClick(data.id);\r\n                            }}\r\n                          >\r\n                            <img src={DeleteIcon} alt=\"\" />\r\n                          </div>\r\n                        </td>\r\n\r\n                        {!showRisk && (\r\n                          <td\r\n                            className={`\r\n                        ${\r\n                          data.resulting_risk_score <= 4\r\n                            ? \"bg-green\"\r\n                            : data.resulting_risk_score <= 8\r\n                            ? \"bg-yellow\"\r\n                            : data.resulting_risk_score <= 12\r\n                            ? \"bg-orange\"\r\n                            : \"bg-red\"\r\n                        }\r\n                        `}\r\n                            role=\"button\"\r\n                            onClick={() => setShowRisk(!showRisk)}\r\n                          >\r\n                            {data.resulting_risk_score}\r\n                          </td>\r\n                        )}\r\n                        {showRisk || showCost ? (\r\n                          <></>\r\n                        ) : (\r\n                          <td className=\"text-center\">\r\n                            {props.currency} {data.seggregated_or_unseggregated_cost}\r\n                          </td>\r\n                        )}\r\n                        {showRisk || showCost ? (\r\n                          <>\r\n                            {showCost ? (\r\n                              <CostData data={data} currency={props.currency} />\r\n                            ) : showRisk ? (\r\n                              <>\r\n                                <RiskData data={data} onClick={() => setShowRisk(false)} />\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <NormalData data={data} />\r\n                          </>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n\r\n      <GeneralModal\r\n        title={t(\"maintainance:addEditaci\")}\r\n        size=\"xl\"\r\n        open={modalForm}\r\n        toggle={() => {\r\n          if (modalForm) {\r\n            setEditData(null);\r\n          }\r\n          toggleComponentModal();\r\n        }}\r\n      >\r\n        <ComponentInfoForm editData={editData} setEditData={setEditData} toggle={setModalForm} />\r\n      </GeneralModal>\r\n\r\n      <ConfirmationModal\r\n        open={modal}\r\n        handleModal={() => toggleModal()}\r\n        handleConfirmClick={() => handleDelete()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  currency: state.waterSchemeData.waterSchemeDetailsData.data?.currency,\r\n  componentData: state.maintainanceData.dashboardComponentInfoData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getDashboardComponentInfoAction: getDashboardComponentInfoAction,\r\n  deleteComponentInfoAction: deleteComponentInfoAction,\r\n  getComponentInfoByIdAction: getComponentInfoByIdAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(AssetTable);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\ManageComponentLogs\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\getFixedRateIncomeEstimates.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\Visualization\\LineChart\\DataTable.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageComponent\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageCategories\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ExpenseForm.tsx",["2549","2550","2551"],"import NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getExpenditureAction } from \"store/modules/expenditure/getExpenditure\";\r\nimport { getExpenditureCategoryAction } from \"store/modules/expenditure/getExpenditureCategory\";\r\nimport { getPreviousExpenditureTotalAction } from \"store/modules/expenditure/getPreviousExpenditureTotal\";\r\nimport { postExpenseAction } from \"store/modules/expenditure/postExpense\";\r\nimport { updateExpenditureAction } from \"store/modules/expenditure/updateExpense\";\r\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport formatDate, { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst validationScheme = Yup.object({\r\n  category: Yup.mixed().required(\"This field is required\"),\r\n  date: Yup.string().required(\"This field is required\"),\r\n  title: Yup.string().required(\"This field is required\"),\r\n  income_amount: Yup.string().required(\"This field is required\"),\r\n  remarks: Yup.string().required(\"This field is required\"),\r\n});\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  toggle: any;\r\n  setEditData: any;\r\n  activeDate?: string;\r\n}\r\n\r\nconst initialFormData = {\r\n  category: null as any,\r\n  date: \"\",\r\n  title: \"\",\r\n  income_amount: 0,\r\n  labour_cost: 0,\r\n  consumables_cost: 0,\r\n  replacement_cost: 0,\r\n  remarks: \"\",\r\n  is_cost_seggregated: false,\r\n};\r\n\r\nconst ExpenseForm = (props: Props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [initialData, setInitialData] = React.useState(initialFormData);\r\n  const [categoryOption, setCategoryOptions] = React.useState<OptionType[]>();\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      getIncomeCategoryAction(props.schemeSlug);\r\n    }\r\n  }, [props.schemeSlug]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.expenseCategories) {\r\n      const options = props.expenseCategories?.map((item: any) => ({\r\n        label: item.name,\r\n        value: item.id,\r\n        e_name: item.e_name,\r\n      }));\r\n      setCategoryOptions(options);\r\n    }\r\n  }, [props.expenseCategories]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.activeDate) {\r\n      setInitialData({\r\n        ...initialData,\r\n        date: props.activeDate,\r\n      });\r\n    }\r\n  }, [props.activeDate]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      setInitialData({\r\n        ...props.editData,\r\n        category: { label: props.editData?.category?.name, value: props.editData?.category?.id },\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    touched,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationScheme,\r\n    onSubmit: async (submitValue, { resetForm }) => {\r\n      let requestData: any = { ...submitValue, category: submitValue?.category?.value };\r\n      if (values?.category?.e_name === \"Maintenance\" && values?.is_cost_seggregated) {\r\n        requestData.income_amount =\r\n          Number(values?.consumables_cost) +\r\n          Number(values?.labour_cost) +\r\n          Number(values?.replacement_cost);\r\n      }\r\n\r\n      delete requestData.is_cost_seggregated;\r\n\r\n      let res;\r\n      if (props.editData) {\r\n        res = await props.updateExpenditureAction(props.language, props.editData.id, requestData);\r\n      } else {\r\n        res = await props.postExpenseAction(props.language, requestData);\r\n      }\r\n\r\n      if (res.status === 201 || res.status === 200) {\r\n        if (res.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          setInitialData(initialFormData);\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n        props.toggle(false);\r\n        props.setEditData(null);\r\n        props.getExpenditureAction(props.language, props.schemeSlug);\r\n\r\n        props.getExpenditureCategoryAction(props.schemeSlug);\r\n        props.getPreviousExpenditureTotalAction(\r\n          props.language,\r\n          props.schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(props.scheme?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(props.scheme?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n      } else {\r\n        const errors = Object.values(res.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  console.log(values, \"<<<<<\");\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row align-items-end\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"form-group \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\" className=\"mr-1\">\r\n                {t(\"finance:category\")} :\r\n              </label>\r\n\r\n              <StyledSelect\r\n                name=\"category\"\r\n                value={values.category}\r\n                options={categoryOption}\r\n                onChange={({ name, value }) => {\r\n                  setFieldValue(name, value);\r\n                }}\r\n                onBlur={() => {\r\n                  setFieldTouched(\"category\", true);\r\n                }}\r\n              />\r\n\r\n              <FormikValidationError name=\"category\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"form-group \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\" className=\"mr-1\">\r\n                {t(\"finance:date\")} :\r\n              </label>\r\n\r\n              {props.scheme?.system_date_format === \"nep\" ? (\r\n                <>\r\n                  <NepaliDatePicker\r\n                    value={values.date}\r\n                    name=\"date\"\r\n                    onChange={(e) => {\r\n                      setFieldValue(\"date\", e);\r\n                    }}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <EnglishDatePicker\r\n                    name=\"date\"\r\n                    value={values.date}\r\n                    handleChange={(e) => {\r\n                      setFieldValue(\"date\", formatDate(e));\r\n                    }}\r\n                  />\r\n                </>\r\n              )}\r\n              <FormikValidationError name=\"date\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"form-group \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\" className=\"mr-1\">\r\n                {t(\"finance:title\")} :\r\n              </label>\r\n\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              <FormikValidationError name=\"title\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {!values?.is_cost_seggregated && (\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group \">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"finance:amount\")} :\r\n                </label>\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  name=\"income_amount\"\r\n                  value={values.income_amount}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"income_amount\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {values?.category?.e_name === \"Maintenance\" && (\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"form-group \">\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"flexCheckChecked\"\r\n                  name=\"is_cost_seggregated\"\r\n                  checked={values.is_cost_seggregated}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"is_cost_seggregated\", e.target.checked);\r\n                    setFieldValue(\"income_amount\", 0);\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">\r\n                  {t(\"finance:icCostSegregated\")}\r\n                </label>\r\n              </div>\r\n\r\n              <FormikValidationError name=\"is_cost_seggregated\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {values?.category?.e_name === \"Maintenance\" && values?.is_cost_seggregated && (\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group \">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:labour\")} {t(\"home:cost\")}:\r\n                </label>\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  name=\"labour_cost\"\r\n                  value={values.labour_cost}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"labour_cost\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {values?.category?.e_name === \"Maintenance\" && values?.is_cost_seggregated && (\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group \">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:consumable\")} {t(\"home:cost\")}:\r\n                </label>\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  name=\"consumables_cost\"\r\n                  value={values.consumables_cost}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"consumables_cost\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {values?.category?.e_name === \"Maintenance\" && values?.is_cost_seggregated && (\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group \">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:replacement\")} {t(\"home:cost\")}:\r\n                </label>\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  name=\"replacement_cost\"\r\n                  value={values.replacement_cost}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"replacement_cost\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"col-md-12\">\r\n          <div className=\"form-group \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\" className=\"mr-1\">\r\n                {t(\"finance:remarks\")} :\r\n              </label>\r\n\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"remarks\"\r\n                value={values.remarks}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              <FormikValidationError name=\"remarks\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn \"\r\n            text={t(\"home:save\")}\r\n            type=\"submit\"\r\n            disabled={props.postLoading || props.updateLoading}\r\n            loading={props.postLoading || props.updateLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  expenseCategories: state.expenditureData.getExpenditureCategory.data,\r\n  postLoading: state.expenditureData.postExpense.isFetching,\r\n  updateLoading: state.expenditureData.updateExpense.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getExpenditureAction,\r\n  updateExpenditureAction,\r\n  postExpenseAction,\r\n  getExpenditureCategoryAction,\r\n  getPreviousExpenditureTotalAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(ExpenseForm);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\FixedRates\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\UseBased\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\Visualization\\LineChart\\index.tsx",["2552","2553"],"import GeneralChart from \"components/UI/Charts/General\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getYearFromDate } from \"utils/utilsFunction/date-converter\";\r\nimport DataTable from \"./DataTable\";\r\n\r\nconst config = {\r\n  name: \"\",\r\n  type: \"line\",\r\n  smooth: true,\r\n  data: [],\r\n};\r\n\r\ntype SeriesConfig = {\r\n  name: string;\r\n  type: string;\r\n  smooth: boolean;\r\n  data: (string | number)[];\r\n};\r\n\r\ntype ChartDataType = {\r\n  years: (string | number)[];\r\n  actual_income?: (string | number)[];\r\n  actual_expense?: (string | number)[];\r\n  actual_cf?: (string | number)[];\r\n  expected_income?: (string | number)[];\r\n  expected_expense?: (string | number)[];\r\n  expected_cf?: (string | number)[];\r\n};\r\n\r\ninterface Props extends PropsFromRedux {\r\n  selected: string[];\r\n  setSelected: any\r\n}\r\n\r\nconst LineChart = (props: Props) => {\r\n  const { selected , setSelected} = props;\r\n  const { t } = useTranslation();\r\n  const [chartData, setChartData] = useState<ChartDataType>();\r\n\r\n  const [seriesData, setSeriesData] = useState<SeriesConfig[]>();\r\n\r\n  const [tableData, setTableData] = useState<any>();\r\n \r\n\r\n  const options = [\r\n    {\r\n      id: \"actual_income\",\r\n      name: `${t(\"home:actual\")} ${t(\"home:income\")}`,\r\n      color: \"#4DFFFF\",\r\n    },\r\n    {\r\n      id: \"actual_expense\",\r\n      name: `${t(\"home:actual\")} ${t(\"home:expense\")}`,\r\n      color: \"#FF4D4D\",\r\n    },\r\n    {\r\n      id: \"actual_cf\",\r\n      name: `${t(\"home:accf\")}`,\r\n      color: \"#c47df7\",\r\n    },\r\n    { id: \"expected_income\", name: `${t(\"home:expected\")} ${t(\"home:income\")}`, color: \"#fbc757\" },\r\n    {\r\n      id: \"expected_expense\",\r\n      name: `${t(\"home:expected\")} ${t(\"home:expense\")}`,\r\n      color: \"#041C44\",\r\n    },\r\n    {\r\n      id: \"expected_cf\",\r\n      name: `${t(\"home:eccf\")}`,\r\n      color: \"#1d9a36\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const newData: ChartDataType = {\r\n      years: props.incomeExpenseData?.income?.map(\r\n        (item) =>\r\n          `${t(\"home:year\")} ${getNumberByLanguage(item.year_num)} -  ${getNumberByLanguage(\r\n            getYearFromDate(item.year_from)\r\n          )} - ${getNumberByLanguage(getYearFromDate(item.year_to))}`\r\n      ),\r\n      actual_income: props.incomeExpenseData?.income?.map((item) => item.total_amount),\r\n      actual_expense: props.incomeExpenseData?.expense?.map((item) => item.total_amount),\r\n      actual_cf: props.incomeExpenseData?.cf?.map((item) => item.cf),\r\n      expected_income: props.expenseCF?.expected_income?.map((item) => item.income_amount),\r\n      expected_expense: props.expenseCF?.expected_expense?.map((item) => item.expense_amount),\r\n      expected_cf: props.expenseCF?.expected_cf?.map((item) => item.cf),\r\n    };\r\n    setChartData(newData);\r\n  }, [props.incomeExpenseData, props.actualCF, props.expenseCF]);\r\n\r\n  const handleSelect = (name: string) => {\r\n    if (selected?.includes(name)) {\r\n      const filteredData = selected.filter((item) => item !== name);\r\n      setSelected(filteredData);\r\n    } else {\r\n      setSelected([...selected, name]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selectedData = selected.map((item) => ({\r\n      ...config,\r\n      name: options.find((opt) => opt.id === item)?.name || \"\",\r\n      data: chartData && chartData[item],\r\n      itemStyle: { color: options.find((opt) => opt.id === item)?.color || \"\" },\r\n    }));\r\n\r\n    const tableData = selected.map((item) => ({\r\n      name: options.find((opt) => opt.id === item)?.name || \"\",\r\n      color: options.find((opt) => opt.id === item)?.color || \"\",\r\n      data: chartData && chartData[item],\r\n    }));\r\n\r\n    setSeriesData(selectedData);\r\n    setTableData(tableData);\r\n  }, [chartData, selected]);\r\n\r\n  const optionData = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n      },\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"5%\",\r\n      bottom: \"3%\",\r\n      top: \"6%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      boundaryGap: false,\r\n      data: chartData?.years,\r\n      axisLabel: {\r\n        formatter: function (name) {\r\n          return name?.split(\"-\")[0]?.replace(\"Year\", \"\");\r\n        },\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      axisLabel: {\r\n        formatter: function (name) {\r\n          return getNumberByLanguage(name);\r\n        },\r\n      },\r\n    },\r\n    series: seriesData,\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-9\">\r\n        <GeneralChart minHeight={300} options={optionData} />\r\n        {tableData?.length > 0 && <DataTable years={chartData?.years} tableData={tableData} />}\r\n      </div>\r\n      <div className=\"col-md-3 chartOptions\">\r\n        <h6>Select</h6>\r\n        <p>Visualization Parameters</p>\r\n\r\n        <ul>\r\n          {options.map((item) => (\r\n            <li key={item.id}>\r\n              <CustomCheckBox\r\n                id={\"\" + item.id}\r\n                label={item.name}\r\n                onChange={(e) => handleSelect(item.id)}\r\n                checked={selected.includes(item.id)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\r\n  actualCF: state.reportData.actualCumulativeCashFlowData.data,\r\n  expenseCF: state.reportData.expenseCumulativeCashFlowData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(LineChart);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\BarChart\\index.tsx",["2554","2555"],"import GeneralChart from \"components/UI/Charts/General\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { MaintainanceCostSingleType } from \"store/modules/report/maintainanceCost\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getYearFromDate } from \"utils/utilsFunction/date-converter\";\r\nimport DataTable from \"./DataTable\";\r\n\r\ntype SeriesConfig = {\r\n  name: string | undefined;\r\n  type: string;\r\n  stack: string;\r\n  areaStyle: {\r\n    color: string | undefined;\r\n  };\r\n  data: number[];\r\n};\r\n\r\ninterface singleItemType {\r\n  value: any;\r\n  itemStyle: {\r\n    color: string;\r\n  };\r\n}\r\n\r\ninterface ChartDataType {\r\n  actual_unsegregated: singleItemType[];\r\n  actual_material: singleItemType[];\r\n  actual_labor: singleItemType[];\r\n  actual_replacement: singleItemType[];\r\n  expected_unsegregated: singleItemType[];\r\n  expected_material: singleItemType[];\r\n  expected_labor: singleItemType[];\r\n  expected_replacement: singleItemType[];\r\n  expected_total;\r\n  actual_total;\r\n  years: (string | number)[];\r\n}\r\n\r\ninterface Props extends PropsFromRedux {\r\n  selected: string[];\r\n  setSelected: any;\r\n}\r\n\r\nconst BarChart = (props: Props) => {\r\n  const { selected, setSelected } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const [chartData, setChartData] = useState<ChartDataType>();\r\n\r\n  const [seriesData, setSeriesData] = useState<SeriesConfig[]>();\r\n\r\n  const [tableData, setTableData] = useState<any>();\r\n\r\n  const options = [\r\n    {\r\n      id: \"actual_unsegregated\",\r\n      name: `${t(\"home:actual\")} ${t(\"home:unsegregated\")}`,\r\n      color: \"#e69f00\",\r\n    },\r\n    {\r\n      id: \"actual_material\",\r\n      name: `${t(\"home:actual\")} ${t(\"home:consumable\")}`,\r\n      color: \"#56b4e9\",\r\n    },\r\n    {\r\n      id: \"actual_labor\",\r\n      name: `${t(\"home:actual\")} ${t(\"home:labour\")}`,\r\n      color: \"#f0e442\",\r\n    },\r\n    {\r\n      id: \"actual_replacement\",\r\n      name: `${t(\"home:actual\")} ${t(\"home:replacement\")}`,\r\n      color: \"#ea75b6\",\r\n    },\r\n    {\r\n      id: \"expected_unsegregated\",\r\n      name: `${t(\"home:expected\")} ${t(\"home:unsegregated\")}`,\r\n      color: \"#009e73\",\r\n    },\r\n    {\r\n      id: \"expected_material\",\r\n      name: `${t(\"home:expected\")} ${t(\"home:consumable\")}`,\r\n      color: \"#000000\",\r\n    },\r\n    {\r\n      id: \"expected_labor\",\r\n      name: `${t(\"home:expected\")} ${t(\"home:labour\")}`,\r\n      color: \"#d55e00\",\r\n    },\r\n    {\r\n      id: \"expected_replacement\",\r\n      name: `${t(\"home:expected\")} ${t(\"home:replacement\")}`,\r\n      color: \"#0072b2\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (props.maintainanceCost) {\r\n      const sortAndMapArray = (array: MaintainanceCostSingleType[], key: string, color: string) => {\r\n        return array.map((item) => ({\r\n          value: item[key] || 0,\r\n          itemStyle: { color },\r\n        }));\r\n      };\r\n\r\n      const chartData = {\r\n        years: props.maintainanceCost?.expected_cost.map(\r\n          (item, index) =>\r\n            `${t(\"home:year\")} ${getNumberByLanguage(index + 1)} -  ${getNumberByLanguage(\r\n              getYearFromDate(item.date_from)\r\n            )} - ${getNumberByLanguage(getYearFromDate(item.date_to))}`\r\n        ),\r\n        actual_unsegregated: sortAndMapArray(\r\n          props.maintainanceCost.actual_cost,\r\n          \"unsegregated_cost\",\r\n          \"#e69f00\"\r\n        ),\r\n        actual_material: sortAndMapArray(\r\n          props.maintainanceCost.actual_cost,\r\n          \"material_cost\",\r\n          \"#56b4e9\"\r\n        ),\r\n        actual_labor: sortAndMapArray(props.maintainanceCost.actual_cost, \"labour_cost\", \"#f0e442\"),\r\n        actual_replacement: sortAndMapArray(\r\n          props.maintainanceCost.actual_cost,\r\n          \"replacement_cost\",\r\n          \"#ea75b6\"\r\n        ),\r\n        expected_unsegregated: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"unsegregated_cost\",\r\n          \"#009e73\"\r\n        ),\r\n        expected_material: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"material_cost\",\r\n          \"#000000\"\r\n        ),\r\n        expected_labor: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"labour_cost\",\r\n          \"#d55e00\"\r\n        ),\r\n        expected_replacement: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"replacement_cost\",\r\n          \"#0072b2\"\r\n        ),\r\n        expected_total: props.maintainanceCost.expected_cost.map((item) => ({\r\n          date: item.maintenance_date__year,\r\n          value: item.actual_cost_total || 0,\r\n        })),\r\n\r\n        actual_total: props.maintainanceCost.actual_cost.map((item) => ({\r\n          date: item.maintenance_date__year,\r\n          value: item.actual_cost_total || 0,\r\n        })),\r\n      };\r\n\r\n      setChartData(chartData);\r\n    }\r\n  }, [props.language, props.maintainanceCost]);\r\n\r\n  const handleSelect = (name: string) => {\r\n    if (selected?.includes(name)) {\r\n      const filteredData = selected.filter((item) => item !== name);\r\n      setSelected(filteredData);\r\n    } else {\r\n      setSelected([...selected, name]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selectedData = selected.map((item, index) => ({\r\n      name: options.find((opt) => opt.id === item)?.name,\r\n      type: \"bar\",\r\n      stack: item?.includes(\"expec\") ? \"expected\" : \"actual\",\r\n      areaStyle: {\r\n        color: options.find((opt) => opt.id === item)?.color,\r\n      },\r\n      data: chartData && chartData[item],\r\n    }));\r\n\r\n    const tableData = selected.map((item) => ({\r\n      name: options.find((opt) => opt.id === item)?.name || \"\",\r\n      color: options.find((opt) => opt.id === item)?.color || \"\",\r\n      data: chartData && chartData[item],\r\n    }));\r\n\r\n    setSeriesData(selectedData);\r\n    setTableData(tableData);\r\n  }, [chartData, selected]);\r\n\r\n  const optionData = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n      },\r\n      // formatter: handleCustomTooltip,\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"4%\",\r\n      bottom: \"3%\",\r\n      top: \"8%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      data: chartData?.years,\r\n      axisLabel: {\r\n        formatter: function (name) {\r\n          return name?.split(\"-\")[0]?.replace(\"Year\", \"\");\r\n        },\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      axisLabel: {\r\n        formatter: function (name) {\r\n          return getNumberByLanguage(name);\r\n        },\r\n      },\r\n    },\r\n    series: seriesData,\r\n  };\r\n\r\n  console.log(seriesData, \"->>>> asdadad\");\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-9\">\r\n        <GeneralChart minHeight={300} options={optionData} />\r\n        {tableData?.length > 0 && <DataTable years={chartData?.years} tableData={tableData} />}\r\n      </div>\r\n      <div className=\"col-md-3 chartOptions\">\r\n        <h6>Select</h6>\r\n        <p>Visualization Parameters</p>\r\n\r\n        <ul>\r\n          {options.map((item) => (\r\n            <li key={item.id}>\r\n              <CustomCheckBox\r\n                id={\"\" + item.id}\r\n                label={item.name}\r\n                onChange={(e) => handleSelect(item.id)}\r\n                checked={selected.includes(item.id)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  maintainanceCost: state.reportData.maintainanceCostData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(BarChart);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\IncomeEstimates\\ThisYear\\index.tsx",["2556","2557"],"import { HouseIcon, InstitutionIcon, UserGroupIcon, UserIcon } from \"assets/images/xd\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getFixedRateIncomeEstimatesAction } from \"store/modules/waterTarrifs/getFixedRateIncomeEstimates\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport Table from \"./Table\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\n\r\ninterface IProps extends PropsFromRedux {\r\n  rateType;\r\n}\r\n\r\nconst IncomeEstimatesThisYear = (props: IProps) => {\r\n  const { t } = useTranslation();\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      props.getUsIncomeEstimateThisYearAction(props.schemeSlug);\r\n    }\r\n  }, [props.schemeSlug]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-2 col-md-2\">\r\n          <div className=\"estimates\">\r\n            <span>{t(\"finance:incomeEstimateTY\")}</span>\r\n            <h5>\r\n              {props.scheme?.currency}. {getNumberByLanguage(props.incomeEstimates?.total_income)}\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-2 col-md-2\">\r\n          <div className=\"estimates\">\r\n            <span>{t(\"home:households\")}</span>\r\n            <h6>\r\n              <img src={HouseIcon} alt=\"\" className=\"icon\" />{\" \"}\r\n              {getNumberByLanguage(props.incomeEstimates?.household_connection)}\r\n            </h6>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-2 col-md-2\">\r\n          <div className=\"estimates\">\r\n            <span>{t(\"home:public\")}</span>\r\n            <h6>\r\n              <img src={UserIcon} alt=\"\" className=\"icon\" />{\" \"}\r\n              {getNumberByLanguage(props.incomeEstimates?.public_connection)}\r\n            </h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-2 col-md-2\">\r\n          <div className=\"estimates\">\r\n            <span>{t(\"home:institutions\")}</span>\r\n            <h6>\r\n              <img src={InstitutionIcon} alt=\"\" className=\"icon\" />{\" \"}\r\n              {getNumberByLanguage(props.incomeEstimates?.institutional_connection)}\r\n            </h6>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-2 col-md-2\">\r\n          <div className=\"estimates\">\r\n            <span>{t(\"home:commercial\")}</span>\r\n            <h6>\r\n              <img src={InstitutionIcon} alt=\"\" className=\"icon\" />{\" \"}\r\n              {getNumberByLanguage(props.incomeEstimates?.commercial_connection)}\r\n            </h6>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-2 col-md-2\">\r\n          <div className=\"estimates\">\r\n            <span>{t(\"home:totalConn\")} </span>\r\n            <h6> {getNumberByLanguage(props.incomeEstimates?.total_connection)}</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Table />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  incomeEstimates: state.waterTarrifsData.getIncomeEstimateThisYear.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getUsIncomeEstimateThisYearAction: getFixedRateIncomeEstimatesAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(IncomeEstimatesThisYear);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\DonoughtChart\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\GeneralCard\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\Forms\\Buttons\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\StyledSelect\\StyledSelect.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\DataTable.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\Visualization\\DonoughtChart\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\BarChart\\DataTable.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\assets\\images\\xd\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\GeneralInfo\\scheme.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\utils\\utilsFunction\\sorting.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\CustomRadio\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\Maintainance\\MaintainanceCostChartThisYear.tsx",["2558"],"import GeneralChart from \"components/UI/Charts/General\";\r\nimport { getFiscalYearData, getMonthByLanguageAndScheme, getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { MaintainanceCostSingleType } from \"store/modules/report/maintainanceCost\";\r\nimport { RootState } from \"store/root-reducer\";\r\n\r\nexport type TotalDataYear = {\r\n  date: number;\r\n  actualCost: number;\r\n  unsegregated: number;\r\n  material: number;\r\n  labour: number;\r\n  replacement: number;\r\n};\r\n\r\nexport type TotalYearType = {\r\n  date: number;\r\n  value: number | null;\r\n};\r\n\r\nexport type CustomSingleData = {\r\n  value: string | number;\r\n  itemStyle: { color: string };\r\n};\r\n\r\nexport type IncomeExpenseType = {\r\n  unsegregated: CustomSingleData[];\r\n  material: CustomSingleData[];\r\n  labor: CustomSingleData[];\r\n  replacement: CustomSingleData[];\r\n  total?: TotalYearType[];\r\n};\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst MaintainanceCostChartThisYear = (props: Props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [year, setYear] = useState<(string | number)[]>();\r\n  const [actualCost, setActualCost] = useState<IncomeExpenseType | null>(null);\r\n  const [expectedCost, setExpectedCost] = useState<IncomeExpenseType | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (props.maintainanceCost && props.intervalData) {\r\n      const fiscalYearArray = getFiscalYearData(\r\n        props.intervalData,\r\n        props.schemeDetails?.system_date_format\r\n      );\r\n\r\n      const sortAndMapArray = (\r\n        array: MaintainanceCostSingleType[],\r\n        monthKey: string,\r\n        key: string,\r\n        color: string\r\n      ) => {\r\n        return fiscalYearArray?.map((item) => {\r\n          const findElement = array?.find((inc) => {\r\n            return +inc[monthKey] < 10\r\n              ? +inc[monthKey]?.toString()?.replace(\"0\", \"\") === +item\r\n              : +inc[monthKey] === +item;\r\n          });\r\n          return {\r\n            value: findElement ? findElement[key] : 0,\r\n            itemStyle: { color },\r\n          };\r\n        });\r\n      };\r\n\r\n      const yearData = fiscalYearArray?.map((item) => {\r\n        return getMonthByLanguageAndScheme(item, props.schemeDetails?.system_date_format);\r\n      });\r\n\r\n      const actualCost = {\r\n        unsegregated: sortAndMapArray(\r\n          props.maintainanceCost.actual_cost,\r\n          \"maintenance_date__month\",\r\n          \"unsegregated_cost\",\r\n          \"#e69f00\"\r\n        ),\r\n        material: sortAndMapArray(\r\n          props.maintainanceCost.actual_cost,\r\n          \"maintenance_date__month\",\r\n          \"material_cost\",\r\n          \"#56b4e9\"\r\n        ),\r\n        labor: sortAndMapArray(\r\n          props.maintainanceCost.actual_cost,\r\n          \"maintenance_date__month\",\r\n          \"labour_cost\",\r\n          \"#f0e442\"\r\n        ),\r\n        replacement: sortAndMapArray(\r\n          props.maintainanceCost.actual_cost,\r\n          \"maintenance_date__month\",\r\n          \"replacement_cost\",\r\n          \"#ea75b6\"\r\n        ),\r\n\r\n        total: props.maintainanceCost.actual_cost.map((item) => ({\r\n          date: item.maintenance_date__month,\r\n          value: item.actual_cost_total || 0,\r\n        })),\r\n      };\r\n\r\n      const expectedCost = {\r\n        unsegregated: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"next_action__month\",\r\n          \"unsegregated_cost\",\r\n          \"#009e73\"\r\n        ),\r\n        material: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"next_action__month\",\r\n          \"material_cost\",\r\n          \"#000000\"\r\n        ),\r\n        labor: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"next_action__month\",\r\n          \"labour_cost\",\r\n          \"#d55e00\"\r\n        ),\r\n        replacement: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"next_action__month\",\r\n          \"replacement_cost\",\r\n          \"#0072b2\"\r\n        ),\r\n        total: props.maintainanceCost.expected_cost.map((item) => ({\r\n          date: item.maintenance_date__month,\r\n          value: item.actual_cost_total || 0,\r\n        })),\r\n      };\r\n\r\n      setYear(yearData);\r\n      setActualCost(actualCost);\r\n      setExpectedCost(expectedCost);\r\n    }\r\n  }, [props.maintainanceCost, props.intervalData]);\r\n\r\n  return (\r\n    <>\r\n      <GeneralChart\r\n        minHeight={350}\r\n        options={{\r\n          tooltip: {\r\n            trigger: \"axis\",\r\n            axisPointer: {\r\n              type: \"shadow\",\r\n            },\r\n            // formatter: handleCustomTooltip,\r\n          },\r\n          legend: {\r\n            show: false,\r\n          },\r\n          grid: {\r\n            left: \"3%\",\r\n            right: \"4%\",\r\n            bottom: \"3%\",\r\n            top: \"8%\",\r\n            containLabel: true,\r\n          },\r\n          xAxis: {\r\n            type: \"category\",\r\n            data: year,\r\n            axisLabel: {\r\n              formatter: function (data) {\r\n                return data?.replace(\"Year\", \"\") || \" \";\r\n              },\r\n            },\r\n          },\r\n          yAxis: {\r\n            type: \"value\",\r\n            axisLabel: {\r\n              formatter: function (name) {\r\n                return getNumberByLanguage(name);\r\n              },\r\n            },\r\n          },\r\n          series: [\r\n            {\r\n              name: `${t(\"home:expected\")} ${t(\"home:unsegregated\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar\",\r\n              areaStyle: {\r\n                color: \"red\",\r\n              },\r\n              data: expectedCost?.unsegregated,\r\n            },\r\n            {\r\n              name: `${t(\"home:expected\")} ${t(\"home:consumable\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar\",\r\n              data: expectedCost?.material,\r\n            },\r\n            {\r\n              name: `${t(\"home:expected\")} ${t(\"home:labour\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar\",\r\n              data: expectedCost?.labor,\r\n            },\r\n            {\r\n              name: `${t(\"home:expected\")} ${t(\"home:replacement\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar\",\r\n              data: expectedCost?.labor,\r\n            },\r\n            {\r\n              name: `${t(\"home:actual\")} ${t(\"home:unsegregated\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar2\",\r\n              data: actualCost?.unsegregated,\r\n            },\r\n            {\r\n              name: `${t(\"home:actual\")} ${t(\"home:consumable\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar2\",\r\n              data: actualCost?.material,\r\n            },\r\n            {\r\n              name: `${t(\"home:actual\")} ${t(\"home:labour\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar2\",\r\n              data: actualCost?.labor,\r\n            },\r\n            {\r\n              name: `${t(\"home:actual\")} ${t(\"home:replacement\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar2\",\r\n              data: actualCost?.replacement,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n\r\n      <div className=\"cost-desc table-responsive mt-4\">\r\n        <table>\r\n          <tr className=\"expected\">\r\n            <td>\r\n              <h5>{t(\"home:expectedCost\")}</h5>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"unseg\"></span>\r\n                {t(\"home:unsegregated\")} {t(\"home:cost\")}\r\n              </h6>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"material\"></span>\r\n                {t(\"home:maintainanceCost\")}\r\n              </h6>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"labour\"></span>\r\n                {t(\"home:labour\")} {t(\"home:cost\")}\r\n              </h6>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"replacement\"></span>\r\n                {t(\"home:replacement\")} {t(\"home:cost\")}\r\n              </h6>\r\n            </td>\r\n          </tr>\r\n          <tr className=\"actual\">\r\n            <td>\r\n              <h5>{t(\"home:actualCost\")}</h5>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"unseg\"></span>\r\n                {t(\"home:unsegregated\")} {t(\"home:cost\")}\r\n              </h6>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"material\"></span>\r\n                {t(\"home:maintainanceCost\")}\r\n              </h6>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"labour\"></span>\r\n                {t(\"home:labour\")} {t(\"home:cost\")}\r\n              </h6>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"replacement\"></span>\r\n                {t(\"home:replacement\")} {t(\"home:cost\")}\r\n              </h6>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  language: state.i18nextData.languageType,\r\n  maintainanceCost: state.reportData.maintainanceCostData.data,\r\n  waterTarrifs: state.waterTarrifsData.waterTarrifData.data,\r\n  intervalData: state.waterSchemeData.getYearIntervals.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(MaintainanceCostChartThisYear);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\IncomeExpendGraphThisYear.tsx",["2559"],"import GeneralChart from \"components/UI/Charts/General\";\r\nimport { getFiscalYearData, getMonthByLanguageAndScheme, getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport IncomeExpendTable from \"./IncomeExpendTable\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst IncomeExpendGraphThisYear = (props: Props) => {\r\n  const { incomeExpenseData } = props;\r\n  const { t } = useTranslation([\"home\"]);\r\n\r\n  const [months, setMonths] = useState<(string | number)[]>([]);\r\n  const [income, setIncome] = useState<(string | number)[]>([]);\r\n  const [expense, setExpense] = useState<(string | number)[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (incomeExpenseData && props.intervalData) {\r\n      const fiscalYearArray = getFiscalYearData(\r\n        props.intervalData,\r\n        props.schemeDetails?.system_date_format\r\n      );\r\n\r\n      const yearArray = fiscalYearArray?.map((item) => {\r\n        return getMonthByLanguageAndScheme(item, props.schemeDetails?.system_date_format);\r\n      });\r\n\r\n      const incomeArray = fiscalYearArray?.map((item) => {\r\n        return (\r\n          incomeExpenseData.income?.find((inc) => {\r\n            return +inc.date__month < 10\r\n              ? +inc.date__month?.toString()?.replace(\"0\", \"\") === item\r\n              : +inc.date__month === item;\r\n          })?.total_amount || 0\r\n        );\r\n      });\r\n\r\n      const expenseArray = fiscalYearArray?.map((item) => {\r\n        return (\r\n          incomeExpenseData.expense?.find((inc) => {\r\n            return +inc.date__month < 10\r\n              ? +inc.date__month?.toString()?.replace(\"0\", \"\") === item\r\n              : +inc.date__month === item;\r\n          })?.total_amount || 0\r\n        );\r\n      });\r\n\r\n      setMonths(yearArray);\r\n      setIncome(incomeArray || []);\r\n      setExpense(expenseArray || []);\r\n    }\r\n  }, [incomeExpenseData, props.intervalData]);\r\n\r\n  return (\r\n    <>\r\n      <GeneralChart\r\n        minHeight={350}\r\n        options={{\r\n          tooltip: {\r\n            trigger: \"axis\",\r\n            axisPointer: {\r\n              type: \"shadow\",\r\n            },\r\n            // formatter: handleCustomTooltip,\r\n          },\r\n          legend: {\r\n            show: false,\r\n          },\r\n          grid: {\r\n            left: \"3%\",\r\n            right: \"4%\",\r\n            bottom: \"3%\",\r\n            top: \"8%\",\r\n            containLabel: true,\r\n          },\r\n          xAxis: {\r\n            type: \"category\",\r\n            boundaryGap: false,\r\n            data: months,\r\n            axisLabel: {\r\n              formatter: function (name) {\r\n                return name?.replace(\"Year\", \"\") || \"\";\r\n              },\r\n            },\r\n          },\r\n          yAxis: {\r\n            type: \"value\",\r\n            axisLabel: {\r\n              formatter: function (name) {\r\n                return getNumberByLanguage(name);\r\n              },\r\n            },\r\n          },\r\n          series: [\r\n            {\r\n              name: `${t(\"home:total\")} ${t(\"home:income\")} `,\r\n              type: \"line\",\r\n              smooth: true,\r\n              data: income,\r\n              lineStyle: { color: \"#4DFFFF\" },\r\n            },\r\n            {\r\n              name: `${t(\"home:total\")} ${t(\"home:expense\")} `,\r\n              type: \"line\",\r\n              smooth: true,\r\n              data: expense,\r\n              lineStyle: { color: \"#ff4D4D\" },\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n\r\n      <IncomeExpendTable months heading={months} income={income} expense={expense} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\r\n  intervalData: state.waterSchemeData.getYearIntervals.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(IncomeExpendGraphThisYear);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\ManageOtherExpenses\\List.tsx",["2560"],"import { DeleteIcon, EditIconDark } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { deleteOtherExpensesAction } from \"store/modules/otherExpenses/deleteOtherExpenses\";\r\nimport { getOtherExpensesAction } from \"store/modules/otherExpenses/getOtherExpenses\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  setEditData: any;\r\n}\r\n\r\nconst OtherExpenseList = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } = useDeleteConfirmation();\r\n\r\n  React.useEffect(() => {\r\n    if (props.language) {\r\n      props.getOtherExpensesAction(props.language);\r\n    }\r\n  }, [props.language]);\r\n\r\n  const handleDelete = async () => {\r\n    const response: any = await props.deleteOtherExpensesAction(props.language, editId);\r\n\r\n    if (response.status === 204) {\r\n      // toast.success(t('home:deleteSuccess'));\r\n      props.getOtherExpensesAction(props.language);\r\n      resetDeleteData();\r\n    } else {\r\n      toast.error(t('home:deleteError'));;\r\n      resetDeleteData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-table mt-4\">\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table mt-2\">\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"home:sn\")}</th>\r\n              <th>{t(\"finance:transactionType\")}</th>\r\n              <th>{t(\"finance:expenseHeading\")}</th>\r\n              <th>{t(\"finance:yearlyExpnd\")}</th>\r\n              <th>{t(\"home:action\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.otherExpenseList?.map((item, index) => (\r\n              <tr key={item.id}>\r\n                <td>{getNumberByLanguage(index + 1)}</td>\r\n                <td> {item.category}</td>\r\n                <td> {item.title}</td>\r\n\r\n                <td>\r\n                  {props.scheme?.currency}. {item.yearly_expense || \"-\"}\r\n                </td>\r\n                <td className=\"action\">\r\n                  <div role=\"button\" onClick={() => props.setEditData(item)}>\r\n                    <img src={EditIconDark} alt=\"\" />\r\n                  </div>\r\n                  <div role=\"button\" onClick={() => handleDeleteClick(item.id)}>\r\n                    <img src={DeleteIcon} alt=\"\" />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <ConfirmationModal\r\n        open={modal}\r\n        handleModal={() => toggleModal()}\r\n        handleConfirmClick={() => handleDelete()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  otherExpenseList: state.otherExpensesData.getOtherExpenseData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getOtherExpensesAction,\r\n  deleteOtherExpensesAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(OtherExpenseList);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\List.tsx",["2561"],"import { DeleteIcon, EditIconDark } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps, useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteTestParametersAction } from \"store/modules/testParamters/deleteTestParameters\";\r\nimport { getTestParametersAction } from \"store/modules/testParamters/getTestParameters\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  setEditData: any;\r\n  toggle: any;\r\n}\r\n\r\nconst List = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } =\r\n    useDeleteConfirmation();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getTestParametersAction());\r\n  }, []);\r\n\r\n  const testParameters = useSelector(\r\n    (state: RootState) => state.testParamtersData.testParametersData.data\r\n  );\r\n\r\n  const deleteTestParameters = async () => {\r\n    try {\r\n      const response = await props.deleteTestParametersAction(editId);\r\n      console.log(response, \"response\");\r\n      if (response.status === 204) {\r\n        toast.success(t(\"home:deleteSuccess\"));\r\n        props.getTestParametersAction();\r\n        resetDeleteData();\r\n      } else {\r\n        toast.error(t(\"home:deleteError\"));\r\n        resetDeleteData();\r\n      }\r\n    } catch (error) {\r\n      console.log(error, \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-table mt-4\">\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table mt-2\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{ borderRadius: \"5px 0 0 0\" }}>{t(\"home:sn\")}</th>\r\n              <th>{t(\"home:parameter\")}</th>\r\n              <th>{t(\"home:units\")}</th>\r\n              <th>{t(\"home:ndwq\")}</th>\r\n              <th style={{ borderRadius: \"0 5px 0 0\" }}>{t(\"home:action\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {testParameters &&\r\n              testParameters?.map((item, index) => (\r\n                <tr key={item.id}>\r\n                  <td>{getNumberByLanguage(index + 1)}</td>\r\n                  <td> {item.parameter_name}</td>\r\n                  <td> {item.unit || \"-\"}</td>\r\n                  <td>{item.NDWQS_standard || \"-\"}</td>\r\n\r\n                  <td className=\"action justify-content-center\">\r\n                    <div role=\"button\" onClick={() => props.setEditData(item)}>\r\n                      <img src={EditIconDark} alt=\"\" className=\"mr-4\" />\r\n                    </div>\r\n                    <div role=\"button\" onClick={() => handleDeleteClick(item.id)}>\r\n                      <img src={DeleteIcon} alt=\"\" />\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <ConfirmationModal\r\n        open={modal}\r\n        handleModal={() => toggleModal()}\r\n        handleConfirmClick={() => deleteTestParameters()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  supplySchedule: state.waterSupplyData.waterScheduleData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  deleteTestParametersAction,\r\n  getTestParametersAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(List);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\Form.tsx",["2562","2563"],"import FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getTestParametersAction } from \"store/modules/testParamters/getTestParameters\";\r\nimport { postTestParametersAction } from \"store/modules/testParamters/postTestParameters\";\r\nimport { updateTestParametersAction } from \"store/modules/testParamters/updateTestParameters\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { testParametersInitialValues, testParametersValidationSchema } from \"./schema\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { PARAMETER_TYPES_OPTIONS } from \"constants/constants\";\r\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  toggle: any;\r\n  setEditData: any;\r\n}\r\n\r\nconst Form = (props: Props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [initialData, seetInitialData] = React.useState<typeof testParametersInitialValues>(\r\n    testParametersInitialValues\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      seetInitialData({\r\n        ...props.editData,\r\n        types: PARAMETER_TYPES_OPTIONS.find((item) => item.value === props.editData.types) || null,\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    setFieldTouched,\r\n    setFieldValue,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: testParametersValidationSchema,\r\n    onSubmit: async (submitValue, { resetForm }) => {\r\n      let res;\r\n      if (props.editData) {\r\n        res = await props.updateTestParametersAction(props.editData.id, {\r\n          ...submitValue,\r\n          types: submitValue.types?.value,\r\n        });\r\n      } else {\r\n        res = await props.postTestParametersAction({\r\n          ...submitValue,\r\n          types: submitValue.types?.value,\r\n        });\r\n      }\r\n      if (res.status === 201 || res.status === 200) {\r\n        if (res.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          props.setEditData(null);\r\n          seetInitialData(testParametersInitialValues);\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n        props.getTestParametersAction();\r\n      } else {\r\n        const errors = Object.values(res.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"home:parameter\")} {t(\"home:name\")}:\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"parameter_name\"\r\n              value={values.parameter_name}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"parameter_name\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"home:unit\")}:\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"unit\"\r\n              value={values.unit}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"unit\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"home:ndwq\")} <TooltipLabel id={\"NDWQ\"} text={`The quality standards for drinking water`} />:\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"NDWQS_standard\"\r\n              value={values.NDWQS_standard}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"NDWQS_standard\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"home:types\")}:\r\n            </label>\r\n\r\n            <StyledSelect\r\n              name=\"types\"\r\n              value={values?.types}\r\n              options={PARAMETER_TYPES_OPTIONS}\r\n              onChange={({ name, value }) => {\r\n                setFieldValue(name, value);\r\n              }}\r\n              onBlur={() => {\r\n                setFieldTouched(\"types\", true);\r\n              }}\r\n            />\r\n            <FormikValidationError name=\"types\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn  mr-3\"\r\n            text={t(\"home:save\")}\r\n            disabled={props.loading}\r\n            loading={props.loading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  loading:\r\n    state.testParamtersData.postTestParameters.isFetching ||\r\n    state.testParamtersData.updateTestParameters.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getTestParametersAction,\r\n  updateTestParametersAction,\r\n  postTestParametersAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Form);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\ManageComponentLogs\\List.tsx",["2564","2565","2566"],"import { DeleteIcon, EditIconDark } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { deleteComponentLogsAction } from \"store/modules/componentLogs/deleteComponentLogs\";\r\nimport { getComponentLogsAction } from \"store/modules/componentLogs/getComponentLogs\";\r\nimport { getComponentLogsByIdAction } from \"store/modules/componentLogs/getComponentLogsById\";\r\nimport { RootState } from \"store/root-reducer\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  setEditData: any;\r\n  toggle: any;\r\n  issueType?: any;\r\n}\r\n\r\nconst ManageComponentLists = (props: Props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } =\r\n    useDeleteConfirmation();\r\n\r\n  const [logTypeData, setLogTypeData] = React.useState<any>([]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.language) {\r\n      props.getComponentLogsAction(props.language);\r\n    }\r\n  }, [props.language]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.componentInfoLogs) {\r\n      if (props.issueType) {\r\n        const issueLogs = props.componentInfoLogs.filter((item) => item.log_type === \"Issue\");\r\n        setLogTypeData(issueLogs);\r\n      } else {\r\n        const maintainanceLog = props.componentInfoLogs.filter(\r\n          (item) => item.log_type !== 'Issue'\r\n        );\r\n        setLogTypeData(maintainanceLog);\r\n      }\r\n    }\r\n  }, [props.componentInfoLogs, props.issueType]);\r\n\r\n  const handleDelete = async () => {\r\n    const response: any = await props.deleteComponentLogsAction(editId);\r\n\r\n    if (response.status === 204) {\r\n      toast.success(t(\"home:deleteSuccess\"));\r\n      props.getComponentLogsAction(props.language);\r\n    } else {\r\n      toast.error(t(\"home:deleteError\"));\r\n    }\r\n    toggleModal();\r\n  };\r\n\r\n  const handleEditClick = (id) => {\r\n    props.getComponentLogsByIdAction(props.language, id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-table mt-4\">\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table mt-2\">\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"home:sn\")}</th>\r\n              <th>{t(\"maintainance:component\")}</th>\r\n              <th>\r\n                {t(\"home:maintainance\")} {t(\"home:date\")}\r\n              </th>\r\n              <th>{t(\"home:duration\")}</th>\r\n              <th>\r\n                {t(\"home:total\")} {t(\"home:cost\")}\r\n              </th>\r\n              <th>{t(\"home:action\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {logTypeData?.map((item, index) => (\r\n              <tr key={item.id}>\r\n                <td>{getNumberByLanguage(index + 1)}</td>\r\n                <td> {item.component}</td>\r\n                <td> {item.maintenance_date}</td>\r\n                <td> {item.duration}</td>\r\n                <td> {item.cost_total}</td>\r\n\r\n                <td className=\"action\">\r\n                  <div\r\n                    role=\"button\"\r\n                    onClick={() => {\r\n                      props.setEditData(item);\r\n                      props.toggle();\r\n                    }}\r\n                  >\r\n                    <img src={EditIconDark} alt=\"\" />\r\n                  </div>\r\n                  <div role=\"button\" onClick={() => handleDeleteClick(item.id)}>\r\n                    <img src={DeleteIcon} alt=\"\" />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <ConfirmationModal\r\n        open={modal}\r\n        handleModal={() => toggleModal()}\r\n        handleConfirmClick={() => handleDelete()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  componentInfoLogs: state.componentLogs.getComponentLogs.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  deleteComponentLogsAction: deleteComponentLogsAction,\r\n  getComponentLogsAction: getComponentLogsAction,\r\n  getComponentLogsByIdAction: getComponentLogsByIdAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(ManageComponentLists);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\ManageComponentLogs\\Form.tsx",["2567","2568","2569"],"import NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getComponentInfoAction } from \"store/modules/componentInfo/getComponentInfo\";\r\nimport { getComponentLogsAction } from \"store/modules/componentLogs/getComponentLogs\";\r\nimport { postComponentLogsAction } from \"store/modules/componentLogs/postComponentLogs\";\r\nimport { updateComponentLogsAction } from \"store/modules/componentLogs/updateComponentLogs\";\r\nimport { getDashboardComponentInfoAction } from \"store/modules/maintainance/dashboardComponentInfo\";\r\nimport { getSupplyBeltsAction } from \"store/modules/supplyBelts/getWaterSupplyBelts\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport formatDate from \"utils/utilsFunction/date-converter\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst LOG_TYPE_OPTIONS = [\r\n  {\r\n    label: \"Maintenance\",\r\n    value: \"Maintenance\",\r\n  },\r\n  {\r\n    label: \"Issue\",\r\n    value: \"Issue\",\r\n  },\r\n];\r\n\r\nconst validationSchema = Yup.object({\r\n  component: Yup.mixed().nullable().required(\"This field is required\"),\r\n  log_type: Yup.mixed().nullable().required(\"This field is required\"),\r\n  maintenance_date: Yup.string().required(\"This field is required\"),\r\n  possible_failure: Yup.string().required(\"This field is required\"),\r\n  maintenance_action: Yup.string().required(\"This field is required\"),\r\n  duration: Yup.string().required(\"This field is required\"),\r\n  cost_total: Yup.string().required(\"This field is required\"),\r\n  labour_cost: Yup.string().required(\"This field is required\"),\r\n  material_cost: Yup.string().required(\"This field is required\"),\r\n  replacement_cost: Yup.string().required(\"This field is required\"),\r\n  remarks: Yup.string().required(\"This field is required\").nullable(),\r\n});\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  setEditData: any;\r\n  toggle: any;\r\n}\r\n\r\nconst ComponentLists = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [initialData, setInitialData] = React.useState({\r\n    component: null as null | OptionType,\r\n    log_type: null as null | OptionType,\r\n    maintenance_date: \"\",\r\n    possible_failure: \"\",\r\n    maintenance_action: \"\",\r\n    duration: \"\",\r\n    cost_total: 0,\r\n    labour_cost: 0,\r\n    material_cost: 0,\r\n    replacement_cost: 0,\r\n    remarks: \"\",\r\n    is_cost_seggregated: false,\r\n  });\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      let response;\r\n      const requestData = {\r\n        ...values,\r\n        component: values.component?.value,\r\n        cost_total: values?.is_cost_seggregated\r\n          ? Number(values?.material_cost) +\r\n            Number(values?.replacement_cost) +\r\n            Number(values?.labour_cost)\r\n          : values?.cost_total,\r\n      };\r\n\r\n      if (props.editData) {\r\n        response = await props.updateComponentLogsAction(\r\n          props.language,\r\n          props.editData.id,\r\n          requestData\r\n        );\r\n      } else {\r\n        response = await props.postComponentLogsAction(props.language, requestData);\r\n      }\r\n\r\n      if (response.status === 201 || response.status === 200) {\r\n        if (response.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          setInitialData({\r\n            component: null as null | OptionType,\r\n            log_type: null as null | OptionType,\r\n            maintenance_date: \"\",\r\n            possible_failure: \"\",\r\n            maintenance_action: \"\",\r\n            duration: \"\",\r\n            cost_total: 0,\r\n            labour_cost: 0,\r\n            material_cost: 0,\r\n            replacement_cost: 0,\r\n            remarks: \"\",\r\n            is_cost_seggregated: false,\r\n          });\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n        props.setEditData(null);\r\n        props.toggle();\r\n        props.getComponentLogsAction(props.language);\r\n      } else {\r\n        const errors = Object.values(response.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.scheme) {\r\n      props.getDashboardComponentInfoAction(props.language, props.scheme?.slug);\r\n    }\r\n  }, [props.scheme]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      const editData = {\r\n        ...props.editData,\r\n        cost_total: props.editData?.cost_total || 0,\r\n        labour_cost: props.editData?.labour_cost || 0,\r\n        material_cost: props.editData?.material_cost || 0,\r\n        replacement_cost: props.editData?.replacement_cost || 0,\r\n        component: { value: props.editData.component, label: props.editData.component_name },\r\n      };\r\n      delete editData.componant_picture;\r\n      delete editData.supply_belt;\r\n      setInitialData(editData);\r\n    }\r\n  }, [props.editData]);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row rate_form align-items-center\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"maintainance:component\")}\r\n            </label>\r\n\r\n            <StyledSelect\r\n              name=\"component\"\r\n              options={props.componentInfoOptions || []}\r\n              value={values.component}\r\n              onChange={({ name, value }) => {\r\n                setFieldValue(name, value);\r\n              }}\r\n              onBlur={() => {\r\n                setFieldTouched(\"component\", true);\r\n              }}\r\n            />\r\n            <FormikValidationError name=\"component\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"maintainance:logType\")}\r\n            </label>\r\n\r\n            <StyledSelect\r\n              name=\"log_type\"\r\n              options={LOG_TYPE_OPTIONS}\r\n              value={LOG_TYPE_OPTIONS?.find((opt: any) => opt.label === values?.log_type) || null}\r\n              onChange={({ name, value }) => {\r\n                setFieldValue(name, value && value[\"value\"]);\r\n              }}\r\n              onBlur={() => {\r\n                setFieldTouched(\"log_type\", true);\r\n              }}\r\n            />\r\n            <FormikValidationError name=\"log_type\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:maintainance\")} {t(\"home:date\")} :\r\n            </label>\r\n\r\n            {props.scheme?.system_date_format === \"nep\" ? (\r\n              <>\r\n                <NepaliDatePicker\r\n                  value={values.maintenance_date}\r\n                  name=\"maintenance_date\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"date\", e);\r\n                  }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <EnglishDatePicker\r\n                  name=\"maintenance_date\"\r\n                  value={values.maintenance_date}\r\n                  handleChange={(e) => {\r\n                    setFieldValue(\"maintenance_date\", formatDate(e));\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n            <FormikValidationError name=\"maintenance_date\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"finance:possibleFailure\")} :\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"possible_failure\"\r\n              value={values.possible_failure}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"possible_failure\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:maintainance\")} {t(\"home:action\")} :\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"maintenance_action\"\r\n              value={values.maintenance_action}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"maintenance_action\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:duration\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"duration\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"form-group \">\r\n            <CustomCheckBox\r\n              id={\"is_cost_seggregated\"}\r\n              label={t(\"finance:icCostSegregated\")}\r\n              checked={values.is_cost_seggregated}\r\n              onChange={(e) => setFieldValue(\"is_cost_seggregated\", e.target.checked)}\r\n            />\r\n\r\n            <FormikValidationError name=\"is_cost_seggregated\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        {!values.is_cost_seggregated && (\r\n          <div className=\"col-md-4\">\r\n            <div className=\"form-group \">\r\n              <label htmlFor=\"\" className=\"mr-1 \">\r\n                {t(\"home:total\")} {t(\"home:cost\")}:\r\n              </label>\r\n\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"cost_total\"\r\n                value={values.cost_total}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              <FormikValidationError name=\"cost_total\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {values.is_cost_seggregated && (\r\n          <div className=\"col-md-4\">\r\n            <div className=\"form-group \">\r\n              <label htmlFor=\"\" className=\"mr-1 \">\r\n                {t(\"home:labor\")} {t(\"home:cost\")} :\r\n              </label>\r\n\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"labour_cost\"\r\n                value={values.labour_cost}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              <FormikValidationError name=\"labour_cost\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {values.is_cost_seggregated && (\r\n          <div className=\"col-md-4\">\r\n            <div className=\"form-group \">\r\n              <label htmlFor=\"\" className=\"mr-1 \">\r\n                {t(\"home:material\")} {t(\"home:cost\")} :\r\n              </label>\r\n\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"material_cost\"\r\n                value={values.material_cost}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              <FormikValidationError name=\"material_cost\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {values.is_cost_seggregated && (\r\n          <div className=\"col-md-4\">\r\n            <div className=\"form-group \">\r\n              <label htmlFor=\"\" className=\"mr-1 \">\r\n                {t(\"home:replacement\")} {t(\"home:cost\")} :\r\n              </label>\r\n\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"replacement_cost\"\r\n                value={values.replacement_cost}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              <FormikValidationError name=\"replacement_cost\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"finance:remarks\")} :\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"remarks\"\r\n              value={values.remarks}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"remarks\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 mt-2 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn mr-2\"\r\n            text={t(\"home:save\")}\r\n            type=\"submit\"\r\n            disabled={props.postLoading || props.updateLoading}\r\n            loading={props.postLoading || props.updateLoading}\r\n          />\r\n          <Button\r\n            className=\"btn custom-btn-outlined mr-3\"\r\n            text={t(\"home:cancel\")}\r\n            onClick={() => props.toggle()}\r\n            type=\"button\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  postLoading: state.componentLogs.postComponentLogs.isFetching,\r\n  updateLoading: state.componentLogs.updateComponentLogs.isFetching,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  componentInfoOptions: state.maintainanceData.dashboardComponentInfoData.data?.map((item) => ({\r\n    label: item?.component?.name,\r\n    value: item?.component?.id,\r\n  })),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postComponentLogsAction: postComponentLogsAction,\r\n  updateComponentLogsAction: updateComponentLogsAction,\r\n  getComponentInfoAction: getComponentInfoAction,\r\n  getSupplyBeltsAction: getSupplyBeltsAction,\r\n  getComponentLogsAction: getComponentLogsAction,\r\n  getDashboardComponentInfoAction: getDashboardComponentInfoAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(ComponentLists);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\ComponentInfoForm.tsx",["2570","2571","2572","2573"],"import NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport {\r\n  IMPACT_OF_FAILURE_OPTIONS,\r\n  MITIGATION_OPTIONS,\r\n  POSSIBILITY_OF_FAILURE_OPTIONS,\r\n  RESPONSIBLE_OPTIONS,\r\n} from \"constants/constants\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getComponentAction } from \"store/modules/component/getComponent\";\r\nimport { postComponentInfoAction } from \"store/modules/componentInfo/postComponentInfo\";\r\nimport { updateComponentInfoAction } from \"store/modules/componentInfo/updateComponentInfo\";\r\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\r\nimport { getDashboardComponentInfoAction } from \"store/modules/maintainance/dashboardComponentInfo\";\r\nimport { getSupplyBeltsAction } from \"store/modules/supplyBelts/getWaterSupplyBelts\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport formatDate from \"utils/utilsFunction/date-converter\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\nimport CustomCheckBox from \"components/UI/CustomCheckbox\";\r\n\r\nconst initialFormValues = {\r\n  possible_failure: \"\",\r\n  component_numbers: \"\",\r\n  description: \"\",\r\n  maintenance_cost: 0,\r\n  labour_cost: 0.0,\r\n  material_cost: 0.0,\r\n  replacement_cost: 0.0,\r\n  maintenance_action: \"\",\r\n  maintenance_interval: \"\",\r\n  next_action: \"\",\r\n  apply_date: \"\",\r\n  componant_picture: null as any,\r\n  component: null as OptionType | null,\r\n  impact_of_failure: null as OptionType | null,\r\n  possibility_of_failure: null as OptionType | null,\r\n  mitigation: null as OptionType | null,\r\n  responsible: \"\",\r\n  interval_unit: \"Year\",\r\n  is_cost_seggregated: false,\r\n};\r\n\r\nconst validationScheme = Yup.object({\r\n  component: Yup.mixed().required(\"This field is required\"),\r\n  possible_failure: Yup.string().required(\"This field is required\"),\r\n  component_numbers: Yup.string().required(\"This field is required\"),\r\n  maintenance_cost: Yup.number().required(\"This field is required\"),\r\n  labour_cost: Yup.string().nullable(),\r\n  material_cost: Yup.string().nullable(),\r\n  replacement_cost: Yup.string().nullable(),\r\n  maintenance_action: Yup.string().required(\"This field is required\"),\r\n  maintenance_interval: Yup.string().required(\"This field is required\"),\r\n  impact_of_failure: Yup.mixed().required(\"This field is required\"),\r\n  possibility_of_failure: Yup.mixed().required(\"This field is required\"),\r\n  mitigation: Yup.mixed().required(\"This field is required\"),\r\n  responsible: Yup.string().required(\"This field is required\"),\r\n  next_action: Yup.string().required(\"This field is required\"),\r\n  apply_date: Yup.string().required(\"This field is required\"),\r\n  interval_unit: Yup.string().required(\"This field is required\"),\r\n});\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  toggle: any;\r\n  setEditData: any;\r\n}\r\n\r\nconst ExpenseForm = (props: Props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [initialData, setInitialData] = React.useState(initialFormValues);\r\n  const [categoryOption, setCategoryOptions] = React.useState<OptionType[]>();\r\n  const [imagePreview, setImagePreview] = React.useState<any>(\"\");\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      getIncomeCategoryAction(props.schemeSlug);\r\n      props.getComponentAction();\r\n    }\r\n  }, [props.schemeSlug]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.components) {\r\n      const options = props.components?.map((item) => ({\r\n        label: \"\" + item.name,\r\n        value: \"\" + item.id,\r\n      }));\r\n      setCategoryOptions(options);\r\n    }\r\n  }, [props.components]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      setInitialData({\r\n        ...props.editData,\r\n        component: { label: props.editData?.component?.name, value: props.editData?.component?.id },\r\n        possibility_of_failure: POSSIBILITY_OF_FAILURE_OPTIONS.find(\r\n          (item) => item.value === props.editData?.possibility_of_failure\r\n        ),\r\n        impact_of_failure: IMPACT_OF_FAILURE_OPTIONS.find(\r\n          (item) => item.value === props.editData?.impact_of_failure\r\n        ),\r\n        mitigation: MITIGATION_OPTIONS.find((item) => item.value === props.editData?.mitigation),\r\n        responsible: props.editData?.responsible,\r\n        apply_date: props.editData.apply_date || \"\",\r\n      });\r\n\r\n      if (props.editData?.componant_picture) {\r\n        setImagePreview(props.editData?.componant_picture);\r\n      }\r\n    } else {\r\n      setInitialData({\r\n        ...initialFormValues,\r\n        apply_date: props.scheme?.tool_start_date,\r\n      });\r\n    }\r\n  }, [props.editData, props.scheme, props.yearIntervals]);\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    touched,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationScheme,\r\n    onSubmit: async (submitValue, { resetForm }) => {\r\n      let requestData = {\r\n        ...submitValue,\r\n        component: submitValue?.component?.value,\r\n        impact_of_failure: submitValue?.impact_of_failure?.value,\r\n        possibility_of_failure: submitValue?.possibility_of_failure?.value,\r\n        mitigation: submitValue?.mitigation?.value,\r\n        responsible: submitValue?.responsible,\r\n        maintenance_cost: +values.maintenance_cost,\r\n        labour_cost: +values.labour_cost,\r\n        material_cost: +values.material_cost,\r\n        replacement_cost: +values.replacement_cost,\r\n      };\r\n\r\n      if (values.componant_picture && values.componant_picture instanceof File) {\r\n        requestData.componant_picture = values.componant_picture;\r\n      } else {\r\n        delete requestData.componant_picture;\r\n      }\r\n\r\n      let res;\r\n      if (props.editData) {\r\n        res = await props.updateComponentInfoAction(props.language, props.editData.id, requestData);\r\n      } else {\r\n        res = await props.postComponentInfoAction(props.language, requestData);\r\n      }\r\n\r\n      if (res.status === 201 || res.status === 200) {\r\n        if (res.status === 201) {\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n        setInitialData(initialFormValues);\r\n        props.toggle(false);\r\n        props.setEditData(null);\r\n        props.getDashboardComponentInfoAction(props.language, props.schemeSlug);\r\n      } else {\r\n        const errors = Object.values(res.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleImagePreview = (file) => {\r\n    var reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function () {\r\n      setImagePreview(reader.result);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n  };\r\n\r\n  const handleMaintenanceIntervalChange = (value, unit) => {\r\n    if (unit === \"Year\") {\r\n      const nextActionDate =\r\n        props.yearIntervals?.find((date) => String(value).split(\".\")[0] === String(date.year_num))\r\n          ?.start_date || \"\";\r\n      setFieldValue(\"next_action\", nextActionDate);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"maintainance:component\")} {t(\"home:name\")} :\r\n            </label>\r\n\r\n            <StyledSelect\r\n              name=\"component\"\r\n              value={values.component}\r\n              options={categoryOption}\r\n              onChange={({ name, value }) => {\r\n                setFieldValue(name, value);\r\n              }}\r\n              onBlur={() => {\r\n                setFieldTouched(\"component\", true);\r\n              }}\r\n            />\r\n\r\n            <FormikValidationError name=\"component\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:number\")} {t(\"finance:of\")} {t(\"maintainance:components\")}{\" \"}\r\n              <TooltipLabel id={\"nocints\"} text={`Number of component in the system.`} />\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"component_numbers\"\r\n              value={values.component_numbers}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"component_numbers\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:possibleFailure\")}:\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"possible_failure\"\r\n              value={values.possible_failure}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"possible_failure\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:maintainanceAction\")}:\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"maintenance_action\"\r\n              value={values.maintenance_action}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"maintenance_action\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:maintainanceInterval\")}:\r\n            </label>\r\n\r\n            <div className=\"input-group component-info\">\r\n              <input\r\n                type=\"number\"\r\n                id=\"border-right\"\r\n                className=\"form-control \"\r\n                name=\"maintenance_interval\"\r\n                value={values.maintenance_interval}\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                  handleMaintenanceIntervalChange(e.target.value, values?.interval_unit);\r\n                }}\r\n                onBlur={handleBlur}\r\n                step=\"0.1\"\r\n              />\r\n              <select\r\n                id=\"border-left\"\r\n                className=\"form-control\"\r\n                name=\"interval_unit\"\r\n                value={values.interval_unit}\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n                onBlur={handleBlur}\r\n              >\r\n                <option value=\"Year\">Year</option>\r\n                <option value=\"Month\">Month</option>\r\n                <option value=\"Day\">Day</option>\r\n              </select>\r\n            </div>\r\n\r\n            <FormikValidationError name=\"maintenance_interval\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"form-group \">\r\n            <CustomCheckBox\r\n              id={\"is_cost_seggregated\"}\r\n              label={t(\"finance:icCostSegregated\")}\r\n              checked={values.is_cost_seggregated}\r\n              onChange={(e) => setFieldValue(\"is_cost_seggregated\", e.target.checked)}\r\n            />\r\n\r\n            <FormikValidationError name=\"is_cost_seggregated\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        {!values.is_cost_seggregated && (\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"form-group \">\r\n              <label htmlFor=\"\" className=\"mr-1\">\r\n                {t(\"home:maintainance\")} {t(\"home:cost\")} ({props.scheme?.currency}):\r\n              </label>\r\n\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"maintenance_cost\"\r\n                value={values.maintenance_cost}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              <FormikValidationError name=\"maintenance_cost\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {values.is_cost_seggregated && (\r\n          <>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"finance:LabourCost\")} ({props.scheme?.currency}):\r\n                </label>\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  name=\"labour_cost\"\r\n                  value={values.labour_cost}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"labour_cost\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"finance:MaterialCost\")} ({props.scheme?.currency}):\r\n                </label>\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  name=\"material_cost\"\r\n                  value={values.material_cost}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"material_cost\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"finance:ReplacementCost\")} ({props.scheme?.currency}):\r\n                </label>\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  name=\"replacement_cost\"\r\n                  value={values.replacement_cost}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"replacement_cost\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:pof\")} :\r\n            </label>\r\n\r\n            <StyledSelect\r\n              name=\"possibility_of_failure\"\r\n              value={values.possibility_of_failure}\r\n              options={POSSIBILITY_OF_FAILURE_OPTIONS}\r\n              onChange={({ name, value }) => {\r\n                setFieldValue(name, value);\r\n              }}\r\n              onBlur={() => {\r\n                setFieldTouched(\"possibility_of_failure\", true);\r\n              }}\r\n            />\r\n\r\n            <FormikValidationError\r\n              name=\"possibility_of_failure\"\r\n              errors={errors}\r\n              touched={touched}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:iof\")}:\r\n            </label>\r\n\r\n            <StyledSelect\r\n              name=\"impact_of_failure\"\r\n              value={values.impact_of_failure}\r\n              options={IMPACT_OF_FAILURE_OPTIONS}\r\n              onChange={({ name, value }) => {\r\n                setFieldValue(name, value);\r\n              }}\r\n              onBlur={() => {\r\n                setFieldTouched(\"impact_of_failure\", true);\r\n              }}\r\n            />\r\n\r\n            <FormikValidationError name=\"impact_of_failure\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:mitigation\")}:\r\n            </label>\r\n\r\n            <StyledSelect\r\n              name=\"mitigation\"\r\n              value={values.mitigation}\r\n              options={MITIGATION_OPTIONS}\r\n              onChange={({ name, value }) => {\r\n                setFieldValue(name, value);\r\n              }}\r\n              onBlur={() => {\r\n                setFieldTouched(\"mitigation\", true);\r\n              }}\r\n            />\r\n\r\n            <FormikValidationError name=\"mitigation\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:person\")}:\r\n            </label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"responsible\"\r\n              value={values.responsible}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n\r\n            <FormikValidationError name=\"responsible\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:applyDate\")}{\" \"}\r\n              <TooltipLabel id={\"apd\"} text={`The date from which this record  should be applied to the system.`} />:\r\n            </label>\r\n\r\n            {props.scheme?.system_date_format === \"nep\" ? (\r\n              <>\r\n                <NepaliDatePicker\r\n                  value={values.apply_date}\r\n                  name=\"apply_date\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"apply_date\", e);\r\n                  }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <EnglishDatePicker\r\n                  name=\"apply_date\"\r\n                  value={values.apply_date}\r\n                  handleChange={(e) => {\r\n                    setFieldValue(\"apply_date\", formatDate(e));\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n            <FormikValidationError name=\"apply_date\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:nextActionDate\")}{\" \"}\r\n              <TooltipLabel\r\n                id={\"mada\"}\r\n                text={`It is a date on which the next maintenance action is scheduled.`}\r\n              />\r\n              :\r\n            </label>\r\n\r\n            {props.scheme?.system_date_format === \"nep\" ? (\r\n              <>\r\n                <NepaliDatePicker\r\n                  value={values.next_action}\r\n                  name=\"next_action\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"next_action\", e);\r\n                  }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <EnglishDatePicker\r\n                  name=\"next_action\"\r\n                  value={values.next_action}\r\n                  handleChange={(e) => {\r\n                    setFieldValue(\"next_action\", formatDate(e));\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n            <FormikValidationError name=\"next_action\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:componentPicture\")}:\r\n            </label>\r\n\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/png, image/jpeg\"\r\n              className=\"form-control\"\r\n              name=\"componant_picture\"\r\n              onChange={(e) => {\r\n                if (e.target.files) {\r\n                  setFieldValue(e.target.name, e.target.files[0]);\r\n                  handleImagePreview(e.target.files[0]);\r\n                }\r\n              }}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"next_action\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          {imagePreview && (\r\n            <div className=\"form-group \">\r\n              <div className=\"align-vertical justify-content-end\">\r\n                <img src={imagePreview} alt=\"\" width={150} height={100} />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-md-12 text-right\">\r\n        <Button\r\n          className=\"btn custom-btn  mr-3\"\r\n          text={t(\"home:save\")}\r\n          type=\"submit\"\r\n          loading={props.postLoading || props.updateLoading}\r\n          disabled={props.postLoading || props.updateLoading}\r\n          // disabled={authorizing}\r\n          // loading={authorizing}\r\n        />\r\n        <Button\r\n          className=\"btn custom-btn-outlined  mr-3\"\r\n          text={t(\"home:cancel\")}\r\n          type=\"button\"\r\n          onClick={() => props.toggle()}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  components: state.component.getComponent.data,\r\n  supplyBelts: state.supplyBeltsData.getSupplyBeltData.data,\r\n  postLoading: state.componentInfo.postComponentInfo.isFetching,\r\n  updateLoading: state.componentInfo.updateComponentInfo.isFetching,\r\n  yearIntervals: state.waterSchemeData.getYearIntervals.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getComponentAction,\r\n  getSupplyBeltsAction,\r\n  postComponentInfoAction,\r\n  updateComponentInfoAction,\r\n  getDashboardComponentInfoAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(ExpenseForm);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\ManageOtherExpenses\\Form.tsx",["2574","2575"],"import FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport { Form, useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { postOtherExpensesAction } from \"store/modules/otherExpenses/postOtherExpenses\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport { updateOtherExpensesAction } from \"store/modules/otherExpenses/updateOtherExpenses\";\r\nimport { getOtherExpensesAction } from \"store/modules/otherExpenses/getOtherExpenses\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport formatDate from \"utils/utilsFunction/date-converter\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\r\nimport { EXPENSE_CATTEGORY } from \"constants/constants\";\r\nimport CustomRadio from \"components/UI/CustomRadio\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\n\r\nconst validationSchema = Yup.object({\r\n  apply_date: Yup.string().required(\"This field is required\"),\r\n  title: Yup.string().required(\"This field is required\"),\r\n  yearly_expense: Yup.string().required(\"This field is required\"),\r\n  category: Yup.string().required(\"This field is required\"),\r\n  apply_for_specific_date: Yup.boolean().required(\"This field is required\"),\r\n});\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n}\r\n\r\nconst OtherExpenseForm = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [initialData, setInitialData] = React.useState({\r\n    apply_date: \"\",\r\n    category: \"\" as OptionType | string,\r\n    title: \"\",\r\n    yearly_expense: \"\",\r\n    apply_for_specific_date: true,\r\n    one_time_cost: true,\r\n  });\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    setFieldTouched,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      let response;\r\n\r\n      if (props.editData) {\r\n        response = await props.updateOtherExpensesAction(props.language, props.editData.id, values);\r\n      } else {\r\n        response = await props.postOtherExpensesAction(props.language, values);\r\n      }\r\n\r\n      if (response.status === 201 || response.status === 200) {\r\n        if (response.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n          props.getOtherExpensesAction(props.language);\r\n        } else {\r\n          setInitialData({\r\n            apply_date: \"\",\r\n            category: \"\",\r\n            title: \"\",\r\n            yearly_expense: \"\",\r\n            apply_for_specific_date: true,\r\n            one_time_cost: true,\r\n          });\r\n          props.getOtherExpensesAction(props.language);\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      setInitialData({\r\n        ...props.editData,\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row rate_form align-items-center\">\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:applyDate\")}{\" \"}\r\n              <TooltipLabel id={\"apd\"} text={`The date from which this record  should be applied to the system.`} />:\r\n            </label>\r\n\r\n            {props.scheme?.system_date_format === \"nep\" ? (\r\n              <>\r\n                <NepaliDatePicker\r\n                  value={values.apply_date}\r\n                  name=\"apply_date\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"apply_date\", e);\r\n                  }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <EnglishDatePicker\r\n                  name=\"apply_date\"\r\n                  value={values.apply_date}\r\n                  handleChange={(e) => {\r\n                    setFieldValue(\"apply_date\", formatDate(e));\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n            <FormikValidationError name=\"date\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:expenseHeading\")} :\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"title\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:yearlyExpnd\")} :\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"yearly_expense\"\r\n              type=\"number\"\r\n              value={values.yearly_expense}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"yearly_expense\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:transactionType\")} :\r\n            </label>\r\n\r\n            <StyledSelect\r\n              name=\"category\"\r\n              value={EXPENSE_CATTEGORY?.find((item) => item.value === values.category) || null}\r\n              options={EXPENSE_CATTEGORY}\r\n              onChange={({ name, value }: any) => {\r\n                setFieldValue(name, value?.value);\r\n              }}\r\n            />\r\n            <FormikValidationError name=\"yearly_expense\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:afsd\")} :\r\n            </label>\r\n\r\n            <div className=\"d-flex\">\r\n              <div className=\"mr-2\">\r\n                <CustomRadio\r\n                  label={\"Yes\"}\r\n                  id=\"yes\"\r\n                  name=\"apply_for_specific_date\"\r\n                  value={1}\r\n                  checked={values.apply_for_specific_date === true}\r\n                  onChange={(e) => setFieldValue(\"apply_for_specific_date\", true)}\r\n                  tooltipData = \"If yes, the transaction will not be distributed for months\"\r\n                />\r\n              </div>\r\n              <div className=\"ml-2\">\r\n                <CustomRadio\r\n                  label={\"No\"}\r\n                  id=\"no\"\r\n                  name=\"apply_for_specific_date\"\r\n                  value={2}\r\n                  checked={values.apply_for_specific_date === false}\r\n                  onChange={(e) => setFieldValue(\"apply_for_specific_date\", false)}\r\n                  tooltipData= \"If no, the transaction will be distributed every months\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <FormikValidationError name=\"yearly_expense\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:oneTimeCost\")} :\r\n            </label>\r\n\r\n            <div className=\"d-flex\">\r\n              <div className=\"mr-2\">\r\n                <CustomRadio\r\n                  label={\"Yes\"}\r\n                  id=\"yesOTC\"\r\n                  name=\"one_time_cost\"\r\n                  value={1}\r\n                  checked={values.one_time_cost === true}\r\n                  onChange={(e) => setFieldValue(\"one_time_cost\", true)}\r\n                />\r\n              </div>\r\n              <div className=\"ml-2\">\r\n                <CustomRadio\r\n                  label={\"No\"}\r\n                  id=\"noOTC\"\r\n                  name=\"one_time_cost\"\r\n                  value={2}\r\n                  checked={values.one_time_cost === false}\r\n                  onChange={(e) => setFieldValue(\"one_time_cost\", false)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <FormikValidationError name=\"yearly_expense\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12 mt-2 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn\"\r\n            text={t(\"home:save\")}\r\n            type=\"submit\"\r\n            disabled={props.postLoading || props.updateLoading}\r\n            loading={props.postLoading || props.updateLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  postLoading: state.otherExpensesData.postTestParameters.isFetching,\r\n  updateLoading: state.otherExpensesData.updateTestParameters.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postOtherExpensesAction: postOtherExpensesAction,\r\n  updateOtherExpensesAction: updateOtherExpensesAction,\r\n  getOtherExpensesAction: getOtherExpensesAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(OtherExpenseForm);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\ManageIncomeCategories\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ManageExpenditureCategories\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\Components\\RiskData.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\Components\\NormalData.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\Components\\CostData.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\IncomeExpendGraph.tsx",["2576"],"import GeneralChart from \"components/UI/Charts/General\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getYearFromDate } from \"utils/utilsFunction/date-converter\";\r\nimport IncomeExpendTable from \"./IncomeExpendTable\";\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst IncomeExpendGraph = (props: Props) => {\r\n  const { incomeExpenseData } = props;\r\n  const { t } = useTranslation([\"home\"]);\r\n\r\n  const [years, setYears] = useState<(string | number)[]>([]);\r\n  const [income, setIncome] = useState<(string | number)[]>([]);\r\n  const [expense, setExpense] = useState<(string | number)[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (incomeExpenseData) {\r\n      const yearArray = incomeExpenseData?.income?.map(\r\n        (item) =>\r\n          `${t(\"home:year\")} ${getNumberByLanguage(item.year_num)} -  ${getNumberByLanguage(\r\n            getYearFromDate(item.year_from)\r\n          )} - ${getNumberByLanguage(getYearFromDate(item.year_to))}`\r\n      );\r\n      const incomeArray = incomeExpenseData?.income?.map((item) => item.total_amount);\r\n      const expenseArray = incomeExpenseData?.expense?.map((item) => item.total_amount);\r\n\r\n      setYears(yearArray);\r\n      setIncome(incomeArray);\r\n      setExpense(expenseArray);\r\n    }\r\n  }, [incomeExpenseData]);\r\n\r\n  return (\r\n    <>\r\n      <GeneralChart\r\n        minHeight={350}\r\n        options={{\r\n          tooltip: {\r\n            trigger: \"axis\",\r\n            axisPointer: {\r\n              type: \"shadow\",\r\n            },\r\n            // formatter: handleCustomTooltip,\r\n          },\r\n          legend: {\r\n            show: false,\r\n          },\r\n          grid: {\r\n            left: \"3%\",\r\n            right: \"4%\",\r\n            bottom: \"3%\",\r\n            top: \"8%\",\r\n            containLabel: true,\r\n          },\r\n          xAxis: {\r\n            type: \"category\",\r\n            boundaryGap: false,\r\n            data: years,\r\n            axisLabel: {\r\n              formatter: function (name) {\r\n                return name?.split(\"-\")[0]?.replace(\"Year\", \"\");\r\n              },\r\n            },\r\n          },\r\n          yAxis: {\r\n            type: \"value\",\r\n            axisLabel: {\r\n              formatter: function (name) {\r\n                return getNumberByLanguage(name);\r\n              },\r\n            },\r\n          },\r\n          series: [\r\n            {\r\n              name: `${t(\"home:total\")} ${t(\"home:income\")} `,\r\n              type: \"line\",\r\n              smooth: true,\r\n              data: income,\r\n              lineStyle: { color: \"#4DFFFF\" },\r\n            },\r\n            {\r\n              name: `${t(\"home:total\")} ${t(\"home:expense\")} `,\r\n              type: \"line\",\r\n              smooth: true,\r\n              data: expense,\r\n              lineStyle: { color: \"#ff4D4D\" },\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n\r\n      <IncomeExpendTable heading={years} income={income} expense={expense} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  incomeExpenseData: state.reportData.incomeExpenseData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(IncomeExpendGraph);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\Components\\RiskData.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\Components\\NormalData.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\Components\\CostData.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageComponent\\List.tsx",["2577"],"import { DeleteIcon, EditIconDark } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { deleteComponentAction } from \"store/modules/component/deleteComponent\";\r\nimport { getComponentAction } from \"store/modules/component/getComponent\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  setEditData: any;\r\n}\r\n\r\nconst ComponentList = (props: Props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } =\r\n    useDeleteConfirmation();\r\n\r\n  React.useEffect(() => {\r\n    props.getComponentAction();\r\n  }, []);\r\n\r\n  const handleDelete = async () => {\r\n    const response: any = await props.deleteComponentAction(editId);\r\n\r\n    if (response.status === 204) {\r\n      toast.success(t(\"home:deleteSuccess\"));\r\n      props.getComponentAction();\r\n      resetDeleteData();\r\n    } else {\r\n      toast.error(t(\"home:deleteError\"));\r\n      resetDeleteData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-table mt-4\">\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table mt-2\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{ borderRadius: \"5px 0 0 0\" }}>{t(\"home:sn\")}</th>\r\n              <th>{t(\"maintainance:category\")}</th>\r\n              <th>{t(\"maintainance:component\")}</th>\r\n              <th style={{ borderRadius: \"0 5px 0 0\" }}>{t(\"home:action\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.componentList?.map((item, index) => (\r\n              <tr key={item.id}>\r\n                <td>{index + 1}</td>\r\n                <td> {item.category?.name}</td>\r\n                <td> {item.name}</td>\r\n\r\n                <td className=\"action\">\r\n                  <div role=\"button\" onClick={() => props.setEditData(item)}>\r\n                    <img src={EditIconDark} alt=\"\" />\r\n                  </div>\r\n                  <div role=\"button\" onClick={() => handleDeleteClick(item.id)}>\r\n                    <img src={DeleteIcon} alt=\"\" />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <ConfirmationModal\r\n        open={modal}\r\n        handleModal={() => toggleModal()}\r\n        handleConfirmClick={() => handleDelete()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  componentList: state.component.getComponent.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getComponentAction: getComponentAction,\r\n  deleteComponentAction: deleteComponentAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(ComponentList);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageCategories\\List.tsx",["2578"],"import { DeleteIcon, EditIconDark } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { deleteComponentCategoriesAction } from \"store/modules/componentCategories/deleteComponentCategories\";\r\nimport { getComponentCategoriesAction } from \"store/modules/componentCategories/getComponentCategories\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  setEditData: any;\r\n}\r\n\r\nconst CategoriesList = (props: Props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } =\r\n    useDeleteConfirmation();\r\n\r\n  React.useEffect(() => {\r\n    props.getComponentCategoriesAction();\r\n  }, []);\r\n\r\n  const handleDelete = async () => {\r\n    const response: any = await props.deleteComponentCategoriesAction(editId);\r\n\r\n    if (response.status === 204) {\r\n      // toast.success(t('home:deleteSuccess'));\r\n      props.getComponentCategoriesAction();\r\n      resetDeleteData();\r\n    } else {\r\n      toast.error(t(\"home:deleteError\"));\r\n      resetDeleteData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-table mt-4\">\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table mt-2\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{ borderRadius: \"5px 0 0 0\" }}>{t(\"home:sn\")}</th>\r\n              <th>\r\n                {t(\"maintainance:category\")} {t(\"home:name\")}\r\n              </th>\r\n              <th style={{ borderRadius: \"0 5px 0 0\" }}>{t(\"home:action\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.otherExpenseList?.map((item, index) => (\r\n              <tr key={item.id}>\r\n                <td>{getNumberByLanguage(index + 1)}</td>\r\n                <td> {item.name}</td>\r\n\r\n                <td className=\"action\">\r\n                  <div role=\"button\" onClick={() => props.setEditData(item)}>\r\n                    <img src={EditIconDark} alt=\"\" />\r\n                  </div>\r\n                  <div role=\"button\" onClick={() => handleDeleteClick(item.id)}>\r\n                    <img src={DeleteIcon} alt=\"\" />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <ConfirmationModal\r\n        open={modal}\r\n        handleModal={() => toggleModal()}\r\n        handleConfirmClick={() => handleDelete()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  otherExpenseList: state.componentCategories.getComponentCategories.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getComponentCategoriesAction: getComponentCategoriesAction,\r\n  deleteComponentCategoriesAction: deleteComponentCategoriesAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CategoriesList);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageCategories\\Form.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageComponent\\Form.tsx",["2579"],"import FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport { Form, useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport * as Yup from \"yup\";\r\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\r\nimport { postComponentAction } from \"store/modules/component/postComponent\";\r\nimport { updateComponentAction } from \"store/modules/component/updateComponent\";\r\nimport { getComponentAction } from \"store/modules/component/getComponent\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string().required(\"This field is required\"),\r\n  category: Yup.mixed().required(\"This field is required\"),\r\n});\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  setEditData: any\r\n}\r\n\r\nconst ComponentForm = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [initialData, setInitialData] = React.useState({\r\n    name: \"\",\r\n    category: null as null | OptionType,\r\n  });\r\n\r\n  const [options, setOptions] = React.useState<OptionType[]>();\r\n\r\n  React.useEffect(() => {\r\n    if (props.componentCategories) {\r\n      const newOpt = props.componentCategories.map((item) => ({\r\n        label: \"\" + item.name,\r\n        value: \"\" + item.id,\r\n      }));\r\n      setOptions(newOpt);\r\n    }\r\n  }, [props.componentCategories]);\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      let response;\r\n\r\n      if (props.editData) {\r\n        response = await props.updateComponentAction(props.editData.id, {\r\n          ...values,\r\n          category: values.category?.value,\r\n        });\r\n      } else {\r\n        response = await props.postComponentAction({ ...values, category: values.category?.value });\r\n      }\r\n\r\n      if (response.status === 201 || response.status === 200) {\r\n        if (response.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n          props.getComponentAction();\r\n        } else {\r\n          setInitialData({\r\n            name: \"\",\r\n            category: null,\r\n          });\r\n          props.getComponentAction();\r\n           toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n        props.setEditData(null)\r\n      }\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      setInitialData({\r\n        ...props.editData,\r\n        category: {label: props.editData?.category?.name, value: props.editData?.category?.id }\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  console.log(props.editData, \"props.editData\")\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row rate_form align-items-center\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"form-group\">\r\n           \r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"maintainance:category\")}:\r\n                </label>\r\n             \r\n                <StyledSelect\r\n                  name=\"category\"\r\n                  options={options}\r\n                  value={values.category}\r\n                  onChange={({ name, value }) => {\r\n                    setFieldValue(name, value);\r\n                  }}\r\n                  onBlur={() => {\r\n                    setFieldTouched(\"category\", true);\r\n                  }}\r\n                />\r\n                <FormikValidationError name=\"category\" errors={errors} touched={touched} />\r\n              \r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"form-group \">\r\n           \r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"home:name\")} :\r\n                </label>\r\n             \r\n                <textarea\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"name\" errors={errors} touched={touched} />\r\n              \r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 mt-2 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn\"\r\n            text={t(\"home:save\")}\r\n            type=\"submit\"\r\n            disabled={props.postLoading || props.updateLoading}\r\n            loading={props.postLoading || props.updateLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  componentCategories: state.componentCategories.getComponentCategories.data,\r\n  postLoading: state.component.postComponent.isFetching,\r\n  updateLoading: state.component.updateComponent.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postComponentAction: postComponentAction,\r\n  updateComponentAction: updateComponentAction,\r\n  getComponentAction: getComponentAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(ComponentForm);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\Maintainance\\MaintainanceCostChart.tsx",["2580"],"import GeneralChart from \"components/UI/Charts/General\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { MaintainanceCostSingleType } from \"store/modules/report/maintainanceCost\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getYearFromDate } from \"utils/utilsFunction/date-converter\";\r\n\r\nexport type TotalDataYear = {\r\n  date: number;\r\n  actualCost: number;\r\n  unsegregated: number;\r\n  material: number;\r\n  labour: number;\r\n  replacement: number;\r\n};\r\n\r\nexport type TotalYearType = {\r\n  date: number;\r\n  value: number | null;\r\n};\r\n\r\nexport type CustomSingleData = {\r\n  value: string | number;\r\n  itemStyle: { color: string };\r\n};\r\n\r\nexport type IncomeExpenseType = {\r\n  unsegregated: CustomSingleData[];\r\n  material: CustomSingleData[];\r\n  labor: CustomSingleData[];\r\n  replacement: CustomSingleData[];\r\n  total?: TotalYearType[];\r\n};\r\n\r\ninterface Props extends PropsFromRedux {}\r\n\r\nconst MaintainanceCostChart = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [year, setYear] = useState<(string | number)[]>();\r\n  const [actualCost, setActualCost] = useState<IncomeExpenseType | null>(null);\r\n  const [expectedCost, setExpectedCost] = useState<IncomeExpenseType | null>(null);\r\n  \r\n  const sortAndMapArray = (array: MaintainanceCostSingleType[], key: string, color: string) => {\r\n    return array.map((item) => ({\r\n      value: item[key] || 0,\r\n      itemStyle: { color },\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.maintainanceCost) {\r\n      const yearData = props.maintainanceCost.actual_cost.map(\r\n        (item, index) =>\r\n          `${t(\"home:year\")} ${getNumberByLanguage(index + 1)} -  ${getNumberByLanguage(\r\n            getYearFromDate(item.date_from)\r\n          )} - ${getNumberByLanguage(getYearFromDate(item.date_to))}`\r\n      );\r\n\r\n      const actualCost = {\r\n        unsegregated: sortAndMapArray(\r\n          props.maintainanceCost.actual_cost,\r\n          \"unsegregated_cost\",\r\n          \"#e69f00\"\r\n        ),\r\n        material: sortAndMapArray(\r\n          props.maintainanceCost.actual_cost,\r\n          \"material_cost\",\r\n          \"#56b4e9\"\r\n        ),\r\n        labor: sortAndMapArray(\r\n          props.maintainanceCost.actual_cost,\r\n          \"labour_cost\",\r\n          \"#f0e442\"\r\n        ),\r\n        replacement: sortAndMapArray(\r\n          props.maintainanceCost.actual_cost,\r\n          \"replacement_cost\",\r\n          \"#ea75b6\"\r\n        ),\r\n\r\n        total: props.maintainanceCost.actual_cost.map((item) => ({\r\n          date: item.maintenance_date__year,\r\n          value: item.actual_cost_total || 0,\r\n        })),\r\n      };\r\n\r\n      const expectedCost = {\r\n        unsegregated: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"unsegregated_cost\",\r\n          \"#009e73\"\r\n        ),\r\n        material: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"material_cost\",\r\n          \"#000000\"\r\n        ),\r\n        labor: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"labour_cost\",\r\n          \"#d55e00\"\r\n        ),\r\n        replacement: sortAndMapArray(\r\n          props.maintainanceCost.expected_cost,\r\n          \"replacement_cost\",\r\n          \"#0072b2\"\r\n        ),\r\n        total: props.maintainanceCost.expected_cost.map((item) => ({\r\n          date: item.maintenance_date__year,\r\n          value: item.actual_cost_total || 0,\r\n        })),\r\n      };\r\n\r\n      setYear(yearData);\r\n      setActualCost(actualCost);\r\n      setExpectedCost(expectedCost);\r\n    }\r\n  }, [props.maintainanceCost]);\r\n \r\n  return (\r\n    <>\r\n      <GeneralChart\r\n        minHeight={350}\r\n        options={{\r\n          tooltip: {\r\n            trigger: \"axis\",\r\n            axisPointer: {\r\n              type: \"shadow\",\r\n            },\r\n            // formatter: handleCustomTooltip,\r\n          },\r\n          legend: {\r\n            show: false,\r\n          },\r\n          grid: {\r\n            left: \"3%\",\r\n            right: \"4%\",\r\n            bottom: \"3%\",\r\n            top: \"8%\",\r\n            containLabel: true,\r\n          },\r\n          xAxis: {\r\n            type: \"category\",\r\n            data: year,\r\n            axisLabel: {\r\n              formatter: function (name) {\r\n                return name?.split(\"-\")[0]?.replace(\"Year\", \"\");\r\n              },\r\n            },\r\n          },\r\n          yAxis: {\r\n            type: \"value\",\r\n            axisLabel: {\r\n              formatter: function (name) {\r\n                return getNumberByLanguage(name);\r\n              },\r\n            },\r\n          },\r\n          series: [\r\n            {\r\n              name: `${t(\"home:expected\")} ${t(\"home:unsegregated\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar\",\r\n              areaStyle: {\r\n                color: \"red\",\r\n              },\r\n              data: expectedCost?.unsegregated,\r\n            },\r\n            {\r\n              name: `${t(\"home:expected\")} ${t(\"home:consumable\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar\",\r\n              data: expectedCost?.material,\r\n            },\r\n            {\r\n              name: `${t(\"home:expected\")} ${t(\"home:labour\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar\",\r\n              data: expectedCost?.labor,\r\n            },\r\n            {\r\n              name: `${t(\"home:expected\")} ${t(\"home:replacement\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar\",\r\n              data: expectedCost?.replacement,\r\n            },\r\n            {\r\n              name: `${t(\"home:actual\")}  ${t(\"home:unsegregated\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar2\",\r\n              data: actualCost?.unsegregated,\r\n            },\r\n            {\r\n              name: `${t(\"home:actual\")} ${t(\"home:consumable\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar2\",\r\n              data: actualCost?.material,\r\n            },\r\n            {\r\n              name: `${t(\"home:actual\")} ${t(\"home:labour\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar2\",\r\n              data: actualCost?.labor,\r\n            },\r\n            {\r\n              name: `${t(\"home:actual\")} ${t(\"home:replacement\")}`,\r\n              type: \"bar\",\r\n              stack: \"bar2\",\r\n              data: actualCost?.replacement,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n\r\n      <div className=\"cost-desc table-responsive mt-4\">\r\n        <table>\r\n          <tr className=\"expected\">\r\n            <td>\r\n              <h5>{t(\"home:expectedCost\")}</h5>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"unseg\"></span>{t(\"home:unsegregated\")} {t(\"home:cost\")}\r\n              </h6>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"material\"></span>{t(\"home:maintainanceCost\")} \r\n              </h6>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"labour\"></span>{t(\"home:labour\")} {t(\"home:cost\")}\r\n              </h6>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"replacement\"></span>{t(\"home:replacement\")} {t(\"home:cost\")}\r\n              </h6>\r\n            </td>\r\n          </tr>\r\n          <tr className=\"actual\">\r\n            <td>\r\n              <h5>{t(\"home:actualCost\")}</h5>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"unseg\"></span>{t(\"home:unsegregated\")} {t(\"home:cost\")}\r\n              </h6>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"material\"></span>{t(\"home:maintainanceCost\")} \r\n              </h6>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"labour\"></span>{t(\"home:labour\")} {t(\"home:cost\")}\r\n              </h6>\r\n            </td>\r\n            <td>\r\n              <h6>\r\n                <span className=\"replacement\"></span>{t(\"home:replacement\")} {t(\"home:cost\")}\r\n              </h6>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  maintainanceCost: state.reportData.maintainanceCostData.data,\r\n  waterTarrifs: state.waterTarrifsData.waterTarrifData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(MaintainanceCostChart);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\FixedRates\\List.tsx",["2581"],"import { DeleteIcon, EditIcon, EditIconDark } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { deleteWaterTariffAction } from \"store/modules/waterTarrifs/deleteWaterTariff\";\r\nimport { getUsIncomeEstimateThisYearAction } from \"store/modules/waterTarrifs/getIncomeEstimateThisYear\";\r\nimport { getWaterTarrifsAction } from \"store/modules/waterTarrifs/getWaterTarrifs\";\r\nimport { RootState } from \"store/root-reducer\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  setEditData;\r\n}\r\n\r\nconst UseBasedList = (props: Props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } =\r\n    useDeleteConfirmation();\r\n\r\n  const deleteTariffRate = async () => {\r\n    try {\r\n      const response = await props.deleteWaterTariffAction(editId);\r\n      console.log(response, \"response\");\r\n      if (response.status === 204) {\r\n        toast.success(t(\"home:deleteSuccess\"));\r\n        props.getWaterTarrifsAction(props.language, props.schemeSlug, \"fixed\");\r\n        props.getUsIncomeEstimateThisYearAction(props.schemeSlug);\r\n\r\n        resetDeleteData();\r\n      } else {\r\n        toast.error(t(\"home:deleteError\"));\r\n        resetDeleteData();\r\n      }\r\n    } catch (error) {\r\n      console.log(error, \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-table mt-4\">\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table mt-2\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{ borderRadius: \"5px 0 0 0\" }}> {t(\"home:sn\")}</th>\r\n              <th>{t(\"home:applyDate\")}</th>\r\n              <th style={{ whiteSpace: \"break-spaces\" }}>{t(\"finance:roht\")}</th>\r\n              <th style={{ whiteSpace: \"break-spaces\" }}>{t(\"finance:roit\")}</th>\r\n              <th style={{ whiteSpace: \"break-spaces\" }}>{t(\"finance:ropt\")}</th>\r\n              <th style={{ whiteSpace: \"break-spaces\" }}>{t(\"finance:roct\")}</th>\r\n              <th style={{ whiteSpace: \"break-spaces\" }}>{t(\"finance:epcht\")}</th>\r\n              <th style={{ whiteSpace: \"break-spaces\" }}>{t(\"finance:epcit\")}</th>\r\n              <th style={{ whiteSpace: \"break-spaces\" }}>{t(\"finance:epcpt\")}</th>\r\n              <th style={{ whiteSpace: \"break-spaces\" }}>{t(\"finance:epcct\")}</th>\r\n              <th style={{ borderRadius: \"0 5px 0 0\" }}>{t(\"home:action\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.waterTarrifs && props.waterTarrifs?.length > 0 ? (\r\n              props.waterTarrifs?.map((item, index) => (\r\n                <tr key={item.id}>\r\n                  <td>{getNumberByLanguage(index + 1)}</td>\r\n                  <td> {getNumberByLanguage(item.apply_date)}</td>\r\n                  <td>\r\n                    {props.scheme?.currency}. {getNumberByLanguage(item.rate_for_household) || \"-\"}{\" \"}\r\n                    \r\n                  </td>\r\n                  <td>\r\n                    {props.scheme?.currency}.{\" \"}\r\n                    {getNumberByLanguage(item.rate_for_institution) || \"-\"} \r\n                  </td>\r\n                  <td>\r\n                    {props.scheme?.currency}. {getNumberByLanguage(item.rate_for_public) || \"-\"}  \r\n                  </td>\r\n                  <td>\r\n                    {props.scheme?.currency}. {getNumberByLanguage(item.rate_for_commercial) || \"-\"}{\" \"}\r\n                     \r\n                  </td>\r\n                  <td>\r\n                    {getNumberByLanguage(item.estimated_paying_connection_household) || \"-\"} %\r\n                  </td>\r\n                  <td>\r\n                    {getNumberByLanguage(item.estimated_paying_connection_institution) || \"-\"} %\r\n                  </td>\r\n                  <td>{getNumberByLanguage(item.estimated_paying_connection_public) || \"-\"} %</td>\r\n                  <td>\r\n                    {getNumberByLanguage(item.estimated_paying_connection_commercial) || \"-\"} %\r\n                  </td>\r\n                  <td className=\"action\">\r\n                    <div role=\"button\" onClick={() => props.setEditData(item)}>\r\n                      <img src={EditIconDark} alt=\"\" />\r\n                    </div>\r\n                    <div role=\"button\" onClick={() => handleDeleteClick(item.id)}>\r\n                      <img src={DeleteIcon} alt=\"\" />\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={7} className=\"text-center\">\r\n                  No Data Available\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <ConfirmationModal\r\n        open={modal}\r\n        handleModal={() => toggleModal()}\r\n        handleConfirmClick={() => deleteTariffRate()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  waterTarrifs: state.waterTarrifsData.waterTarrifData.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getWaterTarrifsAction,\r\n  deleteWaterTariffAction,\r\n  getUsIncomeEstimateThisYearAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(UseBasedList);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\UseBased\\List.tsx",["2582"],"import { DeleteIcon, EditIcon, EditIconDark } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { deleteUseBasedWaterTariffAction } from \"store/modules/waterTarrifs/deleteUseBasedWaterTariff\";\r\nimport { getUsIncomeEstimateThisYearAction } from \"store/modules/waterTarrifs/getIncomeEstimateThisYear\";\r\nimport { getUseBasedWaterTarrifsAction } from \"store/modules/waterTarrifs/getUseBasedWaterTarrifs\";\r\nimport { getWaterTarrifsAction } from \"store/modules/waterTarrifs/getWaterTarrifs\";\r\nimport { RootState } from \"store/root-reducer\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  setEditData;\r\n}\r\n\r\nconst UseBasedList = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } =\r\n    useDeleteConfirmation();\r\n\r\n  const deleteTariffRate = async () => {\r\n    try {\r\n      const response = await props.deleteUseBasedWaterTariffAction(editId);\r\n      console.log(response, \"response\");\r\n      if (response.status === 204) {\r\n        toast.success(t(\"home:deleteSuccess\"));\r\n        props.getUseBasedWaterTarrifsAction(props.language, props.schemeSlug);\r\n        props.getUsIncomeEstimateThisYearAction(props.schemeSlug);\r\n\r\n        resetDeleteData();\r\n      } else {\r\n        toast.error(t(\"home:deleteError\"));\r\n        resetDeleteData();\r\n      }\r\n    } catch (error) {\r\n      console.log(error, \"error\");\r\n    }\r\n  };\r\n  let count = 0;\r\n  return (\r\n    <div className=\"data-table mt-4\">\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table mt-2\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{ borderRadius: \"5px 0 0 0\" }}>{t(\"home:sn\")}</th>\r\n              <th style={{}}>{t(\"finance:appliedDate\")}</th>\r\n              <th style={{}}>{t(\"finance:unitRange\")}</th>\r\n              <th style={{}}>{t(\"home:rate\")}</th> <th style={{}}>{t(\"finance:epcs\")}</th>\r\n              <th style={{ borderRadius: \"0 5px 0 0\" }}>{t(\"home:action\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.waterTarrifs && props.waterTarrifs?.length > 0 ? (\r\n              props.waterTarrifs?.map((item, index) => {\r\n                return (\r\n                  <React.Fragment key={item.apply_date}>\r\n                    {item.used_based_units?.map((tariff, index) => {\r\n                      count = count + 1;\r\n \r\n                      return (\r\n                        <tr key={tariff.id}>\r\n                          <td>{getNumberByLanguage(count)}</td>\r\n                          <td> {getNumberByLanguage(item.apply_date)}</td>\r\n                          <td>\r\n                            {\" \"}\r\n                            {getNumberByLanguage(tariff.unit_from)} -{\" \"}\r\n                            {getNumberByLanguage(tariff.unit_to)} {t(\"home:units\")}\r\n                          </td>\r\n                          <td>\r\n                            {props.scheme?.currency}. {getNumberByLanguage(tariff.rate) || \"-\"} |{\" \"}\r\n                            {t(\"home:unit\")}\r\n                          </td>\r\n                          <td style={{}}>\r\n                            {getNumberByLanguage(tariff.estimated_paying_connection)}\r\n                          </td>\r\n                          <td className=\"action\">\r\n                            <div role=\"button\" onClick={() => props.setEditData({ tariff, item })}>\r\n                              <img src={EditIconDark} alt=\"\" />\r\n                            </div>\r\n                            <div role=\"button\" onClick={() => handleDeleteClick(tariff.id)}>\r\n                              <img src={DeleteIcon} alt=\"\" />\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </React.Fragment>\r\n                );\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={6} className=\"text-center\">No Data Available</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <ConfirmationModal\r\n        open={modal}\r\n        handleModal={() => toggleModal()}\r\n        handleConfirmClick={() => deleteTariffRate()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  waterTarrifs: state.waterTarrifsData.getUseBasedWaterTarrifs.data,\r\n  supplySchedule: state.waterTarrifsData.waterTarrifData.data,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getWaterTarrifsAction,\r\n  deleteUseBasedWaterTariffAction,\r\n  getUseBasedWaterTarrifsAction,\r\n  getUsIncomeEstimateThisYearAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(UseBasedList);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\UseBased\\Form.tsx",["2583","2584","2585"],"import { DeleteIcon } from \"assets/images/xd\";\r\nimport NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError, {\r\n  FormikFieldArrayValidationError,\r\n} from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\nimport { FieldArray, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getUsIncomeEstimateThisYearAction } from \"store/modules/waterTarrifs/getIncomeEstimateThisYear\";\r\nimport { getUseBasedWaterTarrifsAction } from \"store/modules/waterTarrifs/getUseBasedWaterTarrifs\";\r\nimport { getWaterTarrifsAction } from \"store/modules/waterTarrifs/getWaterTarrifs\";\r\nimport { postUseBasedWaterTariffAction } from \"store/modules/waterTarrifs/postUseBasedWaterTariff\";\r\nimport { updateUseBasedWaterTariffAction } from \"store/modules/waterTarrifs/updateUseBasedWaterTariff\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport formatDate from \"utils/utilsFunction/date-converter\";\r\nimport * as Yup from \"yup\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData;\r\n  setEditData;\r\n}\r\n\r\ntype useBasedType = {\r\n  unit_from: any;\r\n  unit_to: any;\r\n  rate: any;\r\n  estimated_paying_connection: any;\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  apply_date: Yup.mixed().required(\"This field is required\"),\r\n  used_based_units: Yup.array().of(\r\n    Yup.object().shape({\r\n      unit_from: Yup.string().required(\"This field is required\"),\r\n      unit_to: Yup.string().required(\"This field is required\"),\r\n      rate: Yup.string().required(\"This field is required\"),\r\n      estimated_paying_connection: Yup.string().required(\"This field is required\"),\r\n    })\r\n  ),\r\n});\r\n\r\nconst UseBasedForm = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const { editData, postUseBasedWaterTariffAction } = props;\r\n\r\n  console.log(editData, \"editDataeditData\");\r\n\r\n  const [initialData, setInitialData] = React.useState({\r\n    apply_date: \"\",\r\n    used_based_units: [\r\n      {\r\n        unit_from: \"\",\r\n        unit_to: \"\",\r\n        rate: \"\",\r\n        estimated_paying_connection: \"\",\r\n      },\r\n    ] as useBasedType[],\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.scheme) {\r\n      setInitialData({\r\n        apply_date: props.scheme?.tool_start_date || \"\",\r\n        used_based_units: [\r\n          {\r\n            unit_from: \"\",\r\n            unit_to: \"\",\r\n            rate: \"\",\r\n            estimated_paying_connection: \"\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }, [props.scheme]);\r\n\r\n  const handleTariffSubmit = async (values, resetForm) => {\r\n    let response;\r\n\r\n    if (props.editData) {\r\n      const updateValues = {\r\n        apply_date: values.apply_date,\r\n        ...values.used_based_units[0],\r\n        tariff: props.editData?.tariff?.tariff,\r\n      };\r\n\r\n      console.log(updateValues, \"updateValues\");\r\n      response = await props.updateUseBasedWaterTariffAction(\r\n        props.language,\r\n        props.editData.tariff?.id,\r\n        updateValues\r\n      );\r\n    } else {\r\n      response = await props.postUseBasedWaterTariffAction(props.language, {\r\n        ...values,\r\n        apply_date: formatDate(values.apply_date),\r\n      });\r\n    }\r\n\r\n    if (response && (response.status === 201 || response.status === 200)) {\r\n      if (response.status === 201) {\r\n        resetForm();\r\n        toast.success(t(\"home:postSuccess\"));\r\n      } else {\r\n        setInitialData({\r\n          apply_date: \"\",\r\n          used_based_units: [\r\n            {\r\n              unit_from: \"\",\r\n              unit_to: \"\",\r\n              rate: \"\",\r\n              estimated_paying_connection: \"\",\r\n            },\r\n          ],\r\n        });\r\n\r\n        toast.success(t(\"home:updateSuccess\"));\r\n      }\r\n      props.getUseBasedWaterTarrifsAction(props.language, props.schemeSlug);\r\n      props.getUsIncomeEstimateThisYearAction(props.schemeSlug);\r\n    } else {\r\n      const errorList = response.data && response.data.error;\r\n      if (errorList instanceof Array) {\r\n        errorList.forEach((item) => {\r\n          toast.error(item);\r\n        });\r\n      }\r\n      console.log(response, \"errrr\");\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      setInitialData({\r\n        apply_date: props.editData?.item?.apply_date,\r\n        used_based_units: [\r\n          {\r\n            unit_from: props.editData?.tariff?.unit_from,\r\n            unit_to: props.editData?.tariff?.unit_to,\r\n            rate: props.editData?.tariff?.rate,\r\n            estimated_paying_connection: props.editData?.tariff?.estimated_paying_connection,\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  return (\r\n    <Formik\r\n      enableReinitialize={true}\r\n      initialValues={initialData}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { resetForm }) => {\r\n        handleTariffSubmit(values, resetForm);\r\n      }}\r\n    >\r\n      {({ values, errors, touched, handleChange, setFieldValue }) => (\r\n        <Form>\r\n          <div className=\"row tarrif_form \">\r\n            <div className=\"col-md-4 \">\r\n              <div className=\"form-group top  mt-2\">\r\n                <label htmlFor=\"\" className=\"mr-1 pl-0 \">\r\n                  {t(\"home:applyDate\")} <TooltipLabel id={\"apd\"} text={`The date from which this record  should be applied to the system.`} />:\r\n                </label>\r\n\r\n                {props.scheme?.system_date_format === \"nep\" ? (\r\n                  <>\r\n                    <NepaliDatePicker\r\n                      value={values.apply_date}\r\n                      name=\"apply_date\"\r\n                      onChange={(e) => {\r\n                        setFieldValue(\"apply_date\", e);\r\n                      }}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <EnglishDatePicker\r\n                      name=\"apply_date\"\r\n                      value={values.apply_date}\r\n                      handleChange={(e) => {\r\n                        setFieldValue(\"apply_date\", formatDate(e));\r\n                      }}\r\n                    />\r\n                  </>\r\n                )}\r\n                <FormikValidationError name=\"apply_date\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n            <FieldArray\r\n              name=\"used_based_units\"\r\n              render={(arrayHelpers) => (\r\n                <>\r\n                  {values.used_based_units &&\r\n                    values.used_based_units.map((data, index) => (\r\n                      <div className=\"col-12\">\r\n                        <div className=\"row align-items-center\">\r\n                          <div className=\"col-md-2\">\r\n                            <div className=\"form-group \">\r\n                              <label htmlFor=\"\" className=\"mr-1 pl-0 \">\r\n                                {t(\"home:units\")}:\r\n                              </label>\r\n\r\n                              <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name={`used_based_units[${index}][unit_from]`}\r\n                                value={values.used_based_units[index][\"unit_from\"]}\r\n                                onChange={(e) => {\r\n                                  setFieldValue(e.target.name, e.target.value);\r\n                                }}\r\n                              />\r\n                              <FormikFieldArrayValidationError\r\n                                keyName=\"used_based_units\"\r\n                                name=\"unit_from\"\r\n                                index={index}\r\n                                errors={errors}\r\n                                touched={touched}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-2\">\r\n                            <div className=\"form-group \">\r\n                              <label htmlFor=\"\" className=\"mr-1 pl-0 \">\r\n                                {t(\"finance:to\")}:\r\n                              </label>\r\n\r\n                              <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name={`used_based_units[${index}][unit_to]`}\r\n                                value={values.used_based_units[index][\"unit_to\"]}\r\n                                onChange={(e) => {\r\n                                  setFieldValue(e.target.name, e.target.value);\r\n                                }}\r\n                              />\r\n                              <FormikFieldArrayValidationError\r\n                                keyName=\"used_based_units\"\r\n                                name=\"unit_to\"\r\n                                index={index}\r\n                                errors={errors}\r\n                                touched={touched}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-3\">\r\n                            <div className=\"form-group \">\r\n                              <label htmlFor=\"\" className=\"mr-1 pl-0 \">\r\n                                {t(\"home:rate\")} ({props.scheme?.currency}):\r\n                              </label>\r\n                              <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name={`used_based_units[${index}][rate]`}\r\n                                value={values.used_based_units[index][\"rate\"]}\r\n                                onChange={(e) => {\r\n                                  setFieldValue(e.target.name, e.target.value);\r\n                                }}\r\n                              />\r\n                              <FormikFieldArrayValidationError\r\n                                keyName=\"used_based_units\"\r\n                                name=\"rate\"\r\n                                index={index}\r\n                                errors={errors}\r\n                                touched={touched}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-4\">\r\n                            <div className=\"form-group \">\r\n                              <label htmlFor=\"\" className=\"mr-1 pl-0 \">\r\n                                {t(\"finance:epcs\")}:\r\n                              </label>\r\n\r\n                              <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name={`used_based_units[${index}][estimated_paying_connection]`}\r\n                                value={\r\n                                  values.used_based_units[index][\"estimated_paying_connection\"]\r\n                                }\r\n                                onChange={(e) => {\r\n                                  setFieldValue(e.target.name, e.target.value);\r\n                                }}\r\n                              />\r\n                              <FormikFieldArrayValidationError\r\n                                keyName=\"used_based_units\"\r\n                                name=\"estimated_paying_connection\"\r\n                                index={index}\r\n                                errors={errors}\r\n                                touched={touched}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          {!props.editData && (\r\n                            <div className=\"col-1 text-right\">\r\n                              <img\r\n                                src={DeleteIcon}\r\n                                className=\"mb-3\"\r\n                                role=\"button\"\r\n                                onClick={() => arrayHelpers.remove(index)}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        {index === values.used_based_units?.length - 1 && (\r\n                          <div className=\"col-12 mt-3\">\r\n                            <div className=\"text-right\">\r\n                              {!props.editData && (\r\n                                <Button\r\n                                  className=\"btn custom-btn  mr-3\"\r\n                                  text={t(\"finance:add\")}\r\n                                  onClick={() => arrayHelpers.push(\"\")}\r\n                                />\r\n                              )}\r\n                              <Button\r\n                                className=\"btn custom-btn \"\r\n                                text={t(\"home:save\")}\r\n                                disabled={props.postLoading || props.updateLoading}\r\n                                loading={props.postLoading || props.updateLoading}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                </>\r\n              )}\r\n            />\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  supplySchedule: state.waterTarrifsData.waterTarrifData.data,\r\n  postLoading: state.waterTarrifsData.postUseBasedWaterTariff.isFetching,\r\n  updateLoading: state.waterTarrifsData.updateUseBasedWaterTariff.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postUseBasedWaterTariffAction: postUseBasedWaterTariffAction,\r\n  updateUseBasedWaterTariffAction: updateUseBasedWaterTariffAction,\r\n  getUsIncomeEstimateThisYearAction: getUsIncomeEstimateThisYearAction,\r\n  getUseBasedWaterTarrifsAction: getUseBasedWaterTarrifsAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(UseBasedForm);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\FixedRates\\Form.tsx",["2586"],"import NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getWaterTarrifsAction } from \"store/modules/waterTarrifs/getWaterTarrifs\";\r\nimport { postFixedRateWaterTariffAction } from \"store/modules/waterTarrifs/postFixedRateWaterTariff\";\r\nimport { updateFixedRateWaterTariffAction } from \"store/modules/waterTarrifs/updateFixedBasedWaterTariff\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport formatDate from \"utils/utilsFunction/date-converter\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getUsIncomeEstimateThisYearAction } from \"store/modules/waterTarrifs/getIncomeEstimateThisYear\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData;\r\n  setEditData;\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n  rate_for_institution: Yup.string().required(\"This field is required\"),\r\n  rate_for_household: Yup.string().required(\"This field is required\"),\r\n  rate_for_public: Yup.string().required(\"This field is required\"),\r\n  rate_for_commercial: Yup.string().required(\"This field is required\"),\r\n  apply_date: Yup.string().required(\"This field is required\"),\r\n  estimated_paying_connection_household: Yup.string().required(\"This field is required\"),\r\n  estimated_paying_connection_institution: Yup.string().required(\"This field is required\"),\r\n  estimated_paying_connection_public: Yup.string().required(\"This field is required\"),\r\n  estimated_paying_connection_commercial: Yup.string().required(\"This field is required\"),\r\n});\r\n\r\nconst UseBasedForm = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [initialData, setInitialData] = React.useState({\r\n    terif_type: \"Fixed\",\r\n    rate_for_institution: \"\",\r\n    rate_for_household: \"\",\r\n    rate_for_public: \"\",\r\n    rate_for_commercial: \"\",\r\n    apply_date: \"\",\r\n    estimated_paying_connection_household: \"\",\r\n    estimated_paying_connection_institution: \"\",\r\n    estimated_paying_connection_public: \"\",\r\n    estimated_paying_connection_commercial: \"\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.scheme) {\r\n      setInitialData({\r\n        terif_type: \"Fixed\",\r\n        rate_for_institution: \"\",\r\n        rate_for_household: \"\",\r\n        rate_for_public: \"\",\r\n        rate_for_commercial: \"\",\r\n        apply_date: \"\",\r\n        estimated_paying_connection_household: \"\",\r\n        estimated_paying_connection_institution: \"\",\r\n        estimated_paying_connection_public: \"\",\r\n        estimated_paying_connection_commercial: \"\",\r\n      });\r\n    }\r\n  }, [props.scheme]);\r\n\r\n  const { values, errors, touched, handleChange, handleBlur, setFieldValue, handleSubmit } =\r\n    useFormik({\r\n      enableReinitialize: true,\r\n      initialValues: initialData,\r\n      validationSchema: validationSchema,\r\n      onSubmit: async (values, { resetForm }) => {\r\n        let response;\r\n\r\n        if (props.editData) {\r\n          response = await props.updateFixedRateWaterTariffAction(\r\n            props.language,\r\n            props.editData.id,\r\n            values\r\n          );\r\n        } else {\r\n          response = await props.postFixedRateWaterTariffAction(props.language, values);\r\n        }\r\n\r\n        if (response.status === 201 || response.status === 200) {\r\n          props.getUsIncomeEstimateThisYearAction(props.schemeSlug);\r\n\r\n          if (response.status === 201) {\r\n            resetForm();\r\n            toast.success(t(\"home:postSuccess\"));\r\n          } else {\r\n            setInitialData({\r\n              terif_type: \"Fixed\",\r\n              rate_for_institution: \"\",\r\n              rate_for_household: \"\",\r\n              rate_for_public: \"\",\r\n              rate_for_commercial: \"\",\r\n              apply_date: \"\",\r\n              estimated_paying_connection_household: \"\",\r\n              estimated_paying_connection_institution: \"\",\r\n              estimated_paying_connection_public: \"\",\r\n              estimated_paying_connection_commercial: \"\",\r\n            });\r\n            // props.getOtherExpensesAction(props.language);\r\n            toast.success(t(\"home:updateSuccess\"));\r\n          }\r\n          props.getWaterTarrifsAction(props.language, props.schemeSlug, \"fixed\");\r\n        } else {\r\n          const errorList = response.data && response.data.error;\r\n          if (errorList instanceof Array) {\r\n            errorList.forEach((item) => {\r\n              toast.error(item);\r\n            });\r\n          }\r\n          console.log(response, \"errrr\");\r\n        }\r\n      },\r\n    });\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      setInitialData({\r\n        ...props.editData,\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit();\r\n      }}\r\n    >\r\n      <div className=\"row align-items-end\">\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group mt-2\">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:applyDate\")}\r\n              <TooltipLabel id={\"apd\"} text={`The date from which this record  should be applied to the system.`} />\r\n            </label>\r\n\r\n            {props.scheme?.system_date_format === \"nep\" ? (\r\n              <>\r\n                <NepaliDatePicker\r\n                  value={values.apply_date}\r\n                  name=\"apply_date\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"apply_date\", e);\r\n                  }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <EnglishDatePicker\r\n                  name=\"apply_date\"\r\n                  value={values.apply_date}\r\n                  handleChange={(e) => {\r\n                    setFieldValue(\"apply_date\", formatDate(e));\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n            <FormikValidationError name=\"apply_date\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:roh\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"rate_for_household\"\r\n              value={values.rate_for_household}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"rate_for_household\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:roi\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"rate_for_institution\"\r\n              value={values.rate_for_institution}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"rate_for_institution\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:rop\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"rate_for_public\"\r\n              value={values.rate_for_public}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"rate_for_public\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:roc\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"rate_for_commercial\"\r\n              value={values.rate_for_commercial}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"rate_for_commercial\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:epch\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"estimated_paying_connection_household\"\r\n              value={values.estimated_paying_connection_household}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError\r\n              name=\"estimated_paying_connection_household\"\r\n              errors={errors}\r\n              touched={touched}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:epci\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"estimated_paying_connection_institution\"\r\n              value={values.estimated_paying_connection_institution}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError\r\n              name=\"estimated_paying_connection_institution\"\r\n              errors={errors}\r\n              touched={touched}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:epcp\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"estimated_paying_connection_public\"\r\n              value={values.estimated_paying_connection_public}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError\r\n              name=\"estimated_paying_connection_public\"\r\n              errors={errors}\r\n              touched={touched}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 label pl-0\">\r\n              {t(\"finance:epcc\")}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"estimated_paying_connection_commercial\"\r\n              value={values.estimated_paying_connection_commercial}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError\r\n              name=\"estimated_paying_connection_commercial\"\r\n              errors={errors}\r\n              touched={touched}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12 mt-2 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn\"\r\n            text={t(\"home:save\")}\r\n            type=\"submit\"\r\n            disabled={props.postLoading || props.updateLoading}\r\n            loading={props.postLoading || props.updateLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  postLoading: state.waterTarrifsData.postFixedRateWaterTariff.isFetching,\r\n  updateLoading: state.waterTarrifsData.updateUseBasedWaterTariff.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postFixedRateWaterTariffAction: postFixedRateWaterTariffAction,\r\n  getWaterTarrifsAction: getWaterTarrifsAction,\r\n  updateFixedRateWaterTariffAction: updateFixedRateWaterTariffAction,\r\n  getUsIncomeEstimateThisYearAction: getUsIncomeEstimateThisYearAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(UseBasedForm);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\IncomeEstimates\\ThisYear\\Table.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\DonoughtChart\\DataTable.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\Visualization\\DonoughtChart\\DataTable.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\hooks\\useDeleteConfirmation.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\IncomeExpendTable.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\ManageIncomeCategories\\List.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ManageExpenditureCategories\\List.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ManageExpenditureCategories\\Form.tsx",["2587","2588"],"import FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getExpenditureCategoryAction } from \"store/modules//expenditure/getExpenditureCategory\";\r\nimport { postExpenseCategoriesAction } from \"store/modules//expenditure/postExpenseCategories\";\r\nimport { updateExpenseCategoriesAction } from \"store/modules//expenditure/updateExpenseCategories\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst validationScheme = Yup.object({\r\n  name: Yup.string().required(\"Name is required\"),\r\n});\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  toggle: any;\r\n  setEditData: any;\r\n}\r\n\r\nconst Form = (props: Props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [initialData, setInitialData] = React.useState({\r\n    name: \"\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      setInitialData({\r\n        ...props.editData,\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  const { values, errors, touched, handleChange, handleBlur, handleSubmit } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationScheme,\r\n    onSubmit: async (submitValue, { resetForm }) => {\r\n      const requestData = submitValue;\r\n\r\n      let res;\r\n      if (props.editData) {\r\n        res = await props.updateExpenseCategoriesAction(props.editData.id, requestData);\r\n      } else {\r\n        res = await props.postExpenseCategoriesAction(requestData);\r\n      }\r\n\r\n      if (res.status === 201 || res.status === 200) {\r\n        if (res.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          setInitialData({\r\n            name: \"\",\r\n          });\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n        props.setEditData(null);\r\n        props.getExpenditureCategoryAction(props.schemeSlug);\r\n      } else {\r\n        const errors = Object.values(res.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:categoryName\")}:\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"name\"\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"name\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-4 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn  mr-3\"\r\n            text={t(\"home:save\")}\r\n            type=\"submit\"\r\n            disabled={props.postLoading || props.updateLoading}\r\n            loading={props.postLoading || props.updateLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  supplySchedule: state.waterSupplyData.waterScheduleData.data,\r\n  supplyBelts: state.supplyBeltsData.getSupplyBeltData.data,\r\n  postLoading: state.expenditureData.postExpenseCategories.isFetching,\r\n  updateLoading: state.expenditureData.updateExpenseCategories.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateExpenseCategoriesAction,\r\n  postExpenseCategoriesAction,\r\n  getExpenditureCategoryAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Form);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\ManageIncomeCategories\\Form.tsx",["2589","2590"],"import FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\r\nimport { postIncomeCategoriesAction } from \"store/modules/income/postIncomeCategories\";\r\nimport { updateIncomeCategoriesAction } from \"store/modules/income/updateIncomeCategories\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst validationScheme = Yup.object({\r\n  name: Yup.string().required(\"Name is required\"),\r\n});\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  toggle: any;\r\n  setEditData: any;\r\n}\r\n\r\nconst Form = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [initialData, setInitialData] = React.useState({\r\n    name: \"\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      setInitialData({\r\n        ...props.editData,\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  const { values, errors, touched, handleChange, handleBlur, handleSubmit } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationScheme,\r\n    onSubmit: async (submitValue, { resetForm }) => {\r\n      const requestData = submitValue;\r\n\r\n      let res;\r\n      if (props.editData) {\r\n        res = await props.updateIncomeCategoriesAction(props.editData.id, requestData);\r\n      } else {\r\n        res = await props.postIncomeCategoriesAction(requestData);\r\n      }\r\n\r\n      if (res.status === 201 || res.status === 200) {\r\n        if (res.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          setInitialData({\r\n            name: \"\",\r\n          });\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n        props.setEditData(null);\r\n        props.getIncomeCategoryAction(props.schemeSlug);\r\n      } else {\r\n        const errors = Object.values(res.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"finance:categoryName\")}\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"name\"\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"name\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-4 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn  mr-3\"\r\n            text={t(\"home:save\")}\r\n            type=\"submit\"\r\n            disabled={props.postLoading || props.updateLoading}\r\n            loading={props.postLoading || props.updateLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  supplySchedule: state.waterSupplyData.waterScheduleData.data,\r\n  supplyBelts: state.supplyBeltsData.getSupplyBeltData.data,\r\n  postLoading: state.incomeData.postIncome.isFetching,\r\n  updateLoading: state.incomeData.updateIncome.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateIncomeCategoriesAction,\r\n  postIncomeCategoriesAction,\r\n  getIncomeCategoryAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Form);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\Calender.tsx",["2591","2592","2593","2594"],"import React, { Fragment, FunctionComponent, useCallback, useEffect, useState } from \"react\"\r\nimport { NepaliDatepickerEvents, ParsedDate, parsedDateInitialValue, SplittedDate, executionDelegation, parseBSDate, stitchDate, ADToBS } from \"../Datepickerutils\"\r\nimport CalenderController from \"./components/CalenderController\"\r\nimport { DayPicker } from \"./components/DayPicker\"\r\n\r\ninterface CalenderProps {\r\n    value: string\r\n    events: NepaliDatepickerEvents\r\n    minDate: {year: number, month: number, day: number}\r\n    maxDate: {year: number, month: number, day: number}\r\n}\r\n\r\nconst Calender: FunctionComponent<CalenderProps> = ({ value, events, minDate, maxDate }) => {\r\n    const [isInitialized, setIsInitialized] = useState<boolean>(false)\r\n    const [selectedDate, setSelectedDate] = useState<ParsedDate>(parsedDateInitialValue)\r\n    const [calenderDate, setCalenderDate] = useState<ParsedDate>(parsedDateInitialValue)\r\n    \r\n    useEffect(() => {\r\n        const parsedDateValue = parseBSDate(value || ADToBS(new Date()))\r\n        setSelectedDate(parsedDateValue)\r\n        setCalenderDate(parsedDateValue)\r\n        setIsInitialized(true)\r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        if(minDate.year && minDate.month && minDate.day){\r\n            const parsedDateValue = parseBSDate(minDate.year + \"-\" + minDate.month + \"-\" + minDate.day);\r\n            !value && setSelectedDate(parsedDateValue);\r\n            !value && setCalenderDate(parsedDateValue);\r\n        }\r\n    }, [minDate, value])\r\n\r\n    const onPreviousMonthHandler = useCallback(() => {\r\n        executionDelegation(\r\n            () => {\r\n                setCalenderDate((date) => {\r\n                    let year = date.bsYear\r\n                    let month = date.bsMonth - 1\r\n\r\n                    if (month < 1) {\r\n                        month = 12\r\n                        year--\r\n                    }\r\n\r\n                    return parseBSDate(\r\n                        stitchDate(\r\n                            {\r\n                                day: date.bsDay,\r\n                                month,\r\n                                year,\r\n                            },\r\n                            \"-\",\r\n                        ),\r\n                    )\r\n                })\r\n            },\r\n            () => {\r\n                if (events.previousMonthSelect) {\r\n                    events.previousMonthSelect({ month: calenderDate.bsMonth, year: calenderDate.bsYear })\r\n                }\r\n            },\r\n        )\r\n    }, [calenderDate.bsMonth, calenderDate.bsYear, events])\r\n\r\n    const onNextMonthClickHandler = useCallback(() => {\r\n        executionDelegation(\r\n            () => {\r\n                setCalenderDate((date) => {\r\n                    let year = date.bsYear\r\n                    let month = date.bsMonth + 1\r\n\r\n                    if (month > 12) {\r\n                        month = 1\r\n                        year++\r\n                    }\r\n\r\n                    return parseBSDate(\r\n                        stitchDate(\r\n                            {\r\n                                day: date.bsDay,\r\n                                month,\r\n                                year,\r\n                            },\r\n                            \"-\",\r\n                        ),\r\n                    )\r\n                })\r\n            },\r\n            () => {\r\n                if (events.nextMonthSelect) {\r\n                    events.nextMonthSelect({ year: calenderDate.bsYear, month: calenderDate.bsMonth })\r\n                }\r\n            },\r\n        )\r\n    }, [calenderDate.bsMonth, calenderDate.bsYear, events])\r\n\r\n    const onTodayClickHandler = useCallback(() => {\r\n        const today = parseBSDate(ADToBS(new Date()))\r\n\r\n        executionDelegation(\r\n            () => {\r\n                setCalenderDate(today)\r\n                setSelectedDate(today)\r\n            },\r\n            () => {\r\n                if (events.todaySelect) {\r\n                    events.todaySelect({ year: today.bsYear, month: today.bsMonth, day: today.bsDay })\r\n                }\r\n\r\n                // OnChange\r\n                events.change && events.change(ADToBS(new Date()))\r\n            },\r\n        )\r\n    }, [])\r\n\r\n    const onYearSelectHandler = useCallback(\r\n        (year) => {\r\n            executionDelegation(\r\n                () => {\r\n                    setCalenderDate(\r\n                        parseBSDate(\r\n                            stitchDate({\r\n                                year,\r\n                                month: calenderDate.bsMonth,\r\n                                day: calenderDate.bsDay,\r\n                            }),\r\n                        ),\r\n                    )\r\n                },\r\n                () => {\r\n                    if (events.yearSelect) {\r\n                        events.yearSelect(year)\r\n                    }\r\n                },\r\n            )\r\n        },\r\n        [calenderDate],\r\n    )\r\n\r\n    const onMonthSelectHandler = useCallback(\r\n        (month) => {\r\n            executionDelegation(\r\n                () => {\r\n                    setCalenderDate(\r\n                        parseBSDate(\r\n                            stitchDate({\r\n                                year: calenderDate.bsYear,\r\n                                month,\r\n                                day: calenderDate.bsDay,\r\n                            }),\r\n                        ),\r\n                    )\r\n                },\r\n                () => {\r\n                    if (events.monthSelect) {\r\n                        events.monthSelect(month)\r\n                    }\r\n                },\r\n            )\r\n        },\r\n        [calenderDate],\r\n    )\r\n\r\n    const onDaySelectHandler = useCallback((date: SplittedDate) => {\r\n        executionDelegation(\r\n            () => {\r\n                const newDate = parseBSDate(stitchDate(date))\r\n\r\n                setCalenderDate(newDate)\r\n                setSelectedDate(newDate)\r\n            },\r\n            () => {\r\n                if (events.daySelect) {\r\n                    events.daySelect(date)\r\n                }\r\n\r\n                // OnChange\r\n                events.change && events.change(stitchDate(date))\r\n            },\r\n        )\r\n    }, [])\r\n\r\n    return (\r\n        <div className='calender'>\r\n            <div className='calendar-wrapper'>\r\n                {isInitialized && (\r\n                    <Fragment>\r\n                        <CalenderController\r\n                            onPreviousMonth={onPreviousMonthHandler}\r\n                            onNextMonth={onNextMonthClickHandler}\r\n                            calenderDate={calenderDate}\r\n                            onToday={onTodayClickHandler}\r\n                            onYearSelect={onYearSelectHandler}\r\n                            onMonthSelect={onMonthSelectHandler}\r\n                            minDate={minDate}\r\n                            maxDate={maxDate}\r\n                        />\r\n\r\n                        <DayPicker\r\n                            selectedDate={selectedDate}\r\n                            calenderDate={calenderDate}\r\n                            onDaySelect={onDaySelectHandler}\r\n                            minDate={minDate}\r\n                            maxDate={maxDate}\r\n                        />\r\n                    </Fragment>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calender\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\CustomCheckbox\\index.tsx",["2595"],"import React, { FC, InputHTMLAttributes } from \"react\";\r\nimport \"./customCheckbox.scss\";\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  label: string;\r\n  id: string;\r\n}\r\n\r\ninterface Props {\r\n  label: string;\r\n  id: string;\r\n}\r\n\r\nconst CustomCheckBox: FC<InputProps> = ({ label, id, ...rest }) => {\r\n  return (\r\n    <>\r\n      <label className=\"custom-checkbox\" htmlFor={id}>\r\n        {label}\r\n        <input type=\"checkbox\" id={id} {...rest} />\r\n        <span className=\"checkmark\"></span>\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCheckBox;\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\Charts\\General\\index.tsx",["2596"],"import React, { useEffect, useRef, useState } from \"react\"; \r\nimport * as echarts from \"echarts\";\r\nimport \"assets/theme/wonderland\";\r\n\r\ninterface Props {\r\n  options: any;\r\n  minHeight?: number;\r\n}\r\n\r\nconst def = {\r\n  title: {\r\n    text: \"折线图堆叠\",\r\n  },\r\n  tooltip: {\r\n    trigger: \"axis\",\r\n  },\r\n  legend: {\r\n    data: [\"邮件营销\", \"联盟广告\", \"视频广告\", \"直接访问\", \"搜索引擎\"],\r\n  },\r\n  grid: {\r\n    left: \"3%\",\r\n    right: \"4%\",\r\n    bottom: \"3%\",\r\n    containLabel: true,\r\n  },\r\n  toolbox: {\r\n    feature: {\r\n      saveAsImage: {},\r\n    },\r\n  },\r\n  xAxis: {\r\n    type: \"category\",\r\n    boundaryGap: false,\r\n    data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"],\r\n  },\r\n  yAxis: {\r\n    type: \"value\",\r\n  },\r\n  series: [\r\n    {\r\n      name: \"邮件营销\",\r\n      type: \"line\",\r\n      stack: \"总量\",\r\n      data: [120, 132, 101, 134, 90, 230, 210],\r\n    },\r\n    {\r\n      name: \"联盟广告\",\r\n      type: \"line\",\r\n      stack: \"总量\",\r\n      data: [220, 182, 191, 234, 290, 330, 310],\r\n    },\r\n    {\r\n      name: \"视频广告\",\r\n      type: \"line\",\r\n      stack: \"总量\",\r\n      data: [150, 232, 201, 154, 190, 330, 410],\r\n    },\r\n    {\r\n      name: \"直接访问\",\r\n      type: \"line\",\r\n      stack: \"总量\",\r\n      data: [320, 332, 301, 334, 390, 330, 320],\r\n    },\r\n    {\r\n      name: \"搜索引擎\",\r\n      type: \"line\",\r\n      stack: \"总量\",\r\n      data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n    },\r\n  ],\r\n};\r\n\r\nconst GeneralChart = (props: Props) => {\r\n  const myChart = useRef<any>(null);\r\n \r\n  useEffect(() => {\r\n    const charts = echarts.init(myChart.current, 'westeros');\r\n    charts.clear();\r\n    charts.setOption(props.options || def);  \r\n  }, [props.options]);\r\n \r\n  return (\r\n    <>\r\n      <div\r\n        ref={myChart}\r\n        style={{ width: \"100%\", minHeight: props.minHeight || 500 }}\r\n      ></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GeneralChart;\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\StyledSelect\\CreatableSelect.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\TooltipLabel\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\GeneralModal\\index.tsx",["2597","2598","2599","2600","2601","2602","2603"],"import React, { useState } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { GeneralCard } from \"../GeneralCard\";\r\nimport \"./GeneralModal.scss\";\r\nimport Image from \"assets/images/xd/cash.png\";\r\ninterface Props {\r\n  open: boolean;\r\n  toggle: () => void;\r\n  title?: string;\r\n  children?: any;\r\n  size?: string\r\n}\r\n\r\nconst GeneralModal = (props: Props) => {\r\n  return (\r\n    <div className=\"modal generalModal\">\r\n      <Modal\r\n        isOpen={props.open}\r\n        toggle={props.toggle}\r\n        className={\"\"}\r\n        backdrop={true}\r\n        centered\r\n        size={props.size ||\"xl\"}\r\n      >\r\n        <div className=\"p-4\">\r\n          {props.title && (\r\n            <div className=\"generalModal-header\">\r\n              <h3 className=\"generalModal-header-title\">{props.title}</h3>\r\n            </div>\r\n          )}\r\n          <div className=\"generalModal-body\">{props.children}</div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeneralModal;\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\ConfirmationModal\\index.tsx",["2604","2605"],"import React from \"react\";\r\nimport { ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport Modal from \"reactstrap/lib/Modal\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { confirmationMessage } from \"i18n/i18n\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IProps {\r\n  text?: string;\r\n  open: boolean;\r\n  handleModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n  handleConfirmClick: () => void;\r\n  loading?: boolean;\r\n}\r\n\r\nfunction ConfirmationModal(props: IProps) {\r\n  const { t } = useTranslation();\r\n  const { text, open, loading, handleModal, handleConfirmClick } = props;\r\n  return (\r\n    <Modal isOpen={open} toggle={() => handleModal(false)} className=\"\" centered={true}>\r\n      <div className=\"modal-header\">\r\n        <div className=\"d-flex w-100\">\r\n          <div className=\"flex-grow-1\">\r\n            <h5 className=\"mt-2 mb-4 text-primary\">{t('home:confirmation')}</h5>\r\n\r\n            <h5 className=\"des\">{text || confirmationMessage()}</h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ModalFooter>\r\n        <Button className=\"btn custom-btn-outlined\" onClick={() => handleModal(false)}>\r\n        {t('home:cancel')}\r\n        </Button>\r\n        <button className=\"btn custom-btn\" onClick={() => handleConfirmClick()}>\r\n          {loading ? <></> : t('home:confirm')}\r\n        </button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ConfirmationModal;\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\List.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\List.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\Form.tsx",["2606","2607","2608","2609"],"import EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getWaterSupplyScheduleAction } from \"store/modules/waterSupplySchedule/getWaterSupplySchedule\";\r\nimport { postWaterSupplyScheduleAction } from \"store/modules/waterSupplySchedule/postSupplySchedule\";\r\nimport { updateWaterSupplyScheduleAction } from \"store/modules/waterSupplySchedule/updateSupplySchedule\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { initialValues, validationSchema } from \"./schema\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  toggle: any;\r\n}\r\n\r\nconst Form = (props: Props) => {\r\n  const { t } = useTranslation([\"home\"]);\r\n\r\n  const [initialData, seetInitialData] = React.useState(initialValues);\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      seetInitialData({\r\n        ...props.editData,\r\n        time_from: new Date().setHours(\r\n          props.editData.time_from?.split(\":\")[0],\r\n          props.editData.time_from?.split(\":\")[1]\r\n        ),\r\n        time_to: new Date().setHours(\r\n          props.editData.time_to?.split(\":\")[0],\r\n          props.editData.time_to?.split(\":\")[1]\r\n        ),\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleChange,\r\n    handleBlur,\r\n    setFieldValue,\r\n    setFieldTouched,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (submitValue, { resetForm }) => {\r\n      const requestData = {\r\n        ...submitValue,\r\n        time_from: formatTime(submitValue.time_from),\r\n        time_to: formatTime(submitValue.time_to),\r\n      };\r\n      let res;\r\n      if (props.editData) {\r\n        res = await props.updateWaterSupplyScheduleAction(\r\n          props.language,\r\n          props.editData.id,\r\n          requestData\r\n        );\r\n      } else {\r\n        res = await props.postWaterSupplyScheduleAction(props.language, requestData);\r\n      }\r\n\r\n      console.log(res, \"resss\");\r\n\r\n      if (res.status === 201 || res.status === 200) {\r\n        if (res.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          seetInitialData(initialValues);\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n\r\n        props.getWaterSupplyScheduleAction(props.language, props.schemeSlug);\r\n      } else {\r\n        const errors = Object.values(res.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  const formatTime = (time) => {\r\n    const receivedTime = new Date(time).toTimeString();\r\n    return receivedTime.split(\" \")[0];\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:day\")}\r\n            </label>\r\n\r\n            <input className=\"form-control\" name=\"day\" value={values.day} onChange={handleChange} />\r\n            <FormikValidationError name=\"day\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:timeFrom\")}\r\n            </label>\r\n\r\n            <EnglishDatePicker\r\n              name=\"time_from\"\r\n              value={values.time_from}\r\n              handleChange={(e) => {\r\n                setFieldValue(\"time_from\", e);\r\n              }}\r\n              showTimeSelect={true}\r\n              showTimeSelectOnly={true}\r\n              dateFormat=\"HH:mm\"\r\n              timeIntervals={15}\r\n            />\r\n\r\n            <FormikValidationError name=\"time_from\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:timeTo\")}\r\n            </label>\r\n            <EnglishDatePicker\r\n              name=\"time_to\"\r\n              value={values.time_to}\r\n              handleChange={(e) => {\r\n                setFieldValue(\"time_to\", e);\r\n              }}\r\n              showTimeSelect={true}\r\n              showTimeSelectOnly={true}\r\n              dateFormat=\"HH:mm\"\r\n              timeIntervals={15}\r\n            />\r\n\r\n            <FormikValidationError name=\"time_to\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12 text-right\">\r\n          <div className=\"pl-md-5 mt-3\">\r\n            <Button\r\n              className=\"btn custom-btn  mr-3\"\r\n              text={t(\"home:save\")}\r\n              disabled={props.postLoading || props.updateLoading}\r\n              loading={props.postLoading || props.updateLoading}\r\n            />\r\n            <Button\r\n              className=\"btn custom-btn-outlined\"\r\n              text={t(\"home:cancel\")}\r\n              onClick={() => props.toggle()}\r\n              type=\"button\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  supplySchedule: state.waterSupplyData.waterScheduleData.data,\r\n  postLoading: state.waterSupplyData.postWaterScheduleData.isFetching,\r\n  updateLoading: state.waterSupplyData.updateWaterScheduleData.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postWaterSupplyScheduleAction,\r\n  getWaterSupplyScheduleAction,\r\n  updateWaterSupplyScheduleAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Form);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\Form.tsx",["2610","2611","2612","2613"],"import NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getSchemeDataAction } from \"store/modules/waterScheme/getWaterSchemeData\";\r\nimport { postWaterSchemeDataAction } from \"store/modules/waterScheme/postWaterSchemeData\";\r\nimport { updateWaterSchemeDataAction } from \"store/modules/waterScheme/updateWaterSchemeData\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport formatDate from \"utils/utilsFunction/date-converter\";\r\nimport { supplyBeltInitialValues, supplyBeltValidationSchema } from \"./schema\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  toggle: any;\r\n}\r\n\r\nconst Form = (props: Props) => {\r\n  const { t } = useTranslation([\"home\"]);\r\n  const [initialData, seetInitialData] = React.useState(supplyBeltInitialValues);\r\n\r\n  React.useEffect(() => {\r\n    if (props.language && props.schemeSlug) {\r\n      props.getSchemeDataAction(props.language);\r\n    }\r\n  }, [props.language, props.schemeSlug]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      seetInitialData({\r\n        ...props.editData,\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.scheme) {\r\n      seetInitialData({\r\n        ...props.editData,\r\n        apply_date: props.scheme?.tool_start_date,\r\n      });\r\n    }\r\n  }, [props.scheme]);\r\n\r\n  const { values, errors, touched, handleChange, setFieldValue, handleSubmit } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: supplyBeltValidationSchema,\r\n    onSubmit: async (submitValue, { resetForm }) => {\r\n      const requestData = {\r\n        ...submitValue,\r\n      };\r\n\r\n      let res;\r\n      if (props.editData) {\r\n        res = await props.updateWaterSchemeDataAction(\r\n          props.language,\r\n          props.editData.id,\r\n          requestData\r\n        );\r\n      } else {\r\n        res = await props.postWaterSchemeDataAction(props.language, requestData);\r\n      }\r\n\r\n      console.log(res, \"resss\");\r\n\r\n      if (res.status === 201 || res.status === 200) {\r\n        if (res.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          seetInitialData(supplyBeltInitialValues);\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n\r\n        props.getSchemeDataAction(props.language);\r\n      } else {\r\n        const errors = Object.values(res.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:instConn\")}{\" \"}\r\n              {/* <TooltipLabel\r\n                id={\"tnoieocu\"}\r\n                text={`Total number of Institutional/ educational organization using water system`}\r\n              /> */}\r\n              :\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"institutional_connection\"\r\n              value={values.institutional_connection}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError\r\n              name=\"institutional_connection\"\r\n              errors={errors}\r\n              touched={touched}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:commercialConn\")}{\" \"}\r\n              {/* <TooltipLabel\r\n                id={\"tnocuws\"}\r\n                text={`Total number of commercials using water system`}\r\n              /> */}\r\n              :\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"commercial_connection\"\r\n              value={values.commercial_connection}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"commercial_connection\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:houseConn\")}{\" \"}\r\n              {/* <TooltipLabel id={\"tnohuws\"} text={`Total number of houses using water system`} />: */}\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"household_connection\"\r\n              value={values.household_connection}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"household_connection\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:publicConn\")}:\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"public_connection\"\r\n              value={values.public_connection}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"public_connection\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1 \">\r\n              {t(\"home:applyDate\")}{\" \"}\r\n              <TooltipLabel\r\n                id={\"tnohuws\"}\r\n                text={`The date from which this record  should be applied to the system. `}\r\n              />\r\n              :\r\n            </label>\r\n\r\n            {props.scheme?.system_date_format === \"nep\" ? (\r\n              <>\r\n                <NepaliDatePicker\r\n                  value={values.apply_date}\r\n                  name=\"apply_date\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"apply_date\", e);\r\n                  }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <EnglishDatePicker\r\n                  name=\"apply_date\"\r\n                  value={values.apply_date}\r\n                  handleChange={(e) => {\r\n                    setFieldValue(\"apply_date\", formatDate(e));\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n            <FormikValidationError name=\"belt_type\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn  mr-3\"\r\n            text={t(\"home:save\")}\r\n            loading={props.postLoading || props.updateLoading}\r\n            disabled={props.postLoading || props.updateLoading}\r\n          />\r\n          <Button\r\n            className=\"btn custom-btn-outlined mr-3\"\r\n            text={t(\"home:cancel\")}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              props.toggle();\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  supplySchedule: state.waterSupplyData.waterScheduleData.data,\r\n  supplyBelts: state.supplyBeltsData.getSupplyBeltData.data,\r\n  postLoading: state.waterSchemeData.postWaterSchemeData.isFetching,\r\n  updateLoading: state.waterSchemeData.updateWaterSchemeData.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getSchemeDataAction,\r\n  postWaterSchemeDataAction,\r\n  updateWaterSchemeDataAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Form);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\waterTarrifs\\updateFixedBasedWaterTariff.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\List.tsx",["2614"],"import { DeleteIcon, EditActionIcon } from \"assets/images/xd\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport ConfirmationModal from \"components/UI/ConfirmationModal\";\r\nimport useDeleteConfirmation from \"hooks/useDeleteConfirmation\";\r\nimport { getNumberByLanguage } from \"i18n/i18n\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { deleteSchemeUserAction } from \"store/modules/waterScheme/deleteWaterSchemeUser\";\r\nimport { getSchemeUserAction } from \"store/modules/waterScheme/getWaterSchemeUser\";\r\nimport { getWaterSupplyScheduleAction } from \"store/modules/waterSupplySchedule/getWaterSupplySchedule\";\r\nimport { RootState } from \"store/root-reducer\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  setEditData: any;\r\n  toggle: any;\r\n}\r\n\r\nconst List = (props: Props) => {\r\n  const { t } = useTranslation([\"home\"]);\r\n\r\n  const { editId, modal, handleDeleteClick, resetDeleteData, toggleModal } =\r\n    useDeleteConfirmation();\r\n\r\n  React.useEffect(() => {\r\n    props.getSchemeUserAction();\r\n  }, []);\r\n\r\n  const deleteAppUsers = async () => {\r\n    try {\r\n      const response = await props.deleteSchemeUserAction(editId);\r\n      console.log(response, \"response\");\r\n      if (response.status === 204) {\r\n        toast.success(t(\"home:deleteSuccess\"));\r\n        props.getSchemeUserAction();\r\n        resetDeleteData();\r\n      } else {\r\n        toast.error(t(\"home:deleteError\"));\r\n        resetDeleteData();\r\n      }\r\n    } catch (error) {\r\n      console.log(error, \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-table mt-4\">\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table mt-2\">\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"home:sn\")}</th>\r\n              <th>{t(\"home:name\")}</th>\r\n              <th>{t(\"home:phone\")}</th>\r\n              <th>{t(\"home:action\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.caretakerList?.map((item, index) => (\r\n              <tr key={item.id}>\r\n                <td>{getNumberByLanguage(index + 1)}</td>\r\n                <td> {item.name}</td>\r\n                <td> {getNumberByLanguage(item.phone_number) || \"-\"}</td>\r\n                <td className=\"action\">\r\n                  <div role=\"button\" onClick={() => props.setEditData(item)}>\r\n                    <img src={EditActionIcon} alt=\"\" />\r\n                  </div>\r\n                  <div role=\"button\" onClick={() => handleDeleteClick(item.id)}>\r\n                    <img src={DeleteIcon} alt=\"\" />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <ConfirmationModal\r\n        open={modal}\r\n        handleModal={() => toggleModal()}\r\n        handleConfirmClick={() => deleteAppUsers()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  caretakerList: state.waterSchemeData.getWaterSchemeUser.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getWaterSupplyScheduleAction,\r\n  deleteSchemeUserAction,\r\n\r\n  getSchemeUserAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(List);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\Form.tsx",["2615","2616","2617","2618"],"import FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport TooltipLabel from \"components/UI/TooltipLabel\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getSupplyBeltsAction } from \"store/modules/supplyBelts/getWaterSupplyBelts\";\r\nimport { getSchemeUserAction } from \"store/modules/waterScheme/getWaterSchemeUser\";\r\nimport { postWaterSchemeUserAction } from \"store/modules/waterScheme/postWaterSchemeUser\";\r\nimport { updateWaterSchemeUserAction } from \"store/modules/waterScheme/updateWaterSchemeUser\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { mobileUserInitialValues, mobileUserValidationSchema } from \"./schema\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  toggle: any;\r\n}\r\n\r\nconst Form = (props: Props) => {\r\n  const { t } = useTranslation([\"home\"]);\r\n\r\n  const [initialData, setInitialData] = React.useState(mobileUserInitialValues);\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      setInitialData({\r\n        ...props.editData,\r\n      });\r\n    }\r\n  }, [props.editData]);\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleChange,\r\n    handleBlur,\r\n    setFieldValue,\r\n    setFieldTouched,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: mobileUserValidationSchema,\r\n    onSubmit: async (submitValue, { resetForm }) => {\r\n      const requestData = submitValue;\r\n\r\n      let res;\r\n      if (props.editData) {\r\n        res = await props.updateWaterSchemeUserAction(props.editData.id, requestData);\r\n      } else {\r\n        res = await props.postWaterSchemeUserAction(requestData);\r\n      }\r\n\r\n      console.log(res, \"resss\");\r\n\r\n      if (res.status === 201 || res.status === 200) {\r\n        if (res.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          setInitialData(mobileUserInitialValues);\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n\r\n        props.getSchemeUserAction();\r\n      } else {\r\n        const errors = Object.values(res.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"home:name\")}:\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"name\"\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <FormikValidationError name=\"name\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"home:phone\")}:\r\n            </label>\r\n\r\n            <input\r\n              type={\"number\"}\r\n              className=\"form-control\"\r\n              name=\"phone_number\"\r\n              value={values.phone_number}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              maxLength={10}\r\n            />\r\n            <FormikValidationError name=\"phone_number\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n\r\n        \r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"home:password\")} ({t(\"home:pin\")}) <TooltipLabel id={\"psba4\"} text={`\"Password should be atleast 4  number digits. Alpha Character and special \r\ncharacter are not used.\"`} />:\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"password1\"\r\n              type=\"number\"\r\n              value={values.password1}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"password1\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"\" className=\"mr-1\">\r\n              {t(\"home:confirmpassword\")}:\r\n            </label>\r\n\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"password2\"\r\n              type=\"number\"\r\n              value={values.password2}\r\n              onChange={handleChange}\r\n            />\r\n            <FormikValidationError name=\"password2\" errors={errors} touched={touched} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn  mr-3\"\r\n            text={t(\"home:save\")}\r\n            disabled={props.postLoading || props.updateLoading}\r\n            loading={props.postLoading || props.updateLoading}\r\n          />\r\n          <Button\r\n            className=\"btn custom-btn-outlined mr-3\"\r\n            text={t(\"home:cancel\")}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              props.toggle();\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  supplySchedule: state.waterSupplyData.waterScheduleData.data,\r\n  supplyBelts: state.supplyBeltsData.getSupplyBeltData.data,\r\n  postLoading: state.waterSchemeData.postWaterSchemeUser.isFetching,\r\n  updateLoading: state.waterSchemeData.updateWaterSchemeUser.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getSupplyBeltsAction,\r\n  postWaterSchemeUserAction,\r\n  getSchemeUserAction,\r\n  updateWaterSchemeUserAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Form);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\schema.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\CalenderController.tsx",["2619","2620","2621"],"import React, { FunctionComponent, useEffect, useState } from \"react\"\r\nimport { NextIcon, PreviousIcon, TodayIcon } from \"./Icons\"\r\nimport { ParsedDate } from \"../../Datepickerutils\"\r\nimport MonthPicker from \"./MonthPicker\"\r\nimport YearPicker from \"./YearPicker\"\r\n\r\ninterface CalenderControllerProps {\r\n    onNextMonth: () => void\r\n    onPreviousMonth: () => void\r\n    onToday: () => void\r\n    onYearSelect: (year: number) => void\r\n    onMonthSelect: (year: number) => void\r\n    calenderDate: ParsedDate\r\n    minDate: {year: number, month: number, day: number}\r\n    maxDate: {year: number, month: number, day: number}\r\n}\r\n\r\nconst CalenderController: FunctionComponent<CalenderControllerProps> = (props) => {\r\n    const { onNextMonth, onPreviousMonth, calenderDate, onToday, onYearSelect, onMonthSelect, minDate, maxDate } = props\r\n\r\n    const [disableNext, setdisableNext] = useState(false)\r\n    const [disablePrevious, setdisablePrevious] = useState(false)\r\n    const [disableToday, setdisableToday] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(maxDate.year && maxDate.month){\r\n            setdisableNext(() => maxDate.year <= calenderDate.bsYear && maxDate.month <= calenderDate.bsMonth);\r\n            setdisableToday(() => maxDate.year <= calenderDate.bsYear && maxDate.month <= calenderDate.bsMonth && maxDate.day < calenderDate.bsDay);\r\n        }\r\n        if(minDate.year && minDate.month){\r\n            setdisablePrevious(() => minDate.year >= calenderDate.bsYear && minDate.month >= calenderDate.bsMonth);\r\n            setdisableToday(() => minDate.year >= calenderDate.bsYear && minDate.month >= calenderDate.bsMonth && maxDate.day > calenderDate.bsDay);\r\n        }\r\n        \r\n    }, [minDate, maxDate, calenderDate])\r\n\r\n\r\n    return (\r\n        <div className='calendar-controller'>\r\n            <span className={`control icon ${disablePrevious ? \"disabled\" : \"\"}`} title={\"अघिल्लो\"} onClick={() => !disablePrevious && onPreviousMonth()}>\r\n                <PreviousIcon />\r\n            </span>\r\n\r\n            <div className='date-indicator'>\r\n                <MonthPicker date={calenderDate} onSelect={onMonthSelect} maxYear={maxDate.year} minYear={minDate.year} maxMonth={maxDate.month} minMonth={minDate.month}/>\r\n                <YearPicker date={calenderDate} onSelect={onYearSelect} maxYear={maxDate.year} minYear={minDate.year}/>\r\n            </div>\r\n\r\n            {/* <span className='control icon icon-today' title={\"आज\"} onClick={() => !disableToday && onToday()}>\r\n                <TodayIcon color='#2096f5' />\r\n            </span> */}\r\n\r\n            <span className={`control icon ${disableNext ? \"disabled\" : \"\"}`} title={\"अर्को\"} onClick={() => !disableNext && onNextMonth()}>\r\n                <NextIcon />\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalenderController\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\schema.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\schema.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\store\\modules\\income\\deleteIncomeCategory.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\assets\\theme\\wonderland.js",[],["2622","2623"],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\schema.ts",["2624"],"import * as yup from 'yup'\r\n\r\n\r\nexport const mobileUserInitialValues = { \r\n    name: \"\",\r\n    phone_number: \"\",\r\n    password1: \"\",\r\n    password2: \"\"\r\n};\r\n\r\nexport const mobileUserValidationSchema = yup.object({ \r\n    name: yup.string().required(\"This field is required.\"),\r\n    phone_number: yup.string().required(\"This field is required.\").length(10, \"Mobile number must be of 10 digits.\").test(\r\n        \"phone_number\",\r\n        \"Please enter a valid 10 digit mobile humber.\",\r\n        function (value) {\r\n            const { end_time } = this.parent;\r\n            return value?.indexOf(\"+\") !== -1 || value?.indexOf(\"-\") !== -1 || true\r\n        }\r\n    ),\r\n    password1: yup.string().min(4, \"Password must have at least 4 characters \").required(\"This field is required.\"),\r\n    password2: yup.string().required(\"This field is required.\").oneOf([yup.ref('password1'), null], \"Password does not match!\"),\r\n})","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\YearPicker.tsx",["2625"],"import React, { FunctionComponent, useMemo, useState } from \"react\"\r\nimport { DropDown, OptionType } from \"./DropDown\"\r\nimport { ParsedDate, range } from \"../../Datepickerutils\"\r\nimport { convertEngToNepNumber } from \"../../Datepickerutils\"\r\n\r\ninterface YearPickerProps {\r\n    date: ParsedDate\r\n    onSelect: (year: number) => void\r\n    minYear: number;\r\n    maxYear: number;\r\n}\r\n\r\nconst YearPicker: FunctionComponent<YearPickerProps> = ({ date, onSelect, minYear, maxYear }) => {\r\n    const [showDropdown, setShowDropdown] = useState(false)\r\n\r\n    const currentYear: OptionType = useMemo((): OptionType => {\r\n        const year = date.bsYear\r\n\r\n        return {\r\n            label: year.toString(),\r\n            value: year,\r\n        }\r\n    }, [date])\r\n\r\n    const years: OptionType[] = useMemo(\r\n        (): OptionType[] =>\r\n            range(minYear || 1970, maxYear || 2100)\r\n                // .reverse()\r\n                .map(\r\n                    (year: number): OptionType => ({\r\n                        label: convertEngToNepNumber(year.toString()),\r\n                        value: year,\r\n                    }),\r\n                ),\r\n        [],\r\n    )\r\n\r\n    const handleDropdownView = (selected: OptionType) => {\r\n        setShowDropdown(!showDropdown)\r\n        onSelect(selected.value)\r\n    }\r\n\r\n    return (\r\n        <div className='control year'>\r\n            <span className='current-year' onClick={() => setShowDropdown(!showDropdown)}>\r\n                {convertEngToNepNumber(currentYear.label)}\r\n            </span>\r\n            {showDropdown && <DropDown options={years} value={currentYear.value} onSelect={handleDropdownView} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default YearPicker\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\MonthPicker.tsx",["2626"],"import React, { FunctionComponent, useMemo, useState } from \"react\"\r\nimport { DropDown, OptionType } from \"./DropDown\"\r\nimport { localeType, ParsedDate } from \"../../Datepickerutils\"\r\nimport { calendarData } from \"../../Dateconverter\"\r\n\r\ninterface MonthPickerProps {\r\n    date: ParsedDate\r\n    onSelect: (year: number) => void\r\n    minMonth: number;\r\n    maxMonth: number;\r\n    minYear: number;\r\n    maxYear: number;\r\n}\r\n\r\nconst MonthPicker: FunctionComponent<MonthPickerProps> = ({ date, onSelect, minMonth, maxMonth, maxYear, minYear }) => {\r\n    const [showDropdown, setShowDropdown] = useState(false)\r\n\r\n    const currentMonth: OptionType = useMemo((): OptionType => {\r\n        const month = date.bsMonth\r\n\r\n        return {\r\n            label: calendarData.bsMonths[month - 1],\r\n            value: month,\r\n        }\r\n    }, [date])\r\n\r\n    const monthList: OptionType[] = useMemo(() => {\r\n        return calendarData.bsMonths.map((month, index) => ({\r\n            label: month,\r\n            value: index + 1,\r\n        })).filter((month) => {\r\n            if(minMonth && maxMonth){\r\n                return (date.bsYear > minYear ? true : (+month.value >= minMonth)) && (date.bsYear < maxYear ? true : (+month.value <= maxMonth))\r\n            }\r\n            if(minMonth){\r\n                return date.bsYear > minYear ? true : (+month.value >= minMonth)\r\n            }\r\n            if(maxMonth){\r\n                return date.bsYear < maxYear ? true : (+month.value <= maxMonth)\r\n            }\r\n            return true;\r\n        })\r\n    }, [date, minMonth, maxMonth, minYear, maxYear])\r\n\r\n    const handleDropdownView = (selected: OptionType) => {\r\n        setShowDropdown(!showDropdown)\r\n        onSelect(selected.value)\r\n    }\r\n\r\n    return (\r\n        <div className='control month'>\r\n            <span className='current-month' onClick={() => setShowDropdown(!showDropdown)}>\r\n                {currentMonth.label}\r\n            </span>\r\n            {showDropdown && <DropDown options={monthList} value={currentMonth.value} onSelect={handleDropdownView} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MonthPicker\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\DayPicker.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\IncomeForm.tsx",["2627","2628","2629"],"import NepaliDatePicker from \"components/React/Datepicker/Datepicker\";\r\nimport EnglishDatePicker from \"components/React/EnglishDatepicker/EnglishDatepicker\";\r\nimport FormikValidationError from \"components/React/FormikValidationError/FormikValidationError\";\r\nimport StyledSelect from \"components/React/StyledSelect/StyledSelect\";\r\nimport toast from \"components/React/ToastNotifier/ToastNotifier\";\r\nimport Button from \"components/UI/Forms/Buttons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getIncomeAction } from \"store/modules/income/getIcome\";\r\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\r\nimport { postIncomeAction } from \"store/modules/income/postIncome\";\r\nimport { updateIncomeAction } from \"store/modules/income/updateIncome\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport formatDate, { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\nimport { getPreviousIncomeTotalAction } from \"store/modules/income/getPreviousIncomeTotal\";\r\n\r\nconst validationScheme = Yup.object({\r\n  category: Yup.mixed().required(\"This field is required\"),\r\n  date: Yup.string().required(\"This field is required\"),\r\n  title: Yup.string().required(\"This field is required\"),\r\n  income_amount: Yup.string().required(\"This field is required\"),\r\n  water_supplied: Yup.string(),\r\n});\r\n\r\ninterface Props extends PropsFromRedux {\r\n  editData: any;\r\n  toggle: any;\r\n  setEditData: any;\r\n  activeDate?: string;\r\n}\r\n\r\nconst IncomeForm = (props: Props) => {\r\n  const { t } = useTranslation();\r\n  const [initialData, setInitialData] = React.useState({\r\n    category: null as any,\r\n    date: \"\",\r\n    title: \"\",\r\n    income_amount: \"\",\r\n    water_supplied: \"\",\r\n  });\r\n  const [categoryOption, setCategoryOptions] = React.useState<OptionType[]>();\r\n\r\n  React.useEffect(() => {\r\n    if (props.schemeSlug) {\r\n      getIncomeCategoryAction(props.schemeSlug);\r\n    }\r\n  }, [props.schemeSlug]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.incomeCategories) {\r\n      const options = props.incomeCategories?.map((item: any) => ({\r\n        label: item.name,\r\n        value: item.id,\r\n        e_name: item.e_name,\r\n      }));\r\n      setCategoryOptions(options);\r\n    }\r\n  }, [props.incomeCategories]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.editData) {\r\n      setInitialData({\r\n        ...props.editData,\r\n        category: { label: props.editData?.category?.name, value: props.editData?.category?.id },\r\n      });\r\n    } else if (props.activeDate) {\r\n      setInitialData({\r\n        ...initialData,\r\n        date: props.activeDate,\r\n      });\r\n    }\r\n  }, [props.editData, props.activeDate]);\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    touched,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initialData,\r\n    validationSchema: validationScheme,\r\n    onSubmit: async (submitValue, { resetForm }) => {\r\n      let requestData: any = {\r\n        ...submitValue,\r\n        category: submitValue?.category?.value,\r\n      };\r\n      if (!values.water_supplied) delete requestData.water_supplied;\r\n      let res;\r\n      if (props.editData) {\r\n        res = await props.updateIncomeAction(props.language, props.editData.id, requestData);\r\n      } else {\r\n        res = await props.postIncomeAction(props.language, requestData);\r\n      }\r\n\r\n      if (res.status === 201 || res.status === 200) {\r\n        if (res.status === 201) {\r\n          resetForm();\r\n          toast.success(t(\"home:postSuccess\"));\r\n        } else {\r\n          setInitialData({\r\n            category: null,\r\n            date: \"\",\r\n            title: \"\",\r\n            income_amount: \"\",\r\n            water_supplied: \"\",\r\n          });\r\n          toast.success(t(\"home:updateSuccess\"));\r\n        }\r\n        props.toggle(false);\r\n        props.setEditData(null);\r\n        props.getIncomeAction(props.language, props.schemeSlug);\r\n\r\n        props.getIncomeCategoryAction(props.schemeSlug);\r\n        props.getPreviousIncomeTotalAction(\r\n          props.language,\r\n          props.schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(props.scheme?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(props.scheme?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n      } else {\r\n        const errors = Object.values(res.data)?.map((item: any) => {\r\n          toast.error(item[0]);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e);\r\n      }}\r\n    >\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"form-group \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\" className=\"mr-1\">\r\n                {t(\"finance:category\")} {}:\r\n              </label>\r\n\r\n              <StyledSelect\r\n                name=\"category\"\r\n                value={values.category}\r\n                options={categoryOption}\r\n                onChange={({ name, value }) => {\r\n                  setFieldValue(name, value);\r\n                }}\r\n                onBlur={() => {\r\n                  setFieldTouched(\"category\", true);\r\n                }}\r\n              />\r\n\r\n              <FormikValidationError name=\"category\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\" className=\"mr-1\">\r\n                {t(\"finance:date\")} :\r\n              </label>\r\n\r\n              {props.scheme?.system_date_format === \"nep\" ? (\r\n                <>\r\n                  <NepaliDatePicker\r\n                    value={values.date}\r\n                    name=\"date\"\r\n                    onChange={(e) => {\r\n                      setFieldValue(\"date\", e);\r\n                    }}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <EnglishDatePicker\r\n                    name=\"date\"\r\n                    value={values.date}\r\n                    handleChange={(e) => {\r\n                      setFieldValue(\"date\", formatDate(e));\r\n                    }}\r\n                  />\r\n                </>\r\n              )}\r\n              <FormikValidationError name=\"date\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\" className=\"mr-1\">\r\n                {t(\"finance:title\")}:\r\n              </label>\r\n\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              <FormikValidationError name=\"title\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\" className=\"mr-1\">\r\n                {t(\"finance:amount\")}:\r\n              </label>\r\n\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"income_amount\"\r\n                value={values.income_amount}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              <FormikValidationError name=\"income_amount\" errors={errors} touched={touched} />\r\n            </div>\r\n          </div> \r\n          {values?.category?.e_name === \"Water Sales\" && (\r\n            <div className=\"form-group \">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"mr-1\">\r\n                  {t(\"finance:waterSupplied\")} :\r\n                </label>\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  name=\"water_supplied\"\r\n                  value={values.water_supplied}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <FormikValidationError name=\"water_supplied\" errors={errors} touched={touched} />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"col-md-12 text-right\">\r\n          <Button\r\n            className=\"btn custom-btn  mr-3\"\r\n            text={\"Save\"}\r\n            type=\"submit\"\r\n            disabled={props.postLoading || props.updateLoading}\r\n            loading={props.postLoading || props.updateLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  scheme: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  incomeCategories: state.incomeData.getIncomeCategory.data,\r\n  postLoading: state.incomeData.postIncome.isFetching,\r\n  updateLoading: state.incomeData.updateIncome.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getIncomeAction,\r\n  updateIncomeAction,\r\n  postIncomeAction,\r\n  getIncomeCategoryAction,\r\n  getPreviousIncomeTotalAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(IncomeForm);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\DayPickerHeader.tsx",["2630"],"import React, { FunctionComponent, useMemo } from \"react\"\r\nimport { calendarData } from \"../../../Dateconverter\"\r\n\r\nconst DayPickerHeader: FunctionComponent = () => {\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {calendarData.bsDays.map((weekDay: string, index: number) => (\r\n                    <td key={index}>{weekDay}</td>\r\n                ))}\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nexport default DayPickerHeader\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\DayPickerBody.tsx",["2631"],"import React, { FunctionComponent, useCallback, useMemo } from \"react\"\r\nimport { ParsedDate, SplittedDate, ADToBS, getNumberOfDaysInBSMonth, range, splitDate } from \"../../../Datepickerutils\"\r\nimport { calendarData } from \"../../../Dateconverter\"\r\nimport { convertEngToNepNumber } from \"../../../Datepickerutils\"\r\n\r\ninterface DayPickerBodyProps {\r\n    selectedDate: ParsedDate\r\n    calenderDate: ParsedDate\r\n    onSelect: (date: SplittedDate) => void\r\n    minDate: {year: number, month: number, day: number}\r\n    maxDate: {year: number, month: number, day: number}\r\n}\r\n\r\ninterface DayInfo {\r\n    day: number\r\n    month: number\r\n    year: number\r\n    isCurrentMonth: boolean\r\n    isToday: boolean\r\n    isSelected: boolean\r\n}\r\n\r\nconst DayPickerBody: FunctionComponent<DayPickerBodyProps> = ({ selectedDate, calenderDate: date, onSelect, minDate, maxDate }) => {\r\n    const weeksInMonth = useMemo(\r\n        () => Math.ceil((date.firstAdDayInBSMonth.getDay() + date.numberOfDaysInBSMonth) / 7) - 1,\r\n        [date],\r\n    )\r\n    const previousMonth = useMemo(() => (date.bsMonth - 1 !== 0 ? date.bsMonth - 1 : 12), [date])\r\n    const previousYear = useMemo(() => (previousMonth === 12 ? date.bsYear - 1 : date.bsYear), [previousMonth, date])\r\n    const previousMonthDays = useMemo(\r\n        () =>\r\n            previousYear >= calendarData.minBsYear\r\n                ? getNumberOfDaysInBSMonth({\r\n                    month: previousMonth,\r\n                    year: previousYear,\r\n                })\r\n                : 30,\r\n        [previousYear],\r\n    )\r\n\r\n    const getDayInfo = useCallback(\r\n        (weekNum, weekDayNum): DayInfo => {\r\n            let day = weekNum * 7 + weekDayNum - date.firstAdDayInBSMonth.getDay()\r\n            const month = date.bsMonth\r\n            const year = date.bsYear\r\n\r\n            let isCurrentMonth = true\r\n\r\n            if (day <= 0) {\r\n                day = previousMonthDays + day\r\n                isCurrentMonth = false\r\n            } else if (day > date.numberOfDaysInBSMonth) {\r\n                day = day - date.numberOfDaysInBSMonth\r\n                isCurrentMonth = false\r\n            }\r\n\r\n            const today = splitDate(ADToBS(new Date()))\r\n\r\n            const isToday = isCurrentMonth\r\n                ? today.day === day && today.month === date.bsMonth && today.year === date.bsYear\r\n                : false\r\n            const isSelected = isCurrentMonth\r\n                ? selectedDate.bsDay === day &&\r\n                  selectedDate.bsMonth === date.bsMonth &&\r\n                  selectedDate.bsYear === date.bsYear\r\n                : false\r\n\r\n            return { day, month, year, isCurrentMonth, isToday, isSelected }\r\n        },\r\n        [date, selectedDate, previousMonthDays],\r\n    )\r\n\r\n    const onDateSelectHandler = useCallback(\r\n        (dayInfo: DayInfo) => {\r\n            if (dayInfo.isCurrentMonth) {\r\n                onSelect({ year: dayInfo.year, month: dayInfo.month, day: dayInfo.day })\r\n            }\r\n        },\r\n        [onSelect],\r\n    )\r\n\r\n    return (\r\n        <tbody>\r\n            {range(0, weeksInMonth).map((weekNum) => (\r\n                <tr key={weekNum}>\r\n                    {range(1, 7).map((weekDayNum) => {\r\n                        const dayInfo = getDayInfo(weekNum, weekDayNum);\r\n\r\n                        let dayDisabled = false;\r\n                        if(minDate.year && minDate.month && minDate.day) {\r\n                            dayDisabled = date.bsYear <= minDate.year && date.bsMonth <= minDate.month && dayInfo.day < minDate.day;\r\n                        }\r\n                        if(maxDate.year && maxDate.month && maxDate.day) {\r\n                            dayDisabled = date.bsYear >= maxDate.year && date.bsMonth >= maxDate.month && dayInfo.day > maxDate.day;\r\n                        }\r\n                        if(minDate.day && maxDate.day){\r\n                            dayDisabled = (\r\n                                (date.bsYear <= minDate.year && date.bsMonth <= minDate.month && dayInfo.day < minDate.day)\r\n                                ||\r\n                                (date.bsYear >= maxDate.year && date.bsMonth >= maxDate.month && dayInfo.day > maxDate.day)\r\n                                )\r\n                        }\r\n                        return (\r\n                            <td\r\n                                key={weekDayNum}\r\n                                className={`month-day ${dayDisabled ? \"disabled\" : \"\"} ${dayInfo.isCurrentMonth ? \"current\" : \"disabled\"} ${dayInfo.isToday ? \"today\" : \"\"} ${dayInfo.isSelected ? \"selected\" : \"\"}`}\r\n                                onClick={() => !dayDisabled && onDateSelectHandler(dayInfo)}\r\n                            >\r\n                                {convertEngToNepNumber(dayInfo.day)}\r\n                            </td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default DayPickerBody\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DropDown\\index.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\Today.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\Slider\\index.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DropDown\\Types.ts",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\IconBase.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DropDown\\DropDown.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\Previous.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\Next.tsx",[],"C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashbookTable.tsx",["2632","2633"],"import { CameraIcon } from \"assets/images/xd\";\r\nimport { ADToBS } from \"components/React/Datepicker/Datepickerutils\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport Slider from \"components/UI/Slider\";\r\nimport { getMonthByLanguageAndScheme } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { getIncomeAction } from \"store/modules/income/getIcome\";\r\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\r\nimport { getIncomeExpenseImageAction } from \"store/modules/income/getIncomeExpenseImgae\";\r\nimport { getPreviousIncomeTotalAction } from \"store/modules/income/getPreviousIncomeTotal\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  activeDate: string;\r\n  activeTab: string;\r\n}\r\n\r\nconst CashbookTable = (props: Props) => {\r\n  const { t } = useTranslation([\"cashbook\"]);\r\n\r\n  const {\r\n    incomeData,\r\n    incomeCategories,\r\n    language,\r\n    schemeSlug,\r\n    schemeDetails,\r\n    previousIncomeTotal,\r\n    incomeExpenseImage,\r\n    getIncomeAction,\r\n    getIncomeCategoryAction,\r\n    getPreviousIncomeTotalAction,\r\n    getIncomeExpenseImageAction,\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  console.log(props.activeDate, \"props.activeDateprops.activeDate\");\r\n\r\n  useEffect(() => {\r\n    if (language && schemeSlug && schemeDetails && props.activeTab && props.activeDate) {\r\n      if (props.activeTab === \"1\") {\r\n        getIncomeAction(\r\n          language,\r\n          schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n        getIncomeCategoryAction(schemeSlug);\r\n        getPreviousIncomeTotalAction(\r\n          language,\r\n          schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n        getIncomeExpenseImageAction(language, schemeSlug, props.activeDate || ADToBS(new Date()));\r\n      }\r\n    }\r\n  }, [language, props.activeDate, schemeSlug, schemeDetails, props.activeTab]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        <Table className=\"table-02 table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"cashbook:date\")}</th>\r\n              <th>{t(\"cashbook:description\")}</th>\r\n              {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => (\r\n                <th key={index}>{incomeCategory.name}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td></td>\r\n              <td>{t(\"cashbook:from-prev-month\")}</td>\r\n              {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                const findData = previousIncomeTotal?.previous_month_data?.find(\r\n                  (prev) => prev.income_category_name === incomeCategory.name\r\n                );\r\n                if (findData) {\r\n                  return (\r\n                    <td key={index}>\r\n                      {props.schemeDetails?.currency} {findData.total_income_amount}\r\n                    </td>\r\n                  );\r\n                } else {\r\n                  return <td key={index}>-</td>;\r\n                }\r\n              })}\r\n            </tr>\r\n\r\n            {incomeData?.map((income, index) => (\r\n              <tr key={index}>\r\n                <td>{language === \"en\" ? income.date : income.date_np}</td>\r\n                <td>{income.title}</td>\r\n                {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  if (income.category.name === incomeCategory.name) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {income.income_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n              </tr>\r\n            ))}\r\n\r\n            <tr>\r\n              <td></td>\r\n              <td>{t(\"cashbook:total\")}</td>\r\n              {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                const findData = previousIncomeTotal?.present_month_data?.find(\r\n                  (prev) => prev.income_category_name === incomeCategory.name\r\n                );\r\n                if (findData) {\r\n                  return (\r\n                    <td key={index}>\r\n                      {props.schemeDetails?.currency} {findData.total_income_amount}\r\n                    </td>\r\n                  );\r\n                } else {\r\n                  return <td key={index}>-</td>;\r\n                }\r\n              })}\r\n            </tr>\r\n            {props.sliderImages &&\r\n              props.sliderImages instanceof Array &&\r\n              props.sliderImages?.length > 0 && (\r\n                <>\r\n                  <tr role=\"button\" onClick={() => setModal(true)}>\r\n                    <td>\r\n                      <img src={CameraIcon} alt=\"\" /> &nbsp;&nbsp; Paper Cashbook Image -{\" \"}\r\n                      {getMonthByLanguageAndScheme(\r\n                        props.activeDate?.split(\"-\")[1],\r\n                        props.schemeDetails?.system_date_format\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </>\r\n              )}\r\n          </tbody>\r\n        </Table>\r\n\r\n        <GeneralModal open={modal} toggle={toggle}>\r\n          <Slider />\r\n        </GeneralModal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  sliderImages: state.incomeData.getIncomeExpenseImgae.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  incomeData: state.incomeData.getIncomeData.data,\r\n  incomeCategories: state.incomeData.getIncomeCategory.data,\r\n  previousIncomeTotal: state.incomeData.getPreviousIncomeTotal.data,\r\n  incomeExpenseImage: state.incomeData.getIncomeExpenseImgae.data,\r\n});\r\n\r\nconst mapDispatchToProps = {  \r\n  getIncomeAction: getIncomeAction,\r\n  getIncomeCategoryAction: getIncomeCategoryAction,\r\n  getPreviousIncomeTotalAction: getPreviousIncomeTotalAction,\r\n  getIncomeExpenseImageAction: getIncomeExpenseImageAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CashbookTable);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashbookExpenditureTable.tsx",["2634"],"import { CameraIcon } from \"assets/images/xd\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport Slider from \"components/UI/Slider\";\r\nimport { getMonthByLanguageAndScheme } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { getExpenditureAction } from \"store/modules/expenditure/getExpenditure\";\r\nimport { getExpenditureCategoryAction } from \"store/modules/expenditure/getExpenditureCategory\";\r\nimport { getPreviousExpenditureTotalAction } from \"store/modules/expenditure/getPreviousExpenditureTotal\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  activeDate: string;\r\n  activeTab: string;\r\n}\r\n\r\nconst CashbookExpenditureTable = (props: Props) => {\r\n  const {\r\n    expenditureData,\r\n    expenditureCategories,\r\n    language,\r\n    schemeSlug,\r\n    schemeDetails,\r\n    previousExpenditureTotal,\r\n    getExpenditureAction,\r\n    getExpenditureCategoryAction,\r\n    getPreviousExpenditureTotalAction,\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  useEffect(() => {\r\n    if (language && schemeSlug && schemeDetails && props.activeTab) {\r\n      if (props.activeTab === \"2\") {\r\n        getExpenditureAction(\r\n          language,\r\n          schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n        getExpenditureCategoryAction(schemeSlug);\r\n        getPreviousExpenditureTotalAction(\r\n          language,\r\n          schemeSlug,\r\n          props.activeDate?.split(\"-\")[0] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[0],\r\n          props.activeDate?.split(\"-\")[1] ||\r\n            getDefaultDate(schemeDetails?.system_date_format)?.split(\"-\")[1]\r\n        );\r\n      }\r\n    }\r\n  }, [language, props.activeDate, schemeSlug, schemeDetails, props.activeTab]);\r\n\r\n  const { t } = useTranslation([\"cashbook\"]);\r\n\r\n  console.log(schemeDetails, \"schemeDetails\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        <Table className=\"table-02 table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"cashbook:date\")}</th>\r\n              <th>{t(\"cashbook:description\")}</th>\r\n              {sortAplabetically(expenditureCategories, \"name\")?.map((incomeCategory, index) => (\r\n                <th key={index}>{incomeCategory.name}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td></td>\r\n              <td>{t(\"cashbook:from-prev-month\")}</td>\r\n              {sortAplabetically(expenditureCategories, \"name\")?.map((incomeCategory, index) => {\r\n                const findData = previousExpenditureTotal?.previous_month_data?.find(\r\n                  (prev) => prev.expense_category_name === incomeCategory.name\r\n                );\r\n                if (findData) {\r\n                  return (\r\n                    <td key={index}>\r\n                      {props.schemeDetails?.currency} {findData.total_expense_amount}\r\n                    </td>\r\n                  );\r\n                } else {\r\n                  return <td key={index}>-</td>;\r\n                }\r\n              })}\r\n            </tr>\r\n\r\n            {expenditureData?.map((income, index) => (\r\n              <tr onClick={toggle} key={index}>\r\n                <td>{language === \"en\" ? income.date : income.date_np}</td>\r\n                <td>{income.title}</td>\r\n                {sortAplabetically(expenditureCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  if (income.category.name === incomeCategory.name) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {income.income_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n              </tr>\r\n            ))}\r\n\r\n            <tr>\r\n              <td></td>\r\n              <td>{t(\"cashbook:total\")}</td>\r\n              {sortAplabetically(expenditureCategories, \"name\")?.map((incomeCategory, index) => {\r\n                const findData = previousExpenditureTotal?.present_month_data?.find(\r\n                  (prev) => prev.expense_category_name === incomeCategory.name\r\n                );\r\n                if (findData) {\r\n                  return (\r\n                    <td key={index}>\r\n                      {props.schemeDetails?.currency} {findData.total_expense_amount}\r\n                    </td>\r\n                  );\r\n                } else {\r\n                  return <td key={index}>-</td>;\r\n                }\r\n              })}\r\n            </tr>\r\n\r\n            {props.sliderImages &&\r\n              props.sliderImages instanceof Array &&\r\n              props.sliderImages?.length > 0 && (\r\n                <>\r\n                  <tr role=\"button\" onClick={() => setModal(true)}>\r\n                    <td>\r\n                      <img src={CameraIcon} alt=\"\" /> &nbsp;&nbsp; Paper Cashbook Image -{\" \"}\r\n                      {getMonthByLanguageAndScheme(\r\n                        props.activeDate?.split(\"-\")[1],\r\n                        props.schemeDetails?.system_date_format\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </>\r\n              )}\r\n          </tbody>\r\n        </Table>\r\n\r\n        <GeneralModal open={modal} toggle={toggle}>\r\n          <Slider />\r\n        </GeneralModal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  sliderImages: state.incomeData.getIncomeExpenseImgae.data,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  expenditureData: state.expenditureData.getExpenditureData.data,\r\n  expenditureCategories: state.expenditureData.getExpenditureCategory.data,\r\n  previousExpenditureTotal: state.expenditureData.getPreviousExpenditureTotal.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getExpenditureAction: getExpenditureAction,\r\n  getExpenditureCategoryAction: getExpenditureCategoryAction,\r\n  getPreviousExpenditureTotalAction: getPreviousExpenditureTotalAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CashbookExpenditureTable);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashBookByDate\\CashbookTable.tsx",["2635","2636"],"import { CameraIcon } from \"assets/images/xd\";\r\nimport { ADToBS } from \"components/React/Datepicker/Datepickerutils\";\r\nimport GeneralModal from \"components/UI/GeneralModal\";\r\nimport Slider from \"components/UI/Slider\";\r\nimport { getMonthByLanguageAndScheme } from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { geAllIncomeAction } from \"store/modules/income/getAllIncome\";\r\nimport { getIncomeCategoryAction } from \"store/modules/income/getIncomeCategory\";\r\nimport { getIncomeExpenseImageAction } from \"store/modules/income/getIncomeExpenseImgae\";\r\nimport { RootState } from \"store/root-reducer\";\r\nimport { getDefaultDate } from \"utils/utilsFunction/date-converter\";\r\nimport { sortAplabetically } from \"utils/utilsFunction/sorting\";\r\n\r\ninterface Props extends PropsFromRedux {\r\n  activeDate: string;\r\n  endDate: string;\r\n  activeTab: string;\r\n}\r\n\r\nconst CashbookTable = (props: Props) => {\r\n  const { t } = useTranslation([\"cashbook\"]);\r\n\r\n  const {\r\n    incomeData,\r\n    incomeCategories,\r\n    language,\r\n    schemeSlug,\r\n    schemeDetails,\r\n    previousIncomeTotal,\r\n    geAllIncomeAction,\r\n    getIncomeCategoryAction,\r\n    getIncomeExpenseImageAction,\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      language &&\r\n      schemeSlug &&\r\n      schemeDetails &&\r\n      props.activeTab &&\r\n      props.activeDate &&\r\n      props.endDate\r\n    ) {\r\n      if (props.activeTab === \"1\") {\r\n        geAllIncomeAction(language, schemeSlug, props.activeDate, props.endDate);\r\n        getIncomeCategoryAction(schemeSlug);\r\n        getIncomeExpenseImageAction(language, schemeSlug, props.activeDate || ADToBS(new Date()));\r\n      }\r\n    }\r\n  }, [language, props.activeDate, props.endDate, schemeSlug, schemeDetails, props.activeTab]);\r\n\r\n  console.log(props.activeDate, props.activeDate, \"<<<<<<<<<\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        <Table className=\"table-02 table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"cashbook:date\")}</th>\r\n              <th>{t(\"cashbook:description\")}</th>\r\n              {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => (\r\n                <th key={index}>{incomeCategory.name}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {incomeData?.map((income, index) => (\r\n              <tr key={index}>\r\n                <td>{language === \"en\" ? income.date : income.date_np}</td>\r\n                <td>{income.title}</td>\r\n                {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                  if (income.category.name === incomeCategory.name) {\r\n                    return (\r\n                      <td key={index}>\r\n                        {props.schemeDetails?.currency} {income.income_amount}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return <td key={index}>-</td>;\r\n                  }\r\n                })}\r\n              </tr>\r\n            ))}\r\n\r\n            <tr>\r\n              <td></td>\r\n              <td>{t(\"cashbook:total\")}</td>\r\n              {sortAplabetically(incomeCategories, \"name\")?.map((incomeCategory, index) => {\r\n                const findData = previousIncomeTotal?.present_month_data?.find(\r\n                  (prev) => prev.income_category_name === incomeCategory.name\r\n                );\r\n                if (findData) {\r\n                  return (\r\n                    <td key={index}>\r\n                      {props.schemeDetails?.currency} {findData.total_income_amount}\r\n                    </td>\r\n                  );\r\n                } else {\r\n                  return <td key={index}>-</td>;\r\n                }\r\n              })}\r\n            </tr>\r\n            {props.sliderImages &&\r\n              props.sliderImages instanceof Array &&\r\n              props.sliderImages?.length > 0 && (\r\n                <>\r\n                  <tr role=\"button\" onClick={() => setModal(true)}>\r\n                    <td>\r\n                      <img src={CameraIcon} alt=\"\" /> &nbsp;&nbsp; Paper Cashbook Image -{\" \"}\r\n                      {getMonthByLanguageAndScheme(\r\n                        props.activeDate?.split(\"-\")[1],\r\n                        props.schemeDetails?.system_date_format\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </>\r\n              )}\r\n          </tbody>\r\n        </Table>\r\n\r\n        <GeneralModal open={modal} toggle={toggle}>\r\n          <Slider />\r\n        </GeneralModal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  language: state.i18nextData.languageType,\r\n  sliderImages: state.incomeData.getIncomeExpenseImgae.data,\r\n  schemeSlug: state.waterSchemeData.waterSchemeDetailsData.data?.slug,\r\n  schemeDetails: state.waterSchemeData.waterSchemeDetailsData.data,\r\n  incomeData: state.incomeData.getAllIncomeData.data,\r\n  incomeCategories: state.incomeData.getIncomeCategory.data,\r\n  previousIncomeTotal: state.incomeData.getPreviousIncomeTotal.data,\r\n  incomeExpenseImage: state.incomeData.getIncomeExpenseImgae.data,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  geAllIncomeAction: geAllIncomeAction,\r\n  getIncomeCategoryAction: getIncomeCategoryAction,\r\n  getIncomeExpenseImageAction: getIncomeExpenseImageAction,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CashbookTable);\r\n","C:\\Users\\S.K. COMPUTER\\OneDrive\\Desktop\\react-project\\src\\components\\UI\\InfoCard\\index.tsx",["2637"],"import { UserIcon } from \"assets/images/xd\";\r\nimport { getEnglishNumberFromNepali } from \"i18n/i18n\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"store/root-reducer\";\r\n\r\ninterface Props {\r\n  first?: any;\r\n  second?: any;\r\n  title: any;\r\n  subTitle: string | number;\r\n  value: string | number;\r\n  children?: any;\r\n}\r\n\r\nexport const InfoCard = ({ children, title, subTitle, value, first, second }: Props) => {\r\n  const language = useSelector((state: RootState) => state.i18nextData.languageType);\r\n\r\n  const currency = useSelector(\r\n    (state: RootState) => state.waterSchemeData.waterSchemeDetailsData.data?.currency\r\n  );\r\n\r\n  console.log(getEnglishNumberFromNepali(value), \"englishnumber\");\r\n\r\n  return (\r\n    <div className=\"infoCard\">\r\n      <div className=\"infoCard-header\">\r\n        <h6 className=\"infoCard-header-title\">{title}</h6>\r\n      </div>\r\n\r\n      <div className=\"infoCard-mid-content\">\r\n        {subTitle && <p className=\"infoCard-sub-title\">{subTitle}</p>}\r\n\r\n        {first ? (\r\n          <h1\r\n            className={`infoCard-price ${\r\n              getEnglishNumberFromNepali(value) > 0\r\n                ? \"text-green\"\r\n                : getEnglishNumberFromNepali(value) < 0\r\n                ? \"text-danger\"\r\n                : \"\"\r\n            } `}\r\n            style={{ fontFamily: language === \"en\" ? \" Roboto\" : \"\" }}\r\n          >\r\n            {currency} {value}\r\n          </h1>\r\n        ) : second ? (\r\n          <></>\r\n        ) : (\r\n          <h1 className=\"infoCard-price\" style={{ fontFamily: language === \"en\" ? \" Roboto\" : \"\" }}>\r\n            {value}\r\n          </h1>\r\n        )}\r\n      </div>\r\n\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","E:\\Smart Tech Solution\\React JS\\react-project\\src\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\App.tsx",["2638"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\i18n\\i18n.ts",["2639"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\root-reducer.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\routes\\routes.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\i18n\\i18n.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\services\\jwt-token\\jwt-token.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\routes\\PrivateRoute\\PrivateRoute.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\services\\authentication\\AuthenticationService.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\ToastNotifier\\ToastNotifier.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\login\\login.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\userDetails\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\constants\\constants.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\helper\\default-action-type.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Datepickerutils.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\ErrorBoundary\\ErrorBoundary.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\FallbackLoader\\FallbackLoader.tsx",["2640"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\oauthservice\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\testParamters\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\supplyBelts\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\otherExpenses\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentCategories\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\inflationParameters\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\component\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentInfo\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\notifications\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentLogs\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\maintainance\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterSupplySchedule\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\helper\\default-state.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\helper\\default-reducer.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\helper\\default-action.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\schemeName\\index.tsx",["2641","2642"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\actionNames\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\constants\\types.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Dateconverter.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Login\\Login.tsx",["2643","2644","2645"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Dashboard\\Dashboard.tsx",["2646","2647"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Notifications\\UpdateNotifications.tsx",["2648","2649"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\getWaterTarrifs.ts",["2650"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\deleteWaterTariff.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\postUseBasedWaterTariff.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\postFixedRateWaterTariff.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\getUseBasedWaterTarrifs.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\getIcome.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\getIncomeEstimateThisYear.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\getPreviousIncomeTotal.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\oauthservice\\initapi.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\updateUseBasedWaterTariff.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\getIncomeCategory.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\updateIncomeCategories.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\updateIncome.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\getAllIncome.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\maintainanceCostByYear.ts",["2651"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\getAllExpenditure.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\testParamters\\deleteTestParameters.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\deleteUseBasedWaterTariff.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\supplyBelts\\postSupplyBelt.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\updateWaterSchemeData.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\getIncomeExpenseImgae.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\postIncomeCategories.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentCategories\\deleteComponentCategories.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\inflationParameters\\postInflationParameters.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\component\\deleteComponent.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\otherExpenses\\deleteOtherExpenses.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentInfo\\deleteComponentInfo.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterSupplySchedule\\updateSupplySchedule.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentLogs\\getComponentLogsById.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\notifications\\postNotifications.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\maintainance\\dashboardComponentInfo.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterSupplySchedule\\postSupplySchedule.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterSupplySchedule\\deleteSupplySchedule.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterSupplySchedule\\getWaterSupplySchedule.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentLogs\\deleteComponentLogs.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentLogs\\postComponentLogs.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentLogs\\updateComponentLogs.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentLogs\\getComponentLogs.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\notifications\\getNotifications.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\notifications\\updateNotifications.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentInfo\\postComponentInfo.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentInfo\\updateComponentInfo.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\services\\api-request\\api-request.ts",["2652","2653"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentInfo\\getComponentInfoById.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentInfo\\getComponentInfo.ts",["2654"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\component\\postComponent.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\index.tsx",["2655","2656"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\404\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\index.tsx",["2657"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\CashBook\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\index.tsx",["2658","2659","2660","2661"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\index.tsx",["2662","2663"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\InflationParamters\\index.tsx",["2664","2665"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\index.tsx",["2666"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\Visualization\\index.tsx",["2667","2668"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\index.tsx",["2669","2670","2671"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\index.tsx",["2672"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\component\\updateComponent.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Notifications\\scheme.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\inflationParameters\\deleteInflationParameters.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\component\\getComponent.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\inflationParameters\\getInflationParameters.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentCategories\\updateComponentCategories.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentCategories\\postComponentCategories.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\otherExpenses\\getOtherExpenses.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\otherExpenses\\updateOtherExpenses.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\getWaterSchemeData.ts",["2673"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\updateWaterSchemeUser.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\postWaterSchemeData.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\componentCategories\\getComponentCategories.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\deleteWaterSchemeData.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\getYearIntervals.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\inflationParameters\\updateInflationParameters.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\otherExpenses\\postOtherExpenses.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\deleteWaterSchemeUser.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\updateWaterSchemeDetails.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\supplyBelts\\updateSupplyBelt.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\waterSchemeDetails.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\supplyBelts\\deleteSupplyBelt.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\testParamters\\postTestParameters.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\supplyBelts\\getWaterSupplyBelts.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\testParamters\\getTestParameters.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\postWaterSchemeUser.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterScheme\\getWaterSchemeUser.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\testParamters\\updateTestParameters.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Dashboard\\Sidebar\\Sidebar.tsx",["2674","2675"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\postExpense.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\updateExpense.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\deleteExpense.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\deleteExpenseCategory.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\updateExpenseCategories.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\postExpenseCategories.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\getExpenditureCategory.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\getPreviousExpenditureTotal.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\expenditure\\getExpenditure.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\waterTestResults.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\waterSupply.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\expenseByCategory.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\incomeByCategory.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Dashboard\\Header\\Header.tsx",["2676","2677","2678","2679","2680"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\expenseCumilitiveCashFlow.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\actualCumilitiveCashFlow.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\maintainanceCost.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\report\\incomeExpense.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\postIncome.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\deleteIncome.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\datas.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\Tariff.tsx",["2681"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationGraph.tsx",["2682","2683"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationGraphThisYear.tsx",["2684","2685","2686"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationBarGraphThisWeek.tsx",["2687","2688"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\VisualizationBarGraph.tsx",["2689","2690"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashBookByDate\\CashbookExpenditureTable.tsx",["2691","2692","2693"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\Visualization\\LineChart\\LineChartThisYear.tsx",["2694","2695"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\CashBookByDate\\CashbookExpenditureTable.tsx",["2696","2697","2698","2699"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Datepicker.tsx",["2700","2701","2702","2703","2704"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\utils\\utilsFunction\\date-converter.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\CashBookByDate\\CashbookTable.tsx",["2705","2706","2707"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\FormikValidationError\\FormikValidationError.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\EnglishDatepicker\\EnglishDatepicker.tsx",["2708"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\IncomeExpendGraph.tsx",["2709"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\VisualizationGraphThisYear.tsx",["2710","2711","2712"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\VisualizationGraph.tsx",["2713","2714"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\CashbookTable.tsx",["2715","2716"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\CashbookExpenditureTable.tsx",["2717","2718"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashBookByDate\\CashbookTable.tsx",["2719","2720"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashbookTable.tsx",["2721","2722"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\CashBook\\CashbookExpenditureTable.tsx",["2723"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\index.tsx",["2724"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\InflationParamters\\ManageOtherParameters\\index.tsx",["2725","2726","2727","2728","2729"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\index.tsx",["2730"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\index.tsx",["2731"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\ManageOtherExpenses\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\ManageComponentLogs\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\Visualization\\LineChart\\index.tsx",["2732","2733"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageComponent\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageCategories\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\getFixedRateIncomeEstimates.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\SupplyVisualization\\DataTable.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\Visualization\\DonoughtChart\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\Visualization\\LineChart\\DataTable.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\GeneralCard\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\Forms\\Buttons\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Service\\WaterTestResults\\configData.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\FixedRates\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\UseBased\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\IncomeEstimates\\ThisYear\\index.tsx",["2734","2735"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\StyledSelect\\StyledSelect.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ExpenseForm.tsx",["2736","2737","2738"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\assets\\images\\xd\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\InfoCard\\index.tsx",["2739"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\utils\\utilsFunction\\sorting.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\ManageOtherExpenses\\List.tsx",["2740"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\ManageComponentLogs\\List.tsx",["2741","2742","2743"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ComponentLogs\\ManageComponentLogs\\Form.tsx",["2744","2745","2746"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\List.tsx",["2747"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\Form.tsx",["2748","2749"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageCategories\\List.tsx",["2750"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageComponent\\List.tsx",["2751"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageCategories\\Form.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\CustomRadio\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\ManageCategories\\ManageComponent\\Form.tsx",["2752"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\OtherExpense\\ManageOtherExpenses\\Form.tsx",["2753","2754"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Finance\\Visualization\\DonoughtChart\\DataTable.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\Components\\RiskData.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\Components\\NormalData.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\AssetComponent\\AssetTable\\Components\\CostData.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\Components\\NormalData.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\Components\\CostData.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\Components\\RiskData.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\FixedRates\\List.tsx",["2755"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\FixedRates\\Form.tsx",["2756"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\UseBased\\List.tsx",["2757"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\ManageIncomeCategories\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ManageExpenditureCategories\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\UseBased\\Form.tsx",["2758","2759","2760"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\IncomeExpendTable.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\TarrifRates\\IncomeEstimates\\ThisYear\\Table.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Maintainance\\AssetComponent\\AssetTable\\ComponentInfoForm.tsx",["2761","2762","2763","2764"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\CustomCheckbox\\index.tsx",["2765"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\Slider\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\GeneralModal\\index.tsx",["2766","2767","2768","2769","2770","2771","2772"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\Calender.tsx",["2773","2774","2775","2776"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\Charts\\General\\index.tsx",["2777"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\hooks\\useDeleteConfirmation.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\ManageIncomeCategories\\List.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\ManageIncomeCategories\\Form.tsx",["2778","2779"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ManageExpenditureCategories\\List.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Service\\QualityTestParameters\\ManageQTParameters\\schema.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Expenditure\\ManageExpenditureCategories\\Form.tsx",["2780","2781"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\List.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\Form.tsx",["2782","2783","2784","2785"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\CalenderController.tsx",["2786","2787","2788"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\TooltipLabel\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\UI\\ConfirmationModal\\index.tsx",["2789","2790"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\waterTarrifs\\updateFixedBasedWaterTariff.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\SupplySchedule\\ManageSupply\\schema.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\assets\\theme\\wonderland.js",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Finance\\CashBook\\Income\\IncomeForm.tsx",["2791","2792","2793"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\store\\modules\\income\\deleteIncomeCategory.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\YearPicker.tsx",["2794"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\MonthPicker.tsx",["2795"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\BarChart\\ChartThisYear.tsx",["2796","2797"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\DayPicker.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\index.tsx",["2798"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\BarChart\\index.tsx",["2799","2800"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\DonoughtChart\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\InflationParameters\\index.tsx",["2801","2802","2803","2804"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\MobileUser\\index.tsx",["2805"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\index.tsx",["2806","2807"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\GeneralInfo\\index.tsx",["2808","2809","2810","2811"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\Maintainance\\index.tsx",["2812"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\BarChart\\DataTable.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\DayPickerHeader.tsx",["2813"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DropDown\\index.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\Today.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\Previous.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\Next.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\GeneralInfo\\scheme.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\IncomeExpendGraphThisYear.tsx",["2814"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\IncomeExpend\\IncomeExpendGraph.tsx",["2815"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\Maintainance\\MaintainanceCostChartThisYear.tsx",["2816"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DropDown\\Types.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Home\\Maintainance\\MaintainanceCostChart.tsx",["2817"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DropDown\\DropDown.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\Icons\\IconBase.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Public\\Maintainance\\CostVisualization\\DonoughtChart\\DataTable.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\StyledSelect\\CreatableSelect.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\index.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\List.tsx",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\Form.tsx",["2818","2819","2820","2821"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\components\\React\\Datepicker\\Calender\\components\\DayPicker\\DayPickerBody.tsx",["2822"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\Beneficiaries\\ManageBeneficiaries\\schema.ts",[],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\List.tsx",["2823"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\Form.tsx",["2824","2825","2826","2827"],"E:\\Smart Tech Solution\\React JS\\react-project\\src\\core\\Protected\\Home\\MobileUser\\ManageMobileUser\\schema.ts",["2828"],{"ruleId":"2829","replacedBy":"2830"},{"ruleId":"2831","replacedBy":"2832"},{"ruleId":"2833","severity":1,"message":"2834","line":63,"column":6,"nodeType":"2835","endLine":63,"endColumn":8,"suggestions":"2836"},{"ruleId":"2837","severity":1,"message":"2838","line":29,"column":10,"nodeType":"2839","messageId":"2840","endLine":29,"endColumn":16},{"ruleId":"2837","severity":1,"message":"2841","line":1,"column":8,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":14},{"ruleId":"2837","severity":1,"message":"2842","line":1,"column":10,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":18},{"ruleId":"2843","severity":1,"message":"2844","line":9,"column":1,"nodeType":"2845","endLine":18,"endColumn":3},{"ruleId":"2837","severity":1,"message":"2846","line":22,"column":33,"nodeType":"2839","messageId":"2840","endLine":22,"endColumn":51},{"ruleId":"2837","severity":1,"message":"2847","line":25,"column":9,"nodeType":"2839","messageId":"2840","endLine":25,"endColumn":20},{"ruleId":"2833","severity":1,"message":"2848","line":39,"column":5,"nodeType":"2835","endLine":39,"endColumn":25,"suggestions":"2849"},{"ruleId":"2833","severity":1,"message":"2850","line":29,"column":6,"nodeType":"2835","endLine":29,"endColumn":27,"suggestions":"2851"},{"ruleId":"2837","severity":1,"message":"2852","line":45,"column":5,"nodeType":"2839","messageId":"2840","endLine":45,"endColumn":20},{"ruleId":"2837","severity":1,"message":"2853","line":2,"column":35,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":46},{"ruleId":"2833","severity":1,"message":"2854","line":57,"column":6,"nodeType":"2835","endLine":57,"endColumn":44,"suggestions":"2855"},{"ruleId":"2837","severity":1,"message":"2856","line":35,"column":11,"nodeType":"2839","messageId":"2840","endLine":35,"endColumn":21},{"ruleId":"2837","severity":1,"message":"2856","line":18,"column":11,"nodeType":"2839","messageId":"2840","endLine":18,"endColumn":21},{"ruleId":"2837","severity":1,"message":"2857","line":18,"column":7,"nodeType":"2839","messageId":"2840","endLine":18,"endColumn":39},{"ruleId":"2837","severity":1,"message":"2858","line":23,"column":7,"nodeType":"2839","messageId":"2840","endLine":23,"endColumn":19},{"ruleId":"2837","severity":1,"message":"2859","line":52,"column":11,"nodeType":"2839","messageId":"2840","endLine":52,"endColumn":25},{"ruleId":"2837","severity":1,"message":"2860","line":3,"column":8,"nodeType":"2839","messageId":"2840","endLine":3,"endColumn":20},{"ruleId":"2833","severity":1,"message":"2861","line":29,"column":6,"nodeType":"2835","endLine":29,"endColumn":31,"suggestions":"2862"},{"ruleId":"2833","severity":1,"message":"2861","line":35,"column":6,"nodeType":"2835","endLine":35,"endColumn":24,"suggestions":"2863"},{"ruleId":"2833","severity":1,"message":"2850","line":49,"column":6,"nodeType":"2835","endLine":49,"endColumn":51,"suggestions":"2864"},{"ruleId":"2833","severity":1,"message":"2850","line":40,"column":6,"nodeType":"2835","endLine":40,"endColumn":35,"suggestions":"2865"},{"ruleId":"2837","severity":1,"message":"2838","line":5,"column":10,"nodeType":"2839","messageId":"2840","endLine":5,"endColumn":16},{"ruleId":"2837","severity":1,"message":"2866","line":5,"column":18,"nodeType":"2839","messageId":"2840","endLine":5,"endColumn":24},{"ruleId":"2833","severity":1,"message":"2850","line":40,"column":6,"nodeType":"2835","endLine":40,"endColumn":40,"suggestions":"2867"},{"ruleId":"2833","severity":1,"message":"2850","line":78,"column":6,"nodeType":"2835","endLine":78,"endColumn":98,"suggestions":"2868"},{"ruleId":"2833","severity":1,"message":"2850","line":36,"column":6,"nodeType":"2835","endLine":36,"endColumn":24,"suggestions":"2869"},{"ruleId":"2833","severity":1,"message":"2850","line":46,"column":6,"nodeType":"2835","endLine":46,"endColumn":51,"suggestions":"2870"},{"ruleId":"2837","severity":1,"message":"2871","line":10,"column":10,"nodeType":"2839","messageId":"2840","endLine":10,"endColumn":18},{"ruleId":"2837","severity":1,"message":"2872","line":10,"column":20,"nodeType":"2839","messageId":"2840","endLine":10,"endColumn":31},{"ruleId":"2837","severity":1,"message":"2873","line":5,"column":8,"nodeType":"2839","messageId":"2840","endLine":5,"endColumn":29},{"ruleId":"2837","severity":1,"message":"2871","line":11,"column":10,"nodeType":"2839","messageId":"2840","endLine":11,"endColumn":18},{"ruleId":"2837","severity":1,"message":"2872","line":11,"column":20,"nodeType":"2839","messageId":"2840","endLine":11,"endColumn":31},{"ruleId":"2833","severity":1,"message":"2850","line":28,"column":6,"nodeType":"2835","endLine":28,"endColumn":40,"suggestions":"2874"},{"ruleId":"2837","severity":1,"message":"2872","line":10,"column":20,"nodeType":"2839","messageId":"2840","endLine":10,"endColumn":31},{"ruleId":"2837","severity":1,"message":"2875","line":23,"column":9,"nodeType":"2839","messageId":"2840","endLine":23,"endColumn":16},{"ruleId":"2876","severity":1,"message":"2877","line":246,"column":13,"nodeType":"2878","endLine":246,"endColumn":37},{"ruleId":"2879","severity":1,"message":"2880","line":40,"column":11,"nodeType":"2878","endLine":40,"endColumn":77},{"ruleId":"2881","severity":1,"message":"2882","line":40,"column":11,"nodeType":"2878","endLine":40,"endColumn":77},{"ruleId":"2881","severity":1,"message":"2882","line":71,"column":13,"nodeType":"2878","endLine":79,"endColumn":14},{"ruleId":"2883","severity":1,"message":"2884","line":82,"column":23,"nodeType":"2878","endLine":82,"endColumn":63},{"ruleId":"2883","severity":1,"message":"2884","line":83,"column":24,"nodeType":"2878","endLine":83,"endColumn":64},{"ruleId":"2837","severity":1,"message":"2856","line":8,"column":11,"nodeType":"2839","messageId":"2840","endLine":8,"endColumn":21},{"ruleId":"2833","severity":1,"message":"2850","line":19,"column":6,"nodeType":"2835","endLine":19,"endColumn":43,"suggestions":"2885"},{"ruleId":"2837","severity":1,"message":"2886","line":3,"column":10,"nodeType":"2839","messageId":"2840","endLine":3,"endColumn":28},{"ruleId":"2833","severity":1,"message":"2887","line":64,"column":6,"nodeType":"2835","endLine":64,"endColumn":24,"suggestions":"2888"},{"ruleId":"2833","severity":1,"message":"2889","line":148,"column":6,"nodeType":"2835","endLine":148,"endColumn":27,"suggestions":"2890"},{"ruleId":"2833","severity":1,"message":"2891","line":57,"column":6,"nodeType":"2835","endLine":57,"endColumn":24,"suggestions":"2892"},{"ruleId":"2833","severity":1,"message":"2889","line":143,"column":6,"nodeType":"2835","endLine":143,"endColumn":27,"suggestions":"2893"},{"ruleId":"2837","severity":1,"message":"2894","line":13,"column":10,"nodeType":"2839","messageId":"2840","endLine":13,"endColumn":24},{"ruleId":"2837","severity":1,"message":"2895","line":32,"column":5,"nodeType":"2839","messageId":"2840","endLine":32,"endColumn":38},{"ruleId":"2833","severity":1,"message":"2896","line":45,"column":6,"nodeType":"2835","endLine":45,"endColumn":93,"suggestions":"2897"},{"ruleId":"2837","severity":1,"message":"2898","line":8,"column":10,"nodeType":"2839","messageId":"2840","endLine":8,"endColumn":25},{"ruleId":"2833","severity":1,"message":"2899","line":169,"column":6,"nodeType":"2835","endLine":169,"endColumn":27,"suggestions":"2900"},{"ruleId":"2837","severity":1,"message":"2901","line":8,"column":10,"nodeType":"2839","messageId":"2840","endLine":8,"endColumn":15},{"ruleId":"2837","severity":1,"message":"2894","line":13,"column":10,"nodeType":"2839","messageId":"2840","endLine":13,"endColumn":24},{"ruleId":"2837","severity":1,"message":"2895","line":32,"column":5,"nodeType":"2839","messageId":"2840","endLine":32,"endColumn":38},{"ruleId":"2833","severity":1,"message":"2896","line":45,"column":6,"nodeType":"2835","endLine":45,"endColumn":93,"suggestions":"2902"},{"ruleId":"2837","severity":1,"message":"2901","line":9,"column":10,"nodeType":"2839","messageId":"2840","endLine":9,"endColumn":15},{"ruleId":"2837","severity":1,"message":"2894","line":14,"column":10,"nodeType":"2839","messageId":"2840","endLine":14,"endColumn":24},{"ruleId":"2833","severity":1,"message":"2903","line":56,"column":6,"nodeType":"2835","endLine":56,"endColumn":93,"suggestions":"2904"},{"ruleId":"2837","severity":1,"message":"2901","line":10,"column":10,"nodeType":"2839","messageId":"2840","endLine":10,"endColumn":15},{"ruleId":"2833","severity":1,"message":"2905","line":70,"column":6,"nodeType":"2835","endLine":70,"endColumn":78,"suggestions":"2906"},{"ruleId":"2837","severity":1,"message":"2901","line":10,"column":10,"nodeType":"2839","messageId":"2840","endLine":10,"endColumn":15},{"ruleId":"2833","severity":1,"message":"2907","line":75,"column":6,"nodeType":"2835","endLine":75,"endColumn":78,"suggestions":"2908"},{"ruleId":"2833","severity":1,"message":"2909","line":42,"column":8,"nodeType":"2835","endLine":42,"endColumn":15,"suggestions":"2910"},{"ruleId":"2833","severity":1,"message":"2911","line":51,"column":8,"nodeType":"2835","endLine":51,"endColumn":17,"suggestions":"2912"},{"ruleId":"2833","severity":1,"message":"2913","line":69,"column":8,"nodeType":"2835","endLine":69,"endColumn":22,"suggestions":"2914"},{"ruleId":"2833","severity":1,"message":"2915","line":96,"column":8,"nodeType":"2835","endLine":96,"endColumn":10,"suggestions":"2916"},{"ruleId":"2833","severity":1,"message":"2917","line":105,"column":8,"nodeType":"2835","endLine":105,"endColumn":10,"suggestions":"2918"},{"ruleId":"2833","severity":1,"message":"2861","line":26,"column":6,"nodeType":"2835","endLine":26,"endColumn":24,"suggestions":"2919"},{"ruleId":"2833","severity":1,"message":"2920","line":65,"column":6,"nodeType":"2835","endLine":65,"endColumn":29,"suggestions":"2921"},{"ruleId":"2833","severity":1,"message":"2922","line":94,"column":6,"nodeType":"2835","endLine":94,"endColumn":27,"suggestions":"2923"},{"ruleId":"2837","severity":1,"message":"2924","line":40,"column":11,"nodeType":"2839","messageId":"2840","endLine":40,"endColumn":12},{"ruleId":"2837","severity":1,"message":"2925","line":49,"column":9,"nodeType":"2839","messageId":"2840","endLine":49,"endColumn":23},{"ruleId":"2833","severity":1,"message":"2922","line":125,"column":6,"nodeType":"2835","endLine":125,"endColumn":27,"suggestions":"2926"},{"ruleId":"2833","severity":1,"message":"2927","line":55,"column":6,"nodeType":"2835","endLine":55,"endColumn":29,"suggestions":"2928"},{"ruleId":"2833","severity":1,"message":"2922","line":81,"column":6,"nodeType":"2835","endLine":81,"endColumn":27,"suggestions":"2929"},{"ruleId":"2833","severity":1,"message":"2927","line":49,"column":6,"nodeType":"2835","endLine":49,"endColumn":29,"suggestions":"2930"},{"ruleId":"2833","severity":1,"message":"2922","line":72,"column":6,"nodeType":"2835","endLine":72,"endColumn":27,"suggestions":"2931"},{"ruleId":"2837","severity":1,"message":"2932","line":34,"column":5,"nodeType":"2839","messageId":"2840","endLine":34,"endColumn":14},{"ruleId":"2833","severity":1,"message":"2933","line":194,"column":6,"nodeType":"2835","endLine":194,"endColumn":66,"suggestions":"2934"},{"ruleId":"2833","severity":1,"message":"2899","line":226,"column":6,"nodeType":"2835","endLine":226,"endColumn":27,"suggestions":"2935"},{"ruleId":"2833","severity":1,"message":"2850","line":24,"column":6,"nodeType":"2835","endLine":24,"endColumn":22,"suggestions":"2936"},{"ruleId":"2883","severity":1,"message":"2884","line":39,"column":19,"nodeType":"2878","endLine":39,"endColumn":41},{"ruleId":"2837","severity":1,"message":"2937","line":4,"column":8,"nodeType":"2839","messageId":"2840","endLine":4,"endColumn":14},{"ruleId":"2833","severity":1,"message":"2850","line":34,"column":6,"nodeType":"2835","endLine":34,"endColumn":22,"suggestions":"2938"},{"ruleId":"2837","severity":1,"message":"2939","line":42,"column":5,"nodeType":"2839","messageId":"2840","endLine":42,"endColumn":17},{"ruleId":"2837","severity":1,"message":"2940","line":43,"column":5,"nodeType":"2839","messageId":"2840","endLine":43,"endColumn":15},{"ruleId":"2837","severity":1,"message":"2941","line":67,"column":15,"nodeType":"2839","messageId":"2840","endLine":67,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":67,"column":65,"nodeType":"2944","messageId":"2945","endLine":67,"endColumn":67},{"ruleId":"2833","severity":1,"message":"2946","line":80,"column":6,"nodeType":"2835","endLine":80,"endColumn":19,"suggestions":"2947"},{"ruleId":"2837","severity":1,"message":"2948","line":103,"column":9,"nodeType":"2839","messageId":"2840","endLine":103,"endColumn":27},{"ruleId":"2833","severity":1,"message":"2850","line":22,"column":6,"nodeType":"2835","endLine":22,"endColumn":8,"suggestions":"2949"},{"ruleId":"2833","severity":1,"message":"2850","line":27,"column":6,"nodeType":"2835","endLine":27,"endColumn":40,"suggestions":"2950"},{"ruleId":"2833","severity":1,"message":"2850","line":30,"column":6,"nodeType":"2835","endLine":30,"endColumn":51,"suggestions":"2951"},{"ruleId":"2833","severity":1,"message":"2850","line":33,"column":6,"nodeType":"2835","endLine":33,"endColumn":51,"suggestions":"2952"},{"ruleId":"2833","severity":1,"message":"2850","line":29,"column":6,"nodeType":"2835","endLine":29,"endColumn":40,"suggestions":"2953"},{"ruleId":"2837","severity":1,"message":"2954","line":2,"column":8,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":20},{"ruleId":"2837","severity":1,"message":"2860","line":14,"column":8,"nodeType":"2839","messageId":"2840","endLine":14,"endColumn":20},{"ruleId":"2833","severity":1,"message":"2850","line":32,"column":6,"nodeType":"2835","endLine":32,"endColumn":22,"suggestions":"2955"},{"ruleId":"2837","severity":1,"message":"2852","line":38,"column":5,"nodeType":"2839","messageId":"2840","endLine":38,"endColumn":20},{"ruleId":"2837","severity":1,"message":"2956","line":39,"column":5,"nodeType":"2839","messageId":"2840","endLine":39,"endColumn":18},{"ruleId":"2833","severity":1,"message":"2850","line":51,"column":6,"nodeType":"2835","endLine":51,"endColumn":40,"suggestions":"2957"},{"ruleId":"2833","severity":1,"message":"2958","line":78,"column":6,"nodeType":"2835","endLine":78,"endColumn":24,"suggestions":"2959"},{"ruleId":"2837","severity":1,"message":"2941","line":142,"column":15,"nodeType":"2839","messageId":"2840","endLine":142,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":142,"column":65,"nodeType":"2944","messageId":"2945","endLine":142,"endColumn":67},{"ruleId":"2833","severity":1,"message":"2920","line":95,"column":6,"nodeType":"2835","endLine":95,"endColumn":64,"suggestions":"2960"},{"ruleId":"2833","severity":1,"message":"2899","line":122,"column":6,"nodeType":"2835","endLine":122,"endColumn":27,"suggestions":"2961"},{"ruleId":"2833","severity":1,"message":"2920","line":166,"column":6,"nodeType":"2835","endLine":166,"endColumn":46,"suggestions":"2962"},{"ruleId":"2833","severity":1,"message":"2899","line":196,"column":6,"nodeType":"2835","endLine":196,"endColumn":27,"suggestions":"2963"},{"ruleId":"2837","severity":1,"message":"2964","line":1,"column":38,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":51},{"ruleId":"2833","severity":1,"message":"2850","line":21,"column":6,"nodeType":"2835","endLine":21,"endColumn":24,"suggestions":"2965"},{"ruleId":"2833","severity":1,"message":"2933","line":142,"column":6,"nodeType":"2835","endLine":142,"endColumn":50,"suggestions":"2966"},{"ruleId":"2833","severity":1,"message":"2933","line":54,"column":6,"nodeType":"2835","endLine":54,"endColumn":45,"suggestions":"2967"},{"ruleId":"2833","severity":1,"message":"2850","line":25,"column":6,"nodeType":"2835","endLine":25,"endColumn":22,"suggestions":"2968"},{"ruleId":"2833","severity":1,"message":"2946","line":27,"column":6,"nodeType":"2835","endLine":27,"endColumn":8,"suggestions":"2969"},{"ruleId":"2837","severity":1,"message":"2941","line":76,"column":15,"nodeType":"2839","messageId":"2840","endLine":76,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":76,"column":65,"nodeType":"2944","messageId":"2945","endLine":76,"endColumn":67},{"ruleId":"2837","severity":1,"message":"2970","line":23,"column":45,"nodeType":"2839","messageId":"2840","endLine":23,"endColumn":60},{"ruleId":"2833","severity":1,"message":"2850","line":32,"column":6,"nodeType":"2835","endLine":32,"endColumn":22,"suggestions":"2971"},{"ruleId":"2837","severity":1,"message":"2972","line":60,"column":9,"nodeType":"2839","messageId":"2840","endLine":60,"endColumn":24},{"ruleId":"2837","severity":1,"message":"2941","line":130,"column":15,"nodeType":"2839","messageId":"2840","endLine":130,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":130,"column":70,"nodeType":"2944","messageId":"2945","endLine":130,"endColumn":72},{"ruleId":"2833","severity":1,"message":"2850","line":141,"column":6,"nodeType":"2835","endLine":141,"endColumn":20,"suggestions":"2973"},{"ruleId":"2837","severity":1,"message":"2974","line":11,"column":3,"nodeType":"2839","messageId":"2840","endLine":11,"endColumn":22},{"ruleId":"2833","severity":1,"message":"2850","line":88,"column":6,"nodeType":"2835","endLine":88,"endColumn":24,"suggestions":"2975"},{"ruleId":"2837","severity":1,"message":"2941","line":178,"column":15,"nodeType":"2839","messageId":"2840","endLine":178,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":178,"column":65,"nodeType":"2944","messageId":"2945","endLine":178,"endColumn":67},{"ruleId":"2837","severity":1,"message":"2976","line":2,"column":10,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":14},{"ruleId":"2837","severity":1,"message":"2852","line":52,"column":5,"nodeType":"2839","messageId":"2840","endLine":52,"endColumn":20},{"ruleId":"2833","severity":1,"message":"2920","line":35,"column":6,"nodeType":"2835","endLine":35,"endColumn":25,"suggestions":"2977"},{"ruleId":"2833","severity":1,"message":"2850","line":24,"column":6,"nodeType":"2835","endLine":24,"endColumn":8,"suggestions":"2978"},{"ruleId":"2833","severity":1,"message":"2850","line":25,"column":6,"nodeType":"2835","endLine":25,"endColumn":8,"suggestions":"2979"},{"ruleId":"2837","severity":1,"message":"2976","line":2,"column":10,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":14},{"ruleId":"2833","severity":1,"message":"2920","line":120,"column":6,"nodeType":"2835","endLine":120,"endColumn":30,"suggestions":"2980"},{"ruleId":"2837","severity":1,"message":"2981","line":1,"column":22,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":30},{"ruleId":"2837","severity":1,"message":"2981","line":1,"column":22,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":30},{"ruleId":"2837","severity":1,"message":"2982","line":16,"column":10,"nodeType":"2839","messageId":"2840","endLine":16,"endColumn":31},{"ruleId":"2837","severity":1,"message":"2983","line":49,"column":21,"nodeType":"2839","messageId":"2840","endLine":49,"endColumn":50},{"ruleId":"2883","severity":1,"message":"2884","line":301,"column":31,"nodeType":"2878","endLine":306,"endColumn":33},{"ruleId":"2837","severity":1,"message":"2940","line":68,"column":50,"nodeType":"2839","messageId":"2840","endLine":68,"endColumn":60},{"ruleId":"2837","severity":1,"message":"2941","line":66,"column":15,"nodeType":"2839","messageId":"2840","endLine":66,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":66,"column":65,"nodeType":"2944","messageId":"2945","endLine":66,"endColumn":67},{"ruleId":"2837","severity":1,"message":"2941","line":65,"column":15,"nodeType":"2839","messageId":"2840","endLine":65,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":65,"column":65,"nodeType":"2944","messageId":"2945","endLine":65,"endColumn":67},{"ruleId":"2833","severity":1,"message":"2984","line":114,"column":8,"nodeType":"2835","endLine":114,"endColumn":10,"suggestions":"2985"},{"ruleId":"2833","severity":1,"message":"2984","line":137,"column":9,"nodeType":"2835","endLine":137,"endColumn":23,"suggestions":"2986"},{"ruleId":"2833","severity":1,"message":"2984","line":161,"column":9,"nodeType":"2835","endLine":161,"endColumn":23,"suggestions":"2987"},{"ruleId":"2833","severity":1,"message":"2984","line":181,"column":8,"nodeType":"2835","endLine":181,"endColumn":10,"suggestions":"2988"},{"ruleId":"2837","severity":1,"message":"2989","line":9,"column":11,"nodeType":"2839","messageId":"2840","endLine":9,"endColumn":16},{"ruleId":"2837","severity":1,"message":"2990","line":1,"column":36,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":44},{"ruleId":"2837","severity":1,"message":"2990","line":1,"column":17,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":25},{"ruleId":"2837","severity":1,"message":"2937","line":2,"column":10,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":16},{"ruleId":"2837","severity":1,"message":"2991","line":2,"column":25,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":36},{"ruleId":"2837","severity":1,"message":"2992","line":2,"column":38,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":47},{"ruleId":"2837","severity":1,"message":"2993","line":2,"column":49,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":60},{"ruleId":"2837","severity":1,"message":"2994","line":3,"column":10,"nodeType":"2839","messageId":"2840","endLine":3,"endColumn":21},{"ruleId":"2837","severity":1,"message":"2995","line":5,"column":8,"nodeType":"2839","messageId":"2840","endLine":5,"endColumn":13},{"ruleId":"2837","severity":1,"message":"2992","line":2,"column":10,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":19},{"ruleId":"2837","severity":1,"message":"2991","line":2,"column":34,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":45},{"ruleId":"2837","severity":1,"message":"2940","line":46,"column":5,"nodeType":"2839","messageId":"2840","endLine":46,"endColumn":15},{"ruleId":"2837","severity":1,"message":"2852","line":48,"column":5,"nodeType":"2839","messageId":"2840","endLine":48,"endColumn":20},{"ruleId":"2837","severity":1,"message":"2941","line":84,"column":15,"nodeType":"2839","messageId":"2840","endLine":84,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":84,"column":65,"nodeType":"2944","messageId":"2945","endLine":84,"endColumn":67},{"ruleId":"2833","severity":1,"message":"2850","line":31,"column":6,"nodeType":"2835","endLine":31,"endColumn":40,"suggestions":"2996"},{"ruleId":"2833","severity":1,"message":"2997","line":48,"column":6,"nodeType":"2835","endLine":48,"endColumn":20,"suggestions":"2998"},{"ruleId":"2837","severity":1,"message":"2941","line":83,"column":15,"nodeType":"2839","messageId":"2840","endLine":83,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":83,"column":65,"nodeType":"2944","messageId":"2945","endLine":83,"endColumn":67},{"ruleId":"2833","severity":1,"message":"2850","line":27,"column":6,"nodeType":"2835","endLine":27,"endColumn":8,"suggestions":"2999"},{"ruleId":"2837","severity":1,"message":"2956","line":40,"column":5,"nodeType":"2839","messageId":"2840","endLine":40,"endColumn":18},{"ruleId":"2837","severity":1,"message":"2852","line":41,"column":5,"nodeType":"2839","messageId":"2840","endLine":41,"endColumn":20},{"ruleId":"2837","severity":1,"message":"2941","line":70,"column":15,"nodeType":"2839","messageId":"2840","endLine":70,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":70,"column":65,"nodeType":"2944","messageId":"2945","endLine":70,"endColumn":67},{"ruleId":"2837","severity":1,"message":"3000","line":2,"column":34,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":43},{"ruleId":"2837","severity":1,"message":"3001","line":19,"column":57,"nodeType":"2839","messageId":"2840","endLine":19,"endColumn":64},{"ruleId":"2837","severity":1,"message":"3002","line":23,"column":12,"nodeType":"2839","messageId":"2840","endLine":23,"endColumn":24},{"ruleId":"2829","replacedBy":"2830"},{"ruleId":"2831","replacedBy":"2832"},{"ruleId":"2837","severity":1,"message":"3003","line":17,"column":21,"nodeType":"2839","messageId":"2840","endLine":17,"endColumn":29},{"ruleId":"2833","severity":1,"message":"3004","line":35,"column":9,"nodeType":"2835","endLine":35,"endColumn":11,"suggestions":"3005"},{"ruleId":"2837","severity":1,"message":"3006","line":3,"column":10,"nodeType":"2839","messageId":"2840","endLine":3,"endColumn":20},{"ruleId":"2833","severity":1,"message":"2958","line":75,"column":6,"nodeType":"2835","endLine":75,"endColumn":40,"suggestions":"3007"},{"ruleId":"2837","severity":1,"message":"2941","line":131,"column":15,"nodeType":"2839","messageId":"2840","endLine":131,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":131,"column":65,"nodeType":"2944","messageId":"2945","endLine":131,"endColumn":67},{"ruleId":"2837","severity":1,"message":"3008","line":1,"column":36,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":43},{"ruleId":"2833","severity":1,"message":"3009","line":38,"column":9,"nodeType":"2835","endLine":38,"endColumn":23,"suggestions":"3010"},{"ruleId":"2837","severity":1,"message":"3011","line":33,"column":5,"nodeType":"2839","messageId":"2840","endLine":33,"endColumn":23},{"ruleId":"2833","severity":1,"message":"3012","line":68,"column":6,"nodeType":"2835","endLine":68,"endColumn":78,"suggestions":"3013"},{"ruleId":"2833","severity":1,"message":"2907","line":59,"column":6,"nodeType":"2835","endLine":59,"endColumn":78,"suggestions":"3014"},{"ruleId":"2837","severity":1,"message":"2894","line":14,"column":10,"nodeType":"2839","messageId":"2840","endLine":14,"endColumn":24},{"ruleId":"2833","severity":1,"message":"2903","line":56,"column":6,"nodeType":"2835","endLine":56,"endColumn":93,"suggestions":"3015"},{"ruleId":"2837","severity":1,"message":"3016","line":1,"column":10,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":18},{"ruleId":"2833","severity":1,"message":"2834","line":63,"column":6,"nodeType":"2835","endLine":63,"endColumn":8,"suggestions":"3017"},{"ruleId":"2837","severity":1,"message":"2838","line":29,"column":10,"nodeType":"2839","messageId":"2840","endLine":29,"endColumn":16},{"ruleId":"2837","severity":1,"message":"2841","line":1,"column":8,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":14},{"ruleId":"2837","severity":1,"message":"2842","line":1,"column":10,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":18},{"ruleId":"2843","severity":1,"message":"2844","line":9,"column":1,"nodeType":"2845","endLine":18,"endColumn":3},{"ruleId":"2837","severity":1,"message":"2846","line":22,"column":33,"nodeType":"2839","messageId":"2840","endLine":22,"endColumn":51},{"ruleId":"2837","severity":1,"message":"2847","line":25,"column":9,"nodeType":"2839","messageId":"2840","endLine":25,"endColumn":20},{"ruleId":"2833","severity":1,"message":"2848","line":39,"column":5,"nodeType":"2835","endLine":39,"endColumn":25,"suggestions":"3018"},{"ruleId":"2837","severity":1,"message":"2853","line":2,"column":35,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":46},{"ruleId":"2833","severity":1,"message":"2854","line":57,"column":6,"nodeType":"2835","endLine":57,"endColumn":44,"suggestions":"3019"},{"ruleId":"2833","severity":1,"message":"2850","line":29,"column":6,"nodeType":"2835","endLine":29,"endColumn":27,"suggestions":"3020"},{"ruleId":"2837","severity":1,"message":"2852","line":45,"column":5,"nodeType":"2839","messageId":"2840","endLine":45,"endColumn":20},{"ruleId":"2837","severity":1,"message":"2856","line":18,"column":11,"nodeType":"2839","messageId":"2840","endLine":18,"endColumn":21},{"ruleId":"2837","severity":1,"message":"2856","line":35,"column":11,"nodeType":"2839","messageId":"2840","endLine":35,"endColumn":21},{"ruleId":"2837","severity":1,"message":"2857","line":18,"column":7,"nodeType":"2839","messageId":"2840","endLine":18,"endColumn":39},{"ruleId":"2837","severity":1,"message":"2858","line":23,"column":7,"nodeType":"2839","messageId":"2840","endLine":23,"endColumn":19},{"ruleId":"2837","severity":1,"message":"2859","line":52,"column":11,"nodeType":"2839","messageId":"2840","endLine":52,"endColumn":25},{"ruleId":"2837","severity":1,"message":"2860","line":3,"column":8,"nodeType":"2839","messageId":"2840","endLine":3,"endColumn":20},{"ruleId":"2833","severity":1,"message":"2861","line":29,"column":6,"nodeType":"2835","endLine":29,"endColumn":31,"suggestions":"3021"},{"ruleId":"2833","severity":1,"message":"2850","line":40,"column":6,"nodeType":"2835","endLine":40,"endColumn":35,"suggestions":"3022"},{"ruleId":"2837","severity":1,"message":"2838","line":5,"column":10,"nodeType":"2839","messageId":"2840","endLine":5,"endColumn":16},{"ruleId":"2837","severity":1,"message":"2866","line":5,"column":18,"nodeType":"2839","messageId":"2840","endLine":5,"endColumn":24},{"ruleId":"2833","severity":1,"message":"2850","line":40,"column":6,"nodeType":"2835","endLine":40,"endColumn":40,"suggestions":"3023"},{"ruleId":"2833","severity":1,"message":"2850","line":78,"column":6,"nodeType":"2835","endLine":78,"endColumn":98,"suggestions":"3024"},{"ruleId":"2833","severity":1,"message":"2850","line":36,"column":6,"nodeType":"2835","endLine":36,"endColumn":24,"suggestions":"3025"},{"ruleId":"2833","severity":1,"message":"2850","line":46,"column":6,"nodeType":"2835","endLine":46,"endColumn":51,"suggestions":"3026"},{"ruleId":"2837","severity":1,"message":"2871","line":10,"column":10,"nodeType":"2839","messageId":"2840","endLine":10,"endColumn":18},{"ruleId":"2837","severity":1,"message":"2872","line":10,"column":20,"nodeType":"2839","messageId":"2840","endLine":10,"endColumn":31},{"ruleId":"2833","severity":1,"message":"2850","line":28,"column":6,"nodeType":"2835","endLine":28,"endColumn":40,"suggestions":"3027"},{"ruleId":"2833","severity":1,"message":"2861","line":35,"column":6,"nodeType":"2835","endLine":35,"endColumn":24,"suggestions":"3028"},{"ruleId":"2833","severity":1,"message":"2850","line":49,"column":6,"nodeType":"2835","endLine":49,"endColumn":51,"suggestions":"3029"},{"ruleId":"2837","severity":1,"message":"2873","line":5,"column":8,"nodeType":"2839","messageId":"2840","endLine":5,"endColumn":29},{"ruleId":"2837","severity":1,"message":"2871","line":11,"column":10,"nodeType":"2839","messageId":"2840","endLine":11,"endColumn":18},{"ruleId":"2837","severity":1,"message":"2872","line":11,"column":20,"nodeType":"2839","messageId":"2840","endLine":11,"endColumn":31},{"ruleId":"2837","severity":1,"message":"2872","line":10,"column":20,"nodeType":"2839","messageId":"2840","endLine":10,"endColumn":31},{"ruleId":"2837","severity":1,"message":"2856","line":8,"column":11,"nodeType":"2839","messageId":"2840","endLine":8,"endColumn":21},{"ruleId":"2837","severity":1,"message":"2875","line":23,"column":9,"nodeType":"2839","messageId":"2840","endLine":23,"endColumn":16},{"ruleId":"2876","severity":1,"message":"2877","line":246,"column":13,"nodeType":"2878","endLine":246,"endColumn":37},{"ruleId":"2879","severity":1,"message":"2880","line":40,"column":11,"nodeType":"2878","endLine":40,"endColumn":77},{"ruleId":"2881","severity":1,"message":"2882","line":40,"column":11,"nodeType":"2878","endLine":40,"endColumn":77},{"ruleId":"2881","severity":1,"message":"2882","line":71,"column":13,"nodeType":"2878","endLine":79,"endColumn":14},{"ruleId":"2883","severity":1,"message":"2884","line":82,"column":23,"nodeType":"2878","endLine":82,"endColumn":63},{"ruleId":"2883","severity":1,"message":"2884","line":83,"column":24,"nodeType":"2878","endLine":83,"endColumn":64},{"ruleId":"2833","severity":1,"message":"2850","line":19,"column":6,"nodeType":"2835","endLine":19,"endColumn":43,"suggestions":"3030"},{"ruleId":"2833","severity":1,"message":"2920","line":65,"column":6,"nodeType":"2835","endLine":65,"endColumn":29,"suggestions":"3031"},{"ruleId":"2833","severity":1,"message":"2922","line":94,"column":6,"nodeType":"2835","endLine":94,"endColumn":27,"suggestions":"3032"},{"ruleId":"2837","severity":1,"message":"2924","line":40,"column":11,"nodeType":"2839","messageId":"2840","endLine":40,"endColumn":12},{"ruleId":"2837","severity":1,"message":"2925","line":49,"column":9,"nodeType":"2839","messageId":"2840","endLine":49,"endColumn":23},{"ruleId":"2833","severity":1,"message":"2922","line":125,"column":6,"nodeType":"2835","endLine":125,"endColumn":27,"suggestions":"3033"},{"ruleId":"2833","severity":1,"message":"2927","line":55,"column":6,"nodeType":"2835","endLine":55,"endColumn":29,"suggestions":"3034"},{"ruleId":"2833","severity":1,"message":"2922","line":81,"column":6,"nodeType":"2835","endLine":81,"endColumn":27,"suggestions":"3035"},{"ruleId":"2833","severity":1,"message":"2927","line":49,"column":6,"nodeType":"2835","endLine":49,"endColumn":29,"suggestions":"3036"},{"ruleId":"2833","severity":1,"message":"2922","line":72,"column":6,"nodeType":"2835","endLine":72,"endColumn":27,"suggestions":"3037"},{"ruleId":"2837","severity":1,"message":"2894","line":13,"column":10,"nodeType":"2839","messageId":"2840","endLine":13,"endColumn":24},{"ruleId":"2837","severity":1,"message":"2895","line":32,"column":5,"nodeType":"2839","messageId":"2840","endLine":32,"endColumn":38},{"ruleId":"2833","severity":1,"message":"2896","line":45,"column":6,"nodeType":"2835","endLine":45,"endColumn":93,"suggestions":"3038"},{"ruleId":"2837","severity":1,"message":"2898","line":8,"column":10,"nodeType":"2839","messageId":"2840","endLine":8,"endColumn":25},{"ruleId":"2833","severity":1,"message":"2899","line":169,"column":6,"nodeType":"2835","endLine":169,"endColumn":27,"suggestions":"3039"},{"ruleId":"2837","severity":1,"message":"2901","line":8,"column":10,"nodeType":"2839","messageId":"2840","endLine":8,"endColumn":15},{"ruleId":"2837","severity":1,"message":"2894","line":13,"column":10,"nodeType":"2839","messageId":"2840","endLine":13,"endColumn":24},{"ruleId":"2837","severity":1,"message":"2895","line":32,"column":5,"nodeType":"2839","messageId":"2840","endLine":32,"endColumn":38},{"ruleId":"2833","severity":1,"message":"2896","line":45,"column":6,"nodeType":"2835","endLine":45,"endColumn":93,"suggestions":"3040"},{"ruleId":"2833","severity":1,"message":"2909","line":42,"column":8,"nodeType":"2835","endLine":42,"endColumn":15,"suggestions":"3041"},{"ruleId":"2833","severity":1,"message":"2911","line":51,"column":8,"nodeType":"2835","endLine":51,"endColumn":17,"suggestions":"3042"},{"ruleId":"2833","severity":1,"message":"2913","line":69,"column":8,"nodeType":"2835","endLine":69,"endColumn":22,"suggestions":"3043"},{"ruleId":"2833","severity":1,"message":"2915","line":96,"column":8,"nodeType":"2835","endLine":96,"endColumn":10,"suggestions":"3044"},{"ruleId":"2833","severity":1,"message":"2917","line":105,"column":8,"nodeType":"2835","endLine":105,"endColumn":10,"suggestions":"3045"},{"ruleId":"2837","severity":1,"message":"2901","line":9,"column":10,"nodeType":"2839","messageId":"2840","endLine":9,"endColumn":15},{"ruleId":"2837","severity":1,"message":"2894","line":14,"column":10,"nodeType":"2839","messageId":"2840","endLine":14,"endColumn":24},{"ruleId":"2833","severity":1,"message":"2903","line":56,"column":6,"nodeType":"2835","endLine":56,"endColumn":93,"suggestions":"3046"},{"ruleId":"2837","severity":1,"message":"2932","line":34,"column":5,"nodeType":"2839","messageId":"2840","endLine":34,"endColumn":14},{"ruleId":"2833","severity":1,"message":"2861","line":26,"column":6,"nodeType":"2835","endLine":26,"endColumn":24,"suggestions":"3047"},{"ruleId":"2837","severity":1,"message":"2886","line":3,"column":10,"nodeType":"2839","messageId":"2840","endLine":3,"endColumn":28},{"ruleId":"2833","severity":1,"message":"2887","line":64,"column":6,"nodeType":"2835","endLine":64,"endColumn":24,"suggestions":"3048"},{"ruleId":"2833","severity":1,"message":"2889","line":148,"column":6,"nodeType":"2835","endLine":148,"endColumn":27,"suggestions":"3049"},{"ruleId":"2833","severity":1,"message":"2891","line":57,"column":6,"nodeType":"2835","endLine":57,"endColumn":24,"suggestions":"3050"},{"ruleId":"2833","severity":1,"message":"2889","line":143,"column":6,"nodeType":"2835","endLine":143,"endColumn":27,"suggestions":"3051"},{"ruleId":"2837","severity":1,"message":"2901","line":10,"column":10,"nodeType":"2839","messageId":"2840","endLine":10,"endColumn":15},{"ruleId":"2833","severity":1,"message":"2905","line":70,"column":6,"nodeType":"2835","endLine":70,"endColumn":78,"suggestions":"3052"},{"ruleId":"2837","severity":1,"message":"2901","line":10,"column":10,"nodeType":"2839","messageId":"2840","endLine":10,"endColumn":15},{"ruleId":"2833","severity":1,"message":"2907","line":75,"column":6,"nodeType":"2835","endLine":75,"endColumn":78,"suggestions":"3053"},{"ruleId":"2837","severity":1,"message":"2894","line":14,"column":10,"nodeType":"2839","messageId":"2840","endLine":14,"endColumn":24},{"ruleId":"2833","severity":1,"message":"2903","line":56,"column":6,"nodeType":"2835","endLine":56,"endColumn":93,"suggestions":"3054"},{"ruleId":"2837","severity":1,"message":"3011","line":33,"column":5,"nodeType":"2839","messageId":"2840","endLine":33,"endColumn":23},{"ruleId":"2833","severity":1,"message":"3012","line":68,"column":6,"nodeType":"2835","endLine":68,"endColumn":78,"suggestions":"3055"},{"ruleId":"2833","severity":1,"message":"2907","line":59,"column":6,"nodeType":"2835","endLine":59,"endColumn":78,"suggestions":"3056"},{"ruleId":"2833","severity":1,"message":"2850","line":27,"column":6,"nodeType":"2835","endLine":27,"endColumn":40,"suggestions":"3057"},{"ruleId":"2837","severity":1,"message":"2954","line":2,"column":8,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":20},{"ruleId":"2837","severity":1,"message":"2860","line":14,"column":8,"nodeType":"2839","messageId":"2840","endLine":14,"endColumn":20},{"ruleId":"2833","severity":1,"message":"2850","line":32,"column":6,"nodeType":"2835","endLine":32,"endColumn":22,"suggestions":"3058"},{"ruleId":"2837","severity":1,"message":"2852","line":38,"column":5,"nodeType":"2839","messageId":"2840","endLine":38,"endColumn":20},{"ruleId":"2837","severity":1,"message":"2956","line":39,"column":5,"nodeType":"2839","messageId":"2840","endLine":39,"endColumn":18},{"ruleId":"2833","severity":1,"message":"2850","line":51,"column":6,"nodeType":"2835","endLine":51,"endColumn":40,"suggestions":"3059"},{"ruleId":"2833","severity":1,"message":"2850","line":29,"column":6,"nodeType":"2835","endLine":29,"endColumn":40,"suggestions":"3060"},{"ruleId":"2833","severity":1,"message":"2920","line":95,"column":6,"nodeType":"2835","endLine":95,"endColumn":64,"suggestions":"3061"},{"ruleId":"2833","severity":1,"message":"2899","line":122,"column":6,"nodeType":"2835","endLine":122,"endColumn":27,"suggestions":"3062"},{"ruleId":"2837","severity":1,"message":"2964","line":1,"column":38,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":51},{"ruleId":"2833","severity":1,"message":"2850","line":21,"column":6,"nodeType":"2835","endLine":21,"endColumn":24,"suggestions":"3063"},{"ruleId":"2833","severity":1,"message":"2958","line":78,"column":6,"nodeType":"2835","endLine":78,"endColumn":24,"suggestions":"3064"},{"ruleId":"2837","severity":1,"message":"2941","line":142,"column":15,"nodeType":"2839","messageId":"2840","endLine":142,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":142,"column":65,"nodeType":"2944","messageId":"2945","endLine":142,"endColumn":67},{"ruleId":"2837","severity":1,"message":"3016","line":1,"column":10,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":18},{"ruleId":"2833","severity":1,"message":"2850","line":25,"column":6,"nodeType":"2835","endLine":25,"endColumn":22,"suggestions":"3065"},{"ruleId":"2837","severity":1,"message":"2970","line":23,"column":45,"nodeType":"2839","messageId":"2840","endLine":23,"endColumn":60},{"ruleId":"2833","severity":1,"message":"2850","line":32,"column":6,"nodeType":"2835","endLine":32,"endColumn":22,"suggestions":"3066"},{"ruleId":"2837","severity":1,"message":"2972","line":60,"column":9,"nodeType":"2839","messageId":"2840","endLine":60,"endColumn":24},{"ruleId":"2837","severity":1,"message":"2941","line":130,"column":15,"nodeType":"2839","messageId":"2840","endLine":130,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":130,"column":70,"nodeType":"2944","messageId":"2945","endLine":130,"endColumn":72},{"ruleId":"2833","severity":1,"message":"2850","line":141,"column":6,"nodeType":"2835","endLine":141,"endColumn":20,"suggestions":"3067"},{"ruleId":"2833","severity":1,"message":"2946","line":27,"column":6,"nodeType":"2835","endLine":27,"endColumn":8,"suggestions":"3068"},{"ruleId":"2837","severity":1,"message":"2941","line":76,"column":15,"nodeType":"2839","messageId":"2840","endLine":76,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":76,"column":65,"nodeType":"2944","messageId":"2945","endLine":76,"endColumn":67},{"ruleId":"2833","severity":1,"message":"2850","line":25,"column":6,"nodeType":"2835","endLine":25,"endColumn":8,"suggestions":"3069"},{"ruleId":"2833","severity":1,"message":"2850","line":24,"column":6,"nodeType":"2835","endLine":24,"endColumn":8,"suggestions":"3070"},{"ruleId":"2837","severity":1,"message":"2976","line":2,"column":10,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":14},{"ruleId":"2837","severity":1,"message":"2976","line":2,"column":10,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":14},{"ruleId":"2837","severity":1,"message":"2852","line":52,"column":5,"nodeType":"2839","messageId":"2840","endLine":52,"endColumn":20},{"ruleId":"2837","severity":1,"message":"2981","line":1,"column":22,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":30},{"ruleId":"2837","severity":1,"message":"2940","line":68,"column":50,"nodeType":"2839","messageId":"2840","endLine":68,"endColumn":60},{"ruleId":"2837","severity":1,"message":"2981","line":1,"column":22,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":30},{"ruleId":"2837","severity":1,"message":"2982","line":16,"column":10,"nodeType":"2839","messageId":"2840","endLine":16,"endColumn":31},{"ruleId":"2837","severity":1,"message":"2983","line":49,"column":21,"nodeType":"2839","messageId":"2840","endLine":49,"endColumn":50},{"ruleId":"2883","severity":1,"message":"2884","line":301,"column":31,"nodeType":"2878","endLine":306,"endColumn":33},{"ruleId":"2837","severity":1,"message":"2974","line":11,"column":3,"nodeType":"2839","messageId":"2840","endLine":11,"endColumn":22},{"ruleId":"2833","severity":1,"message":"2850","line":88,"column":6,"nodeType":"2835","endLine":88,"endColumn":24,"suggestions":"3071"},{"ruleId":"2837","severity":1,"message":"2941","line":178,"column":15,"nodeType":"2839","messageId":"2840","endLine":178,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":178,"column":65,"nodeType":"2944","messageId":"2945","endLine":178,"endColumn":67},{"ruleId":"2837","severity":1,"message":"2989","line":9,"column":11,"nodeType":"2839","messageId":"2840","endLine":9,"endColumn":16},{"ruleId":"2837","severity":1,"message":"2990","line":1,"column":17,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":25},{"ruleId":"2837","severity":1,"message":"2937","line":2,"column":10,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":16},{"ruleId":"2837","severity":1,"message":"2991","line":2,"column":25,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":36},{"ruleId":"2837","severity":1,"message":"2992","line":2,"column":38,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":47},{"ruleId":"2837","severity":1,"message":"2993","line":2,"column":49,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":60},{"ruleId":"2837","severity":1,"message":"2994","line":3,"column":10,"nodeType":"2839","messageId":"2840","endLine":3,"endColumn":21},{"ruleId":"2837","severity":1,"message":"2995","line":5,"column":8,"nodeType":"2839","messageId":"2840","endLine":5,"endColumn":13},{"ruleId":"2833","severity":1,"message":"2984","line":114,"column":8,"nodeType":"2835","endLine":114,"endColumn":10,"suggestions":"3072"},{"ruleId":"2833","severity":1,"message":"2984","line":137,"column":9,"nodeType":"2835","endLine":137,"endColumn":23,"suggestions":"3073"},{"ruleId":"2833","severity":1,"message":"2984","line":161,"column":9,"nodeType":"2835","endLine":161,"endColumn":23,"suggestions":"3074"},{"ruleId":"2833","severity":1,"message":"2984","line":181,"column":8,"nodeType":"2835","endLine":181,"endColumn":10,"suggestions":"3075"},{"ruleId":"2837","severity":1,"message":"2990","line":1,"column":36,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":44},{"ruleId":"2837","severity":1,"message":"2941","line":65,"column":15,"nodeType":"2839","messageId":"2840","endLine":65,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":65,"column":65,"nodeType":"2944","messageId":"2945","endLine":65,"endColumn":67},{"ruleId":"2837","severity":1,"message":"2941","line":66,"column":15,"nodeType":"2839","messageId":"2840","endLine":66,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":66,"column":65,"nodeType":"2944","messageId":"2945","endLine":66,"endColumn":67},{"ruleId":"2837","severity":1,"message":"2940","line":46,"column":5,"nodeType":"2839","messageId":"2840","endLine":46,"endColumn":15},{"ruleId":"2837","severity":1,"message":"2852","line":48,"column":5,"nodeType":"2839","messageId":"2840","endLine":48,"endColumn":20},{"ruleId":"2837","severity":1,"message":"2941","line":84,"column":15,"nodeType":"2839","messageId":"2840","endLine":84,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":84,"column":65,"nodeType":"2944","messageId":"2945","endLine":84,"endColumn":67},{"ruleId":"2837","severity":1,"message":"3000","line":2,"column":34,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":43},{"ruleId":"2837","severity":1,"message":"3001","line":19,"column":57,"nodeType":"2839","messageId":"2840","endLine":19,"endColumn":64},{"ruleId":"2837","severity":1,"message":"3002","line":23,"column":12,"nodeType":"2839","messageId":"2840","endLine":23,"endColumn":24},{"ruleId":"2837","severity":1,"message":"2992","line":2,"column":10,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":19},{"ruleId":"2837","severity":1,"message":"2991","line":2,"column":34,"nodeType":"2839","messageId":"2840","endLine":2,"endColumn":45},{"ruleId":"2833","severity":1,"message":"2958","line":75,"column":6,"nodeType":"2835","endLine":75,"endColumn":40,"suggestions":"3076"},{"ruleId":"2837","severity":1,"message":"2941","line":131,"column":15,"nodeType":"2839","messageId":"2840","endLine":131,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":131,"column":65,"nodeType":"2944","messageId":"2945","endLine":131,"endColumn":67},{"ruleId":"2833","severity":1,"message":"3004","line":35,"column":9,"nodeType":"2835","endLine":35,"endColumn":11,"suggestions":"3077"},{"ruleId":"2837","severity":1,"message":"3006","line":3,"column":10,"nodeType":"2839","messageId":"2840","endLine":3,"endColumn":20},{"ruleId":"2833","severity":1,"message":"2933","line":194,"column":6,"nodeType":"2835","endLine":194,"endColumn":66,"suggestions":"3078"},{"ruleId":"2833","severity":1,"message":"2899","line":226,"column":6,"nodeType":"2835","endLine":226,"endColumn":27,"suggestions":"3079"},{"ruleId":"2833","severity":1,"message":"2850","line":33,"column":6,"nodeType":"2835","endLine":33,"endColumn":51,"suggestions":"3080"},{"ruleId":"2833","severity":1,"message":"2920","line":166,"column":6,"nodeType":"2835","endLine":166,"endColumn":46,"suggestions":"3081"},{"ruleId":"2833","severity":1,"message":"2899","line":196,"column":6,"nodeType":"2835","endLine":196,"endColumn":27,"suggestions":"3082"},{"ruleId":"2837","severity":1,"message":"2937","line":4,"column":8,"nodeType":"2839","messageId":"2840","endLine":4,"endColumn":14},{"ruleId":"2833","severity":1,"message":"2850","line":34,"column":6,"nodeType":"2835","endLine":34,"endColumn":22,"suggestions":"3083"},{"ruleId":"2837","severity":1,"message":"2939","line":42,"column":5,"nodeType":"2839","messageId":"2840","endLine":42,"endColumn":17},{"ruleId":"2837","severity":1,"message":"2940","line":43,"column":5,"nodeType":"2839","messageId":"2840","endLine":43,"endColumn":15},{"ruleId":"2833","severity":1,"message":"2850","line":22,"column":6,"nodeType":"2835","endLine":22,"endColumn":8,"suggestions":"3084"},{"ruleId":"2833","severity":1,"message":"2850","line":24,"column":6,"nodeType":"2835","endLine":24,"endColumn":22,"suggestions":"3085"},{"ruleId":"2883","severity":1,"message":"2884","line":39,"column":19,"nodeType":"2878","endLine":39,"endColumn":41},{"ruleId":"2837","severity":1,"message":"2941","line":67,"column":15,"nodeType":"2839","messageId":"2840","endLine":67,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":67,"column":65,"nodeType":"2944","messageId":"2945","endLine":67,"endColumn":67},{"ruleId":"2833","severity":1,"message":"2946","line":80,"column":6,"nodeType":"2835","endLine":80,"endColumn":19,"suggestions":"3086"},{"ruleId":"2837","severity":1,"message":"2948","line":103,"column":9,"nodeType":"2839","messageId":"2840","endLine":103,"endColumn":27},{"ruleId":"2833","severity":1,"message":"2850","line":30,"column":6,"nodeType":"2835","endLine":30,"endColumn":51,"suggestions":"3087"},{"ruleId":"2837","severity":1,"message":"3008","line":1,"column":36,"nodeType":"2839","messageId":"2840","endLine":1,"endColumn":43},{"ruleId":"2833","severity":1,"message":"2933","line":54,"column":6,"nodeType":"2835","endLine":54,"endColumn":45,"suggestions":"3088"},{"ruleId":"2833","severity":1,"message":"2920","line":35,"column":6,"nodeType":"2835","endLine":35,"endColumn":25,"suggestions":"3089"},{"ruleId":"2833","severity":1,"message":"2933","line":142,"column":6,"nodeType":"2835","endLine":142,"endColumn":50,"suggestions":"3090"},{"ruleId":"2833","severity":1,"message":"2920","line":120,"column":6,"nodeType":"2835","endLine":120,"endColumn":30,"suggestions":"3091"},{"ruleId":"2833","severity":1,"message":"2850","line":31,"column":6,"nodeType":"2835","endLine":31,"endColumn":40,"suggestions":"3092"},{"ruleId":"2833","severity":1,"message":"2997","line":48,"column":6,"nodeType":"2835","endLine":48,"endColumn":20,"suggestions":"3093"},{"ruleId":"2837","severity":1,"message":"2941","line":83,"column":15,"nodeType":"2839","messageId":"2840","endLine":83,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":83,"column":65,"nodeType":"2944","messageId":"2945","endLine":83,"endColumn":67},{"ruleId":"2833","severity":1,"message":"3009","line":38,"column":9,"nodeType":"2835","endLine":38,"endColumn":23,"suggestions":"3094"},{"ruleId":"2833","severity":1,"message":"2850","line":27,"column":6,"nodeType":"2835","endLine":27,"endColumn":8,"suggestions":"3095"},{"ruleId":"2837","severity":1,"message":"2956","line":40,"column":5,"nodeType":"2839","messageId":"2840","endLine":40,"endColumn":18},{"ruleId":"2837","severity":1,"message":"2852","line":41,"column":5,"nodeType":"2839","messageId":"2840","endLine":41,"endColumn":20},{"ruleId":"2837","severity":1,"message":"2941","line":70,"column":15,"nodeType":"2839","messageId":"2840","endLine":70,"endColumn":21},{"ruleId":"2942","severity":1,"message":"2943","line":70,"column":65,"nodeType":"2944","messageId":"2945","endLine":70,"endColumn":67},{"ruleId":"2837","severity":1,"message":"3003","line":17,"column":21,"nodeType":"2839","messageId":"2840","endLine":17,"endColumn":29},"no-native-reassign",["3096"],"no-negated-in-lhs",["3097"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["3098"],"@typescript-eslint/no-unused-vars","'ADToBS' is defined but never used.","Identifier","unusedVar","'Loader' is defined but never used.","'Dispatch' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'switchI18nLanguage' is assigned a value but never used.","'i18nextData' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["3099"],"React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["3100"],"'setFieldTouched' is assigned a value but never used.","'useDispatch' is defined but never used.","React Hook React.useEffect has a missing dependency: 'getSchemeDetails'. Either include it or remove the dependency array. Outer scope values like 'window.location.hash' aren't valid dependencies because mutating them doesn't re-render the component.",["3101"],"'RootObject' is defined but never used.","'basicAuth' is assigned a value but never used.","'getGrantType' is assigned a value but never used.","'updatedDetails' is assigned a value but never used.","'TooltipLabel' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["3102"],["3103"],["3104"],["3105"],"'BSToAD' is defined but never used.",["3106"],["3107"],["3108"],["3109"],"'rateType' is assigned a value but never used.","'setRateType' is assigned a value but never used.","'ManageOtherParameters' is defined but never used.",["3110"],"'history' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["3111"],"'getMonthByLanguage' is defined but never used.","React Hook useEffect has a missing dependency: 'props.scheme?.system_date_format'. Either include it or remove the dependency array.",["3112"],"React Hook useEffect has missing dependencies: 'props.testParams', 'props.testResult', and 'props.type'. Either include them or remove the dependency array.",["3113"],"React Hook useEffect has missing dependencies: 'props.compareKey' and 'props.type'. Either include them or remove the dependency array.",["3114"],["3115"],"'getDefaultDate' is defined but never used.","'getPreviousExpenditureTotalAction' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getExpenditureAction' and 'getExpenditureCategoryAction'. Either include them or remove the dependency array.",["3116"],"'getYearFromDate' is defined but never used.","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["3117"],"'Table' is defined but never used.",["3118"],"React Hook useEffect has missing dependencies: 'geAllIncomeAction', 'getIncomeCategoryAction', and 'getIncomeExpenseImageAction'. Either include them or remove the dependency array.",["3119"],"React Hook useEffect has missing dependencies: 'getIncomeAction', 'getIncomeCategoryAction', and 'getPreviousIncomeTotalAction'. Either include them or remove the dependency array.",["3120"],"React Hook useEffect has missing dependencies: 'getExpenditureAction', 'getExpenditureCategoryAction', and 'getPreviousExpenditureTotalAction'. Either include them or remove the dependency array.",["3121"],"React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array.",["3122"],"React Hook useEffect has missing dependencies: 'onChange' and 'value'. Either include them or remove the dependency array.",["3123"],"React Hook useLayoutEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.",["3124"],"React Hook useCallback has a missing dependency: 'onChange'. Either include it or remove the dependency array.",["3125"],"React Hook useCallback has missing dependencies: 'closeOnSelect' and 'onSelect'. Either include them or remove the dependency array.",["3126"],["3127"],"React Hook useEffect has a missing dependency: 't'. Either include it or remove the dependency array.",["3128"],"React Hook useEffect has a missing dependency: 'props.options'. Either include it or remove the dependency array.",["3129"],"'t' is assigned a value but never used.","'getDataByArray' is assigned a value but never used.",["3130"],"React Hook useEffect has a missing dependency: 'props.compareKey'. Either include it or remove the dependency array.",["3131"],["3132"],["3133"],["3134"],"'placement' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.schemeDetails?.system_date_format'. Either include it or remove the dependency array.",["3135"],["3136"],["3137"],"'Button' is defined but never used.",["3138"],"'handleChange' is assigned a value but never used.","'handleBlur' is assigned a value but never used.","'errors' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["3139"],"'handleCreateOption' is assigned a value but never used.",["3140"],["3141"],["3142"],["3143"],["3144"],"'StyledSelect' is defined but never used.",["3145"],"'setFieldValue' is assigned a value but never used.",["3146"],"React Hook React.useEffect has a missing dependency: 'initialData'. Either include it or remove the dependency array. You can also do a functional update 'setInitialData(i => ...)' if you only need 'initialData' in the 'setInitialData' call.",["3147"],["3148"],["3149"],["3150"],["3151"],"'UserGroupIcon' is defined but never used.",["3152"],["3153"],["3154"],["3155"],["3156"],"'resetDeleteData' is assigned a value but never used.",["3157"],"'handleEditClick' is assigned a value but never used.",["3158"],"'RESPONSIBLE_OPTIONS' is defined but never used.",["3159"],"'Form' is defined but never used.",["3160"],["3161"],["3162"],["3163"],"'EditIcon' is defined but never used.","'getWaterTarrifsAction' is defined but never used.","'postUseBasedWaterTariffAction' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'events'. Either include it or remove the dependency array.",["3164"],["3165"],["3166"],["3167"],"'Props' is defined but never used.","'useState' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'GeneralCard' is defined but never used.","'Image' is defined but never used.",["3168"],"React Hook React.useEffect has a missing dependency: 'props.editData'. Either include it or remove the dependency array. If 'seetInitialData' needs the current value of 'props.editData', you can also switch to useReducer instead of useState and read 'props.editData' in the reducer.",["3169"],["3170"],"'TodayIcon' is defined but never used.","'onToday' is assigned a value but never used.","'disableToday' is assigned a value but never used.","'end_time' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'maxYear' and 'minYear'. Either include them or remove the dependency array.",["3171"],"'localeType' is defined but never used.",["3172"],"'useMemo' is defined but never used.","React Hook useMemo has a missing dependency: 'previousMonth'. Either include it or remove the dependency array.",["3173"],"'incomeExpenseImage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getIncomeAction', 'getIncomeCategoryAction', 'getIncomeExpenseImageAction', and 'getPreviousIncomeTotalAction'. Either include them or remove the dependency array.",["3174"],["3175"],["3176"],"'UserIcon' is defined but never used.",["3177"],["3178"],["3179"],["3180"],["3181"],["3182"],["3183"],["3184"],["3185"],["3186"],["3187"],["3188"],["3189"],["3190"],["3191"],["3192"],["3193"],["3194"],["3195"],["3196"],["3197"],["3198"],["3199"],["3200"],["3201"],["3202"],["3203"],["3204"],["3205"],["3206"],["3207"],["3208"],["3209"],["3210"],["3211"],["3212"],["3213"],["3214"],["3215"],["3216"],["3217"],["3218"],["3219"],["3220"],["3221"],["3222"],["3223"],["3224"],["3225"],["3226"],["3227"],["3228"],["3229"],["3230"],["3231"],["3232"],["3233"],["3234"],["3235"],["3236"],["3237"],["3238"],["3239"],["3240"],["3241"],["3242"],["3243"],["3244"],["3245"],["3246"],["3247"],["3248"],["3249"],["3250"],["3251"],["3252"],["3253"],["3254"],["3255"],"no-global-assign","no-unsafe-negation",{"desc":"3256","fix":"3257"},{"desc":"3258","fix":"3259"},{"desc":"3260","fix":"3261"},{"desc":"3262","fix":"3263"},{"desc":"3264","fix":"3265"},{"desc":"3266","fix":"3267"},{"desc":"3268","fix":"3269"},{"desc":"3270","fix":"3271"},{"desc":"3272","fix":"3273"},{"desc":"3274","fix":"3275"},{"desc":"3266","fix":"3276"},{"desc":"3268","fix":"3277"},{"desc":"3272","fix":"3278"},{"desc":"3279","fix":"3280"},{"desc":"3281","fix":"3282"},{"desc":"3283","fix":"3284"},{"desc":"3285","fix":"3286"},{"desc":"3283","fix":"3287"},{"desc":"3288","fix":"3289"},{"desc":"3290","fix":"3291"},{"desc":"3288","fix":"3292"},{"desc":"3293","fix":"3294"},{"desc":"3295","fix":"3296"},{"desc":"3297","fix":"3298"},{"desc":"3299","fix":"3300"},{"desc":"3301","fix":"3302"},{"desc":"3303","fix":"3304"},{"desc":"3305","fix":"3306"},{"desc":"3307","fix":"3308"},{"desc":"3266","fix":"3309"},{"desc":"3310","fix":"3311"},{"desc":"3312","fix":"3313"},{"desc":"3312","fix":"3314"},{"desc":"3315","fix":"3316"},{"desc":"3312","fix":"3317"},{"desc":"3315","fix":"3318"},{"desc":"3312","fix":"3319"},{"desc":"3320","fix":"3321"},{"desc":"3290","fix":"3322"},{"desc":"3323","fix":"3324"},{"desc":"3325","fix":"3326"},{"desc":"3327","fix":"3328"},{"desc":"3329","fix":"3330"},{"desc":"3272","fix":"3331"},{"desc":"3268","fix":"3332"},{"desc":"3268","fix":"3333"},{"desc":"3272","fix":"3334"},{"desc":"3325","fix":"3335"},{"desc":"3272","fix":"3336"},{"desc":"3337","fix":"3338"},{"desc":"3339","fix":"3340"},{"desc":"3290","fix":"3341"},{"desc":"3342","fix":"3343"},{"desc":"3290","fix":"3344"},{"desc":"3266","fix":"3345"},{"desc":"3346","fix":"3347"},{"desc":"3348","fix":"3349"},{"desc":"3325","fix":"3350"},{"desc":"3256","fix":"3351"},{"desc":"3325","fix":"3352"},{"desc":"3353","fix":"3354"},{"desc":"3266","fix":"3355"},{"desc":"3356","fix":"3357"},{"desc":"3329","fix":"3358"},{"desc":"3329","fix":"3359"},{"desc":"3360","fix":"3361"},{"desc":"3362","fix":"3363"},{"desc":"3364","fix":"3365"},{"desc":"3366","fix":"3367"},{"desc":"3362","fix":"3368"},{"desc":"3272","fix":"3369"},{"desc":"3370","fix":"3371"},{"desc":"3329","fix":"3372"},{"desc":"3373","fix":"3374"},{"desc":"3375","fix":"3376"},{"desc":"3377","fix":"3378"},{"desc":"3379","fix":"3380"},{"desc":"3297","fix":"3381"},{"desc":"3293","fix":"3382"},{"desc":"3256","fix":"3383"},{"desc":"3258","fix":"3384"},{"desc":"3262","fix":"3385"},{"desc":"3260","fix":"3386"},{"desc":"3264","fix":"3387"},{"desc":"3270","fix":"3388"},{"desc":"3272","fix":"3389"},{"desc":"3274","fix":"3390"},{"desc":"3266","fix":"3391"},{"desc":"3268","fix":"3392"},{"desc":"3272","fix":"3393"},{"desc":"3266","fix":"3394"},{"desc":"3268","fix":"3395"},{"desc":"3279","fix":"3396"},{"desc":"3310","fix":"3397"},{"desc":"3312","fix":"3398"},{"desc":"3312","fix":"3399"},{"desc":"3315","fix":"3400"},{"desc":"3312","fix":"3401"},{"desc":"3315","fix":"3402"},{"desc":"3312","fix":"3403"},{"desc":"3288","fix":"3404"},{"desc":"3290","fix":"3405"},{"desc":"3288","fix":"3406"},{"desc":"3299","fix":"3407"},{"desc":"3301","fix":"3408"},{"desc":"3303","fix":"3409"},{"desc":"3305","fix":"3410"},{"desc":"3307","fix":"3411"},{"desc":"3293","fix":"3412"},{"desc":"3266","fix":"3413"},{"desc":"3281","fix":"3414"},{"desc":"3283","fix":"3415"},{"desc":"3285","fix":"3416"},{"desc":"3283","fix":"3417"},{"desc":"3295","fix":"3418"},{"desc":"3297","fix":"3419"},{"desc":"3293","fix":"3420"},{"desc":"3379","fix":"3421"},{"desc":"3297","fix":"3422"},{"desc":"3272","fix":"3423"},{"desc":"3325","fix":"3424"},{"desc":"3272","fix":"3425"},{"desc":"3272","fix":"3426"},{"desc":"3339","fix":"3427"},{"desc":"3290","fix":"3428"},{"desc":"3266","fix":"3429"},{"desc":"3337","fix":"3430"},{"desc":"3325","fix":"3431"},{"desc":"3325","fix":"3432"},{"desc":"3353","fix":"3433"},{"desc":"3256","fix":"3434"},{"desc":"3329","fix":"3435"},{"desc":"3329","fix":"3436"},{"desc":"3266","fix":"3437"},{"desc":"3362","fix":"3438"},{"desc":"3364","fix":"3439"},{"desc":"3366","fix":"3440"},{"desc":"3362","fix":"3441"},{"desc":"3375","fix":"3442"},{"desc":"3373","fix":"3443"},{"desc":"3320","fix":"3444"},{"desc":"3290","fix":"3445"},{"desc":"3268","fix":"3446"},{"desc":"3342","fix":"3447"},{"desc":"3290","fix":"3448"},{"desc":"3325","fix":"3449"},{"desc":"3329","fix":"3450"},{"desc":"3323","fix":"3451"},{"desc":"3327","fix":"3452"},{"desc":"3268","fix":"3453"},{"desc":"3348","fix":"3454"},{"desc":"3356","fix":"3455"},{"desc":"3346","fix":"3456"},{"desc":"3360","fix":"3457"},{"desc":"3272","fix":"3458"},{"desc":"3370","fix":"3459"},{"desc":"3377","fix":"3460"},{"desc":"3329","fix":"3461"},"Update the dependencies array to be: [dispatch]",{"range":"3462","text":"3463"},"Update the dependencies array to be: [loginUser, props, history]",{"range":"3464","text":"3465"},"Update the dependencies array to be: [props, props.schemeDetails]",{"range":"3466","text":"3467"},"Update the dependencies array to be: [getSchemeDetails, props.langauge]",{"range":"3468","text":"3469"},"Update the dependencies array to be: [language, props, schemeDetails]",{"range":"3470","text":"3471"},"Update the dependencies array to be: [props, props.schemeSlug]",{"range":"3472","text":"3473"},"Update the dependencies array to be: [props.language, activeTab, props.schemeSlug, props]",{"range":"3474","text":"3475"},"Update the dependencies array to be: [activeTab, props, props.schemeSlug]",{"range":"3476","text":"3477"},"Update the dependencies array to be: [props, props.language, props.schemeSlug]",{"range":"3478","text":"3479"},"Update the dependencies array to be: [props.language, activeTab, props.schemeSlug, selectedYear, activeDate, props.schemeDetails, props]",{"range":"3480","text":"3481"},{"range":"3482","text":"3473"},{"range":"3483","text":"3475"},{"range":"3484","text":"3479"},"Update the dependencies array to be: [props, props.language, props.schemeDetails]",{"range":"3485","text":"3486"},"Update the dependencies array to be: [props.scheme?.system_date_format, props.testResult]",{"range":"3487","text":"3488"},"Update the dependencies array to be: [chartData, props.testParams, props.testResult, props.type, selected]",{"range":"3489","text":"3490"},"Update the dependencies array to be: [props.compareKey, props.testResult, props.type]",{"range":"3491","text":"3492"},{"range":"3493","text":"3490"},"Update the dependencies array to be: [language, props.activeDate, props.endDate, schemeSlug, schemeDetails, props.activeTab, getExpenditureAction, getExpenditureCategoryAction]",{"range":"3494","text":"3495"},"Update the dependencies array to be: [chartData, options, selected]",{"range":"3496","text":"3497"},{"range":"3498","text":"3495"},"Update the dependencies array to be: [language, props.activeDate, props.endDate, schemeSlug, schemeDetails, props.activeTab, geAllIncomeAction, getIncomeCategoryAction, getIncomeExpenseImageAction]",{"range":"3499","text":"3500"},"Update the dependencies array to be: [language, schemeSlug, props.activeDate, schemeDetails, props.activeTab, getIncomeAction, getIncomeCategoryAction, getPreviousIncomeTotalAction]",{"range":"3501","text":"3502"},"Update the dependencies array to be: [language, props.activeDate, schemeSlug, schemeDetails, props.activeTab, getExpenditureAction, getExpenditureCategoryAction, getPreviousExpenditureTotalAction]",{"range":"3503","text":"3504"},"Update the dependencies array to be: [onChange, value]",{"range":"3505","text":"3506"},"Update the dependencies array to be: [engDate, onChange, value]",{"range":"3507","text":"3508"},"Update the dependencies array to be: [handleClickOutside, showCalendar]",{"range":"3509","text":"3510"},"Update the dependencies array to be: [onChange]",{"range":"3511","text":"3512"},"Update the dependencies array to be: [closeOnSelect, onSelect]",{"range":"3513","text":"3514"},{"range":"3515","text":"3473"},"Update the dependencies array to be: [props.waterSupplyData, t]",{"range":"3516","text":"3517"},"Update the dependencies array to be: [chartData, props.options, selected]",{"range":"3518","text":"3519"},{"range":"3520","text":"3519"},"Update the dependencies array to be: [props.compareKey, props.waterSupplyData]",{"range":"3521","text":"3522"},{"range":"3523","text":"3519"},{"range":"3524","text":"3522"},{"range":"3525","text":"3519"},"Update the dependencies array to be: [props.language, props.maintainanceCost, props.intervalData, props.schemeDetails?.system_date_format]",{"range":"3526","text":"3527"},{"range":"3528","text":"3497"},"Update the dependencies array to be: [props, props.langugae]",{"range":"3529","text":"3530"},"Update the dependencies array to be: [props, props.language]",{"range":"3531","text":"3532"},"Update the dependencies array to be: [dispatch, userDetails]",{"range":"3533","text":"3534"},"Update the dependencies array to be: [props]",{"range":"3535","text":"3536"},{"range":"3537","text":"3479"},{"range":"3538","text":"3475"},{"range":"3539","text":"3475"},{"range":"3540","text":"3479"},{"range":"3541","text":"3532"},{"range":"3542","text":"3479"},"Update the dependencies array to be: [initialData, props.activeDate]",{"range":"3543","text":"3544"},"Update the dependencies array to be: [props.incomeExpenseData, props.actualCF, props.expenseCF, t]",{"range":"3545","text":"3546"},{"range":"3547","text":"3497"},"Update the dependencies array to be: [props.language, props.maintainanceCost, t]",{"range":"3548","text":"3549"},{"range":"3550","text":"3497"},{"range":"3551","text":"3473"},"Update the dependencies array to be: [props.maintainanceCost, props.intervalData, props.schemeDetails?.system_date_format]",{"range":"3552","text":"3553"},"Update the dependencies array to be: [incomeExpenseData, props.intervalData, props.schemeDetails?.system_date_format]",{"range":"3554","text":"3555"},{"range":"3556","text":"3532"},{"range":"3557","text":"3463"},{"range":"3558","text":"3532"},"Update the dependencies array to be: [props, props.scheme]",{"range":"3559","text":"3560"},{"range":"3561","text":"3473"},"Update the dependencies array to be: [incomeExpenseData, t]",{"range":"3562","text":"3563"},{"range":"3564","text":"3536"},{"range":"3565","text":"3536"},"Update the dependencies array to be: [props.maintainanceCost, t]",{"range":"3566","text":"3567"},"Update the dependencies array to be: [events]",{"range":"3568","text":"3569"},"Update the dependencies array to be: [calenderDate.bsDay, calenderDate.bsMonth, events]",{"range":"3570","text":"3571"},"Update the dependencies array to be: [calenderDate.bsDay, calenderDate.bsYear, events]",{"range":"3572","text":"3573"},{"range":"3574","text":"3569"},{"range":"3575","text":"3479"},"Update the dependencies array to be: [props.editData, props.scheme]",{"range":"3576","text":"3577"},{"range":"3578","text":"3536"},"Update the dependencies array to be: [maxYear, minYear]",{"range":"3579","text":"3580"},"Update the dependencies array to be: [props.editData, props.activeDate, initialData]",{"range":"3581","text":"3582"},"Update the dependencies array to be: [previousMonth, previousYear]",{"range":"3583","text":"3584"},"Update the dependencies array to be: [language, props.activeDate, schemeSlug, schemeDetails, props.activeTab, getIncomeAction, getIncomeCategoryAction, getPreviousIncomeTotalAction, getIncomeExpenseImageAction]",{"range":"3585","text":"3586"},{"range":"3587","text":"3504"},{"range":"3588","text":"3500"},{"range":"3589","text":"3463"},{"range":"3590","text":"3465"},{"range":"3591","text":"3469"},{"range":"3592","text":"3467"},{"range":"3593","text":"3471"},{"range":"3594","text":"3477"},{"range":"3595","text":"3479"},{"range":"3596","text":"3481"},{"range":"3597","text":"3473"},{"range":"3598","text":"3475"},{"range":"3599","text":"3479"},{"range":"3600","text":"3473"},{"range":"3601","text":"3475"},{"range":"3602","text":"3486"},{"range":"3603","text":"3517"},{"range":"3604","text":"3519"},{"range":"3605","text":"3519"},{"range":"3606","text":"3522"},{"range":"3607","text":"3519"},{"range":"3608","text":"3522"},{"range":"3609","text":"3519"},{"range":"3610","text":"3495"},{"range":"3611","text":"3497"},{"range":"3612","text":"3495"},{"range":"3613","text":"3506"},{"range":"3614","text":"3508"},{"range":"3615","text":"3510"},{"range":"3616","text":"3512"},{"range":"3617","text":"3514"},{"range":"3618","text":"3500"},{"range":"3619","text":"3473"},{"range":"3620","text":"3488"},{"range":"3621","text":"3490"},{"range":"3622","text":"3492"},{"range":"3623","text":"3490"},{"range":"3624","text":"3502"},{"range":"3625","text":"3504"},{"range":"3626","text":"3500"},{"range":"3627","text":"3586"},{"range":"3628","text":"3504"},{"range":"3629","text":"3479"},{"range":"3630","text":"3532"},{"range":"3631","text":"3479"},{"range":"3632","text":"3479"},{"range":"3633","text":"3546"},{"range":"3634","text":"3497"},{"range":"3635","text":"3473"},{"range":"3636","text":"3544"},{"range":"3637","text":"3532"},{"range":"3638","text":"3532"},{"range":"3639","text":"3560"},{"range":"3640","text":"3463"},{"range":"3641","text":"3536"},{"range":"3642","text":"3536"},{"range":"3643","text":"3473"},{"range":"3644","text":"3569"},{"range":"3645","text":"3571"},{"range":"3646","text":"3573"},{"range":"3647","text":"3569"},{"range":"3648","text":"3582"},{"range":"3649","text":"3580"},{"range":"3650","text":"3527"},{"range":"3651","text":"3497"},{"range":"3652","text":"3475"},{"range":"3653","text":"3549"},{"range":"3654","text":"3497"},{"range":"3655","text":"3532"},{"range":"3656","text":"3536"},{"range":"3657","text":"3530"},{"range":"3658","text":"3534"},{"range":"3659","text":"3475"},{"range":"3660","text":"3555"},{"range":"3661","text":"3563"},{"range":"3662","text":"3553"},{"range":"3663","text":"3567"},{"range":"3664","text":"3479"},{"range":"3665","text":"3577"},{"range":"3666","text":"3584"},{"range":"3667","text":"3536"},[2151,2153],"[dispatch]",[1552,1572],"[loginUser, props, history]",[1463,1484],"[props, props.schemeDetails]",[2207,2245],"[getSchemeDetails, props.langauge]",[1329,1354],"[language, props, schemeDetails]",[1526,1544],"[props, props.schemeSlug]",[2087,2132],"[props.language, activeTab, props.schemeSlug, props]",[1492,1521],"[activeTab, props, props.schemeSlug]",[1937,1971],"[props, props.language, props.schemeSlug]",[3362,3454],"[props.language, activeTab, props.schemeSlug, selectedYear, activeDate, props.schemeDetails, props]",[1104,1122],[1379,1424],[1289,1323],[867,904],"[props, props.language, props.schemeDetails]",[2027,2045],"[props.scheme?.system_date_format, props.testResult]",[4716,4737],"[chartData, props.testParams, props.testResult, props.type, selected]",[1752,1770],"[props.compareKey, props.testResult, props.type]",[4493,4514],[1687,1774],"[language, props.activeDate, props.endDate, schemeSlug, schemeDetails, props.activeTab, getExpenditureAction, getExpenditureCategoryAction]",[4991,5012],"[chartData, options, selected]",[1687,1774],[1898,1985],"[language, props.activeDate, props.endDate, schemeSlug, schemeDetails, props.activeTab, geAllIncomeAction, getIncomeCategoryAction, getIncomeExpenseImageAction]",[2818,2890],"[language, schemeSlug, props.activeDate, schemeDetails, props.activeTab, getIncomeAction, getIncomeCategoryAction, getPreviousIncomeTotalAction]",[3026,3098],"[language, props.activeDate, schemeSlug, schemeDetails, props.activeTab, getExpenditureAction, getExpenditureCategoryAction, getPreviousExpenditureTotalAction]",[1650,1657],"[onChange, value]",[1911,1920],"[engDate, onChange, value]",[2432,2446],"[handleClickOutside, showCalendar]",[3497,3499],"[onChange]",[3735,3737],"[closeOnSelect, onSelect]",[1140,1158],[2063,2086],"[props.waterSupplyData, t]",[2988,3009],"[chartData, props.options, selected]",[3979,4000],[1666,1689],"[props.compareKey, props.waterSupplyData]",[2442,2463],[1415,1438],[2112,2133],[5804,5864],"[props.language, props.maintainanceCost, props.intervalData, props.schemeDetails?.system_date_format]",[6846,6867],[831,847],"[props, props.langugae]",[1486,1502],"[props, props.language]",[2984,2997],"[dispatch, userDetails]",[819,821],"[props]",[951,985],[1165,1210],[1175,1220],[1108,1142],[1362,1378],[2088,2122],[2853,2871],"[initialData, props.activeDate]",[2999,3057],"[props.incomeExpenseData, props.actualCF, props.expenseCF, t]",[3916,3937],[4990,5030],"[props.language, props.maintainanceCost, t]",[5966,5987],[748,766],[4347,4391],"[props.maintainanceCost, props.intervalData, props.schemeDetails?.system_date_format]",[1997,2036],"[incomeExpenseData, props.intervalData, props.schemeDetails?.system_date_format]",[1050,1066],[1081,1083],[1261,1277],[5006,5020],"[props, props.scheme]",[3777,3795],[1450,1469],"[incomeExpenseData, t]",[926,928],[1047,1049],[3682,3706],"[props.maintainanceCost, t]",[4194,4196],"[events]",[4906,4920],"[calenderDate.bsDay, calenderDate.bsMonth, events]",[5641,5655],"[calenderDate.bsDay, calenderDate.bsYear, events]",[6209,6211],[1448,1482],[1820,1834],"[props.editData, props.scheme]",[1118,1120],[1151,1153],"[maxYear, minYear]",[2746,2780],"[props.editData, props.activeDate, initialData]",[1526,1540],"[previousMonth, previousYear]",[2621,2693],"[language, props.activeDate, schemeSlug, schemeDetails, props.activeTab, getIncomeAction, getIncomeCategoryAction, getPreviousIncomeTotalAction, getIncomeExpenseImageAction]",[2261,2333],[1898,1985],[2151,2153],[1552,1572],[2207,2245],[1463,1484],[1329,1354],[1492,1521],[1937,1971],[3362,3454],[1104,1122],[1379,1424],[1289,1323],[1526,1544],[2087,2132],[867,904],[2063,2086],[2988,3009],[3979,4000],[1666,1689],[2442,2463],[1415,1438],[2112,2133],[1687,1774],[4991,5012],[1687,1774],[1650,1657],[1911,1920],[2432,2446],[3497,3499],[3735,3737],[1898,1985],[1140,1158],[2027,2045],[4716,4737],[1752,1770],[4493,4514],[2818,2890],[3026,3098],[1898,1985],[2621,2693],[2261,2333],[951,985],[1362,1378],[2088,2122],[1108,1142],[2999,3057],[3916,3937],[748,766],[2853,2871],[1050,1066],[1261,1277],[5006,5020],[1081,1083],[1047,1049],[926,928],[3777,3795],[4194,4196],[4906,4920],[5641,5655],[6209,6211],[2746,2780],[1151,1153],[5804,5864],[6846,6867],[1175,1220],[4990,5030],[5966,5987],[1486,1502],[819,821],[831,847],[2984,2997],[1165,1210],[1997,2036],[1450,1469],[4347,4391],[3682,3706],[1448,1482],[1820,1834],[1526,1540],[1118,1120]]